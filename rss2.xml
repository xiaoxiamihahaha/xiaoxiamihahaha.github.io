<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>su的ctfer进阶之路</title>
    <link>http://canoepassed.top/</link>
    
    <atom:link href="http://canoepassed.top/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>落花人独立，微雨燕双飞</description>
    <pubDate>Mon, 20 May 2024 13:53:39 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>BJDCTF2020EasyRSA</title>
      <link>http://canoepassed.top/2024/05/20/Crypto/BJDCTF2020EasyRSA/</link>
      <guid>http://canoepassed.top/2024/05/20/Crypto/BJDCTF2020EasyRSA/</guid>
      <pubDate>Mon, 20 May 2024 13:53:13 GMT</pubDate>
      
        
        
      <description>
</description>
        
      
      
      
      <content:encoded><![CDATA[]]></content:encoded>
      
      
      
      
      <comments>http://canoepassed.top/2024/05/20/Crypto/BJDCTF2020EasyRSA/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>BJDCTF2020rsa</title>
      <link>http://canoepassed.top/2024/05/20/Crypto/BJDCTF2020rsa/</link>
      <guid>http://canoepassed.top/2024/05/20/Crypto/BJDCTF2020rsa/</guid>
      <pubDate>Mon, 20 May 2024 11:49:32 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;原题：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;b</description>
        
      
      
      
      <content:encoded><![CDATA[<p>原题：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> getPrime,bytes_to_long</span><br><span class="line"></span><br><span class="line">flag=<span class="built_in">open</span>(<span class="string">"flag"</span>,<span class="string">"rb"</span>).read()</span><br><span class="line"></span><br><span class="line">p=getPrime(<span class="number">1024</span>)</span><br><span class="line">q=getPrime(<span class="number">1024</span>)</span><br><span class="line"><span class="keyword">assert</span>(e&lt;<span class="number">100000</span>)</span><br><span class="line">n=p*q</span><br><span class="line">m=bytes_to_long(flag)</span><br><span class="line">c=<span class="built_in">pow</span>(m,e,n)</span><br><span class="line"><span class="built_in">print</span> c,n</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(<span class="number">294</span>,e,n)</span><br><span class="line"></span><br><span class="line">p=getPrime(<span class="number">1024</span>)</span><br><span class="line">n=p*q</span><br><span class="line">m=bytes_to_long(<span class="string">"BJD"</span>*<span class="number">32</span>)</span><br><span class="line">c=<span class="built_in">pow</span>(m,e,n)</span><br><span class="line"><span class="built_in">print</span> c,n</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">output:</span></span><br><span class="line"><span class="string">12641635617803746150332232646354596292707861480200207537199141183624438303757120570096741248020236666965755798009656547738616399025300123043766255518596149348930444599820675230046423373053051631932557230849083426859490183732303751744004874183062594856870318614289991675980063548316499486908923209627563871554875612702079100567018698992935818206109087568166097392314105717555482926141030505639571708876213167112187962584484065321545727594135175369233925922507794999607323536976824183162923385005669930403448853465141405846835919842908469787547341752365471892495204307644586161393228776042015534147913888338316244169120  13508774104460209743306714034546704137247627344981133461801953479736017021401725818808462898375994767375627749494839671944543822403059978073813122441407612530658168942987820256786583006947001711749230193542370570950705530167921702835627122401475251039000775017381633900222474727396823708695063136246115652622259769634591309421761269548260984426148824641285010730983215377509255011298737827621611158032976420011662547854515610597955628898073569684158225678333474543920326532893446849808112837476684390030976472053905069855522297850688026960701186543428139843783907624317274796926248829543413464754127208843070331063037</span></span><br><span class="line"><span class="string">381631268825806469518166370387352035475775677163615730759454343913563615970881967332407709901235637718936184198930226303761876517101208677107311006065728014220477966000620964056616058676999878976943319063836649085085377577273214792371548775204594097887078898598463892440141577974544939268247818937936607013100808169758675042264568547764031628431414727922168580998494695800403043312406643527637667466318473669542326169218665366423043579003388486634167642663495896607282155808331902351188500197960905672207046579647052764579411814305689137519860880916467272056778641442758940135016400808740387144508156358067955215018</span></span><br><span class="line"><span class="string">979153370552535153498477459720877329811204688208387543826122582132404214848454954722487086658061408795223805022202997613522014736983452121073860054851302343517756732701026667062765906277626879215457936330799698812755973057557620930172778859116538571207100424990838508255127616637334499680058645411786925302368790414768248611809358160197554369255458675450109457987698749584630551177577492043403656419968285163536823819817573531356497236154342689914525321673807925458651854768512396355389740863270148775362744448115581639629326362342160548500035000156097215446881251055505465713854173913142040976382500435185442521721  12806210903061368369054309575159360374022344774547459345216907128193957592938071815865954073287532545947370671838372144806539753829484356064919357285623305209600680570975224639214396805124350862772159272362778768036844634760917612708721787320159318432456050806227784435091161119982613987303255995543165395426658059462110056431392517548717447898084915167661172362984251201688639469652283452307712821398857016487590794996544468826705600332208535201443322267298747117528882985955375246424812616478327182399461709978893464093245135530135430007842223389360212803439850867615121148050034887767584693608776323252233254261047</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>题目提示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e=<span class="number">52361</span></span><br></pre></td></tr></table></figure><p>求解e（虽然题目已经给提示了，但是还是写一下求解e的方法）</p><p>解析：已知了两次输出的c和n，pow(294,e,n)值</p><p>要求m需要知道d，求d需要e、p和q的值，e可以根据pow(294,e,n)来爆破，也可以根据第二次的c和n来爆破，已知<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.339ex" role="img" focusable="false" viewbox="0 -442 1036.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></g></svg></mjx-container></span>和<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.339ex" role="img" focusable="false" viewbox="0 -442 1036.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container></span>的值，且<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.339ex" role="img" focusable="false" viewbox="0 -442 1036.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></g></svg></mjx-container></span> = <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="2.126ex" height="1.439ex" role="img" focusable="false" viewbox="0 -442 939.6 636"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mn" transform="translate(536,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></g></svg></mjx-container></span><em>q，<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.339ex" role="img" focusable="false" viewbox="0 -442 1036.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container></span> = <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="2.126ex" height="1.439ex" role="img" focusable="false" viewbox="0 -442 939.6 636"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mn" transform="translate(536,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container></span></em>q，所以<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.339ex" role="img" focusable="false" viewbox="0 -442 1036.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></g></svg></mjx-container></span>和<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.339ex" role="img" focusable="false" viewbox="0 -442 1036.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container></span>的最大公因数为q，可以根据<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.339ex" role="img" focusable="false" viewbox="0 -442 1036.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></g></svg></mjx-container></span>和<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.339ex" role="img" focusable="false" viewbox="0 -442 1036.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container></span>的值求得q，以求得p</p><h2 id="求e">求e：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">c = <span class="number">381631268825806469518166370387352035475775677163615730759454343913563615970881967332407709901235637718936184198930226303761876517101208677107311006065728014220477966000620964056616058676999878976943319063836649085085377577273214792371548775204594097887078898598463892440141577974544939268247818937936607013100808169758675042264568547764031628431414727922168580998494695800403043312406643527637667466318473669542326169218665366423043579003388486634167642663495896607282155808331902351188500197960905672207046579647052764579411814305689137519860880916467272056778641442758940135016400808740387144508156358067955215018</span></span><br><span class="line">n = <span class="number">13508774104460209743306714034546704137247627344981133461801953479736017021401725818808462898375994767375627749494839671944543822403059978073813122441407612530658168942987820256786583006947001711749230193542370570950705530167921702835627122401475251039000775017381633900222474727396823708695063136246115652622259769634591309421761269548260984426148824641285010730983215377509255011298737827621611158032976420011662547854515610597955628898073569684158225678333474543920326532893446849808112837476684390030976472053905069855522297850688026960701186543428139843783907624317274796926248829543413464754127208843070331063037</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100000</span>):</span><br><span class="line">res = <span class="built_in">pow</span>(<span class="number">294</span>,e,n)</span><br><span class="line"><span class="keyword">if</span> res == c:</span><br><span class="line"><span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#52361</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">e = <span class="number">52361</span></span><br><span class="line">c = <span class="number">12641635617803746150332232646354596292707861480200207537199141183624438303757120570096741248020236666965755798009656547738616399025300123043766255518596149348930444599820675230046423373053051631932557230849083426859490183732303751744004874183062594856870318614289991675980063548316499486908923209627563871554875612702079100567018698992935818206109087568166097392314105717555482926141030505639571708876213167112187962584484065321545727594135175369233925922507794999607323536976824183162923385005669930403448853465141405846835919842908469787547341752365471892495204307644586161393228776042015534147913888338316244169120</span></span><br><span class="line">n = <span class="number">13508774104460209743306714034546704137247627344981133461801953479736017021401725818808462898375994767375627749494839671944543822403059978073813122441407612530658168942987820256786583006947001711749230193542370570950705530167921702835627122401475251039000775017381633900222474727396823708695063136246115652622259769634591309421761269548260984426148824641285010730983215377509255011298737827621611158032976420011662547854515610597955628898073569684158225678333474543920326532893446849808112837476684390030976472053905069855522297850688026960701186543428139843783907624317274796926248829543413464754127208843070331063037</span></span><br><span class="line">n1 = <span class="number">12806210903061368369054309575159360374022344774547459345216907128193957592938071815865954073287532545947370671838372144806539753829484356064919357285623305209600680570975224639214396805124350862772159272362778768036844634760917612708721787320159318432456050806227784435091161119982613987303255995543165395426658059462110056431392517548717447898084915167661172362984251201688639469652283452307712821398857016487590794996544468826705600332208535201443322267298747117528882985955375246424812616478327182399461709978893464093245135530135430007842223389360212803439850867615121148050034887767584693608776323252233254261047</span></span><br><span class="line"></span><br><span class="line">q = gcd(n, n1)</span><br><span class="line">p = n // q</span><br><span class="line"></span><br><span class="line">d = libnum.invmod(e, (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"><span class="built_in">print</span>(libnum.n2s(<span class="built_in">int</span>(m)).decode())</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://canoepassed.top/categories/Crypto/">Crypto</category>
      
      
      <category domain="http://canoepassed.top/tags/RSA/">RSA</category>
      
      
      <comments>http://canoepassed.top/2024/05/20/Crypto/BJDCTF2020rsa/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>CISCN2021初赛RSA</title>
      <link>http://canoepassed.top/2024/05/20/Crypto/CISCN2021%E5%88%9D%E8%B5%9BRSA/</link>
      <guid>http://canoepassed.top/2024/05/20/Crypto/CISCN2021%E5%88%9D%E8%B5%9BRSA/</guid>
      <pubDate>Mon, 20 May 2024 11:23:47 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;原题：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;b</description>
        
      
      
      
      <content:encoded><![CDATA[<p>原题：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> text,flag</span><br><span class="line"><span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes,bytes_to_long,getPrime</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> md5.new(text).hexdigest() == flag[<span class="number">6</span>:-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">msg1 = text[:xx]</span><br><span class="line">msg2 = text[xx:yy]</span><br><span class="line">msg3 = text[yy:]</span><br><span class="line"></span><br><span class="line">msg1 = bytes_to_long(msg1)</span><br><span class="line">msg2 = bytes_to_long(msg2)</span><br><span class="line">msg3 = bytes_to_long(msg3)</span><br><span class="line"></span><br><span class="line">p1 = getPrime(<span class="number">512</span>)</span><br><span class="line">q1 = getPrime(<span class="number">512</span>)</span><br><span class="line">N1 = p1*q1</span><br><span class="line">e1 = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg1,e1,N1)</span><br><span class="line"><span class="built_in">print</span> (e1,N1) <span class="comment"># 低加密指数解密</span></span><br><span class="line"></span><br><span class="line">p2 = getPrime(<span class="number">512</span>)</span><br><span class="line">q2 = getPrime(<span class="number">512</span>)</span><br><span class="line">N2 = p2*q2</span><br><span class="line">e2 = <span class="number">17</span></span><br><span class="line">e3 = <span class="number">65537</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg2,e2,N2)</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg2,e3,N2)</span><br><span class="line"><span class="built_in">print</span> (e2,N2)</span><br><span class="line"><span class="built_in">print</span> (e3,N2)   <span class="comment"># 共模攻击</span></span><br><span class="line"></span><br><span class="line">p3 = getPrime(<span class="number">512</span>)</span><br><span class="line">q3 = getPrime(<span class="number">512</span>)</span><br><span class="line">N3 = p3*q3</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg3,e3,N3)</span><br><span class="line"><span class="built_in">print</span> (e3,N3)</span><br><span class="line"><span class="built_in">print</span> p3&gt;&gt;<span class="number">200</span>  <span class="comment"># sage p高位泄露类型</span></span><br><span class="line"></span><br><span class="line">out：</span><br><span class="line"></span><br><span class="line"><span class="number">19105765285510667553313898813498220212421177527647187802549913914263968945493144633390670605116251064550364704789358830072133349108808799075021540479815182657667763617178044110939458834654922540704196330451979349353031578518479199454480458137984734402248011464467312753683234543319955893</span></span><br><span class="line">(<span class="number">3</span>, <span class="number">123814470394550598363280518848914546938137731026777975885846733672494493975703069760053867471836249473290828799962586855892685902902050630018312939010564945676699712246249820341712155938398068732866646422826619477180434858148938235662092482058999079105450136181685141895955574548671667320167741641072330259009L</span>)</span><br><span class="line"><span class="number">54995751387258798791895413216172284653407054079765769704170763023830130981480272943338445245689293729308200574217959018462512790523622252479258419498858307898118907076773470253533344877959508766285730509067829684427375759345623701605997067135659404296663877453758701010726561824951602615501078818914410959610</span></span><br><span class="line"><span class="number">91290935267458356541959327381220067466104890455391103989639822855753797805354139741959957951983943146108552762756444475545250343766798220348240377590112854890482375744876016191773471853704014735936608436210153669829454288199838827646402742554134017280213707222338496271289894681312606239512924842845268366950</span></span><br><span class="line">(<span class="number">17</span>, <span class="number">111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977L</span>)</span><br><span class="line">(<span class="number">65537</span>, <span class="number">111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977L</span>)</span><br><span class="line"><span class="number">59213696442373765895948702611659756779813897653022080905635545636905434038306468935283962686059037461940227618715695875589055593696352594630107082714757036815875497138523738695066811985036315624927897081153190329636864005133757096991035607918106529151451834369442313673849563635248465014289409374291381429646</span></span><br><span class="line">(<span class="number">65537</span>, <span class="number">113432930155033263769270712825121761080813952100666693606866355917116416984149165507231925180593860836255402950358327422447359200689537217528547623691586008952619063846801829802637448874451228957635707553980210685985215887107300416969549087293746310593988908287181025770739538992559714587375763131132963783147L</span>)</span><br><span class="line"><span class="number">7117286695925472918001071846973900342640107770214858928188419765628151478620236042882657992902</span></span><br></pre></td></tr></table></figure><p>首先仔细分析题目加密脚本，明文被分为了三部分，最后，需要将这三段明文进行md5加密才是最后的flag，先看第一部分e的值很小，很明显是RSA中的低加密指数分解攻击。</p><figure><img src="/2024/05/20/Crypto/CISCN2021%E5%88%9D%E8%B5%9BRSA/低加密指数攻击.png" alt="低加密指数攻击"><figcaption>低加密指数攻击</figcaption></figure><p>对应的看out文件输出的数值写脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">c = <span class="number">19105765285510667553313898813498220212421177527647187802549913914263968945493144633390670605116251064550364704789358830072133349108808799075021540479815182657667763617178044110939458834654922540704196330451979349353031578518479199454480458137984734402248011464467312753683234543319955893</span></span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">n = <span class="number">123814470394550598363280518848914546938137731026777975885846733672494493975703069760053867471836249473290828799962586855892685902902050630018312939010564945676699712246249820341712155938398068732866646422826619477180434858148938235662092482058999079105450136181685141895955574548671667320167741641072330259009</span></span><br><span class="line"></span><br><span class="line">k = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    m1 = gmpy2.iroot(k*n+c,e)</span><br><span class="line">    k = k + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> m1[<span class="number">1</span>]:</span><br><span class="line">        <span class="built_in">print</span>(m1[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment">#267334379257781603687613466720913534310764480084016847281446486946801530200295563483353634338157</span></span><br></pre></td></tr></table></figure><p>第二部分有两个c,e的值，并且n的值是一样，很明显是RSA的共模攻击。</p><p>拓展：RSA共模攻击：对同一段明文m,分别用两个不同的密钥对来做加密，但是不同的密密钥对中所采用的n是相同的，这是就可能产生共模攻击，此时无需求解d即可破解明文。</p><p>解密脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">c1 = <span class="number">54995751387258798791895413216172284653407054079765769704170763023830130981480272943338445245689293729308200574217959018462512790523622252479258419498858307898118907076773470253533344877959508766285730509067829684427375759345623701605997067135659404296663877453758701010726561824951602615501078818914410959610</span></span><br><span class="line">c2 = <span class="number">91290935267458356541959327381220067466104890455391103989639822855753797805354139741959957951983943146108552762756444475545250343766798220348240377590112854890482375744876016191773471853704014735936608436210153669829454288199838827646402742554134017280213707222338496271289894681312606239512924842845268366950</span></span><br><span class="line">e1 = <span class="number">17</span></span><br><span class="line">e2 = <span class="number">65537</span></span><br><span class="line">n1 = <span class="number">111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977</span></span><br><span class="line">n2 = <span class="number">111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977</span></span><br><span class="line"></span><br><span class="line">s1 = gmpy2.gcdext(e1,e2)[<span class="number">1</span>]</span><br><span class="line">s2 = gmpy2.gcdext(e1,e2)[<span class="number">2</span>]</span><br><span class="line">m2= <span class="built_in">pow</span>(c1,s1,n2) * <span class="built_in">pow</span>(c2,s2,n2) % n2</span><br><span class="line"><span class="built_in">print</span>(m2)</span><br><span class="line"><span class="comment">#4193305853284549103821195807609492624095031428085219879448342104337322945001387680236011960472296815293233144303730273979905837762067652913308898433728800864776794638198055607422503065410595894676740531680367227696622352026247676452540064020322619036125381146346603655445487695574824919137</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第三部分看到最后输出的是p3&gt;&gt;200,p高位泄露类型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#p4已知高位</span></span><br><span class="line">p3 = <span class="number">7117286695925472918001071846973900342640107770214858928188419765628151478620236042882657992902</span></span><br><span class="line">n3= <span class="number">113432930155033263769270712825121761080813952100666693606866355917116416984149165507231925180593860836255402950358327422447359200689537217528547623691586008952619063846801829802637448874451228957635707553980210685985215887107300416969549087293746310593988908287181025770739538992559714587375763131132963783147</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#全位数</span><br><span class="line">pbits = 512</span><br><span class="line"></span><br><span class="line">#缺省位数</span><br><span class="line">kbits = pbits - p3.nbits()        #nbits()位数</span><br><span class="line">print (p3.nbits())</span><br><span class="line">p3 = p3&lt;&lt; kbits</span><br><span class="line">PR.&lt;x&gt; = PolynomialRing(Zmod(n3))</span><br><span class="line"></span><br><span class="line">f = x + p3</span><br><span class="line">z = f.small_roots(X=2^kbits, beta=0.4)[0]</span><br><span class="line">p = p3 + z</span><br><span class="line">print ("p: ", hex(int(p)))</span><br><span class="line">assert n % p == 0</span><br><span class="line"></span><br><span class="line">#得到p = 0xda5f14bacd97f5504f39eeef22af37e8551700296843e536760cea761d334508003e01b886c0c69b4365759fb42a3faaf0c8888106bb9dbb1137769a37d191a7</span><br></pre></td></tr></table></figure><p>解密脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">c3 = <span class="number">59213696442373765895948702611659756779813897653022080905635545636905434038306468935283962686059037461940227618715695875589055593696352594630107082714757036815875497138523738695066811985036315624927897081153190329636864005133757096991035607918106529151451834369442313673849563635248465014289409374291381429646</span></span><br><span class="line">e3 = <span class="number">65537</span></span><br><span class="line">n3 = <span class="number">113432930155033263769270712825121761080813952100666693606866355917116416984149165507231925180593860836255402950358327422447359200689537217528547623691586008952619063846801829802637448874451228957635707553980210685985215887107300416969549087293746310593988908287181025770739538992559714587375763131132963783147</span></span><br><span class="line">p3 = <span class="built_in">int</span>(<span class="string">"0xda5f14bacd97f5504f39eeef22af37e8551700296843e536760cea761d334508003e01b886c0c69b4365759fb42a3faaf0c8888106bb9dbb1137769a37d191a7"</span>,<span class="number">16</span>)</span><br><span class="line">q3 = n3 // p3</span><br><span class="line">d = libnum.invmod(e3,(p3-<span class="number">1</span>)*(q3-<span class="number">1</span>))</span><br><span class="line">m3 =<span class="built_in">pow</span>(c3,d,n3)</span><br><span class="line"><span class="built_in">print</span>(m3)</span><br><span class="line"><span class="comment">#9784308714775690519897765476590203597210568386357973624743118864361169623542928511817200600009791435711983788560</span></span><br></pre></td></tr></table></figure><p>最后将三部分明文进行md5加密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">flag = long_to_bytes(m1)+long_to_bytes(m2)+long_to_bytes(m3)</span><br><span class="line">m = <span class="string">"NSSCTF{"</span>+ hashlib.md5(flag).hexdigest() + <span class="string">"}"</span></span><br><span class="line"><span class="built_in">print</span>(m)</span><br><span class="line"><span class="comment">#NSSCTF{3943e8843a19149497956901e5d98639}</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://canoepassed.top/categories/Crypto/">Crypto</category>
      
      
      <category domain="http://canoepassed.top/tags/RSA/">RSA</category>
      
      
      <comments>http://canoepassed.top/2024/05/20/Crypto/CISCN2021%E5%88%9D%E8%B5%9BRSA/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>GWCTF2019_babyRSA</title>
      <link>http://canoepassed.top/2024/05/19/Crypto/GWCTF2019-babyRSA/</link>
      <guid>http://canoepassed.top/2024/05/19/Crypto/GWCTF2019-babyRSA/</guid>
      <pubDate>Sun, 19 May 2024 14:24:05 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;encrypt.py&quot;&gt;encrypt.py&lt;/h2&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;spa</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="encrypt.py">encrypt.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">flag = <span class="string">'GWHT{******}'</span></span><br><span class="line">secret = <span class="string">'******'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span>(<span class="built_in">len</span>(flag) == <span class="number">38</span>)</span><br><span class="line"></span><br><span class="line">half = <span class="built_in">len</span>(flag) / <span class="number">2</span></span><br><span class="line"></span><br><span class="line">flag1 = flag[:half]</span><br><span class="line">flag2 = flag[half:]</span><br><span class="line"></span><br><span class="line">secret_num = getPrime(<span class="number">1024</span>) * bytes_to_long(secret)</span><br><span class="line"></span><br><span class="line">p = sympy.nextprime(secret_num)</span><br><span class="line">q = sympy.nextprime(p)</span><br><span class="line"></span><br><span class="line">N = p * q</span><br><span class="line"></span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line"></span><br><span class="line">F1 = bytes_to_long(flag1)</span><br><span class="line">F2 = bytes_to_long(flag2)</span><br><span class="line"></span><br><span class="line">c1 = F1 + F2</span><br><span class="line">c2 = <span class="built_in">pow</span>(F1, <span class="number">3</span>) + <span class="built_in">pow</span>(F2, <span class="number">3</span>)</span><br><span class="line"><span class="keyword">assert</span>(c2 &lt; N)</span><br><span class="line"></span><br><span class="line">m1 = <span class="built_in">pow</span>(c1, e, N)</span><br><span class="line">m2 = <span class="built_in">pow</span>(c2, e, N)</span><br><span class="line"></span><br><span class="line">output = <span class="built_in">open</span>(<span class="string">'secret'</span>, <span class="string">'w'</span>)</span><br><span class="line">output.write(<span class="string">'N='</span> + <span class="built_in">str</span>(N) + <span class="string">'\n'</span>)</span><br><span class="line">output.write(<span class="string">'m1='</span> + <span class="built_in">str</span>(m1) + <span class="string">'\n'</span>)</span><br><span class="line">output.write(<span class="string">'m2='</span> + <span class="built_in">str</span>(m2) + <span class="string">'\n'</span>)</span><br><span class="line">output.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="secret.txt">secret.txt</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">N=<span class="number">636585149594574746909030160182690866222909256464847291783000651837227921337237899651287943597773270944384034858925295744880727101606841413640006527614873110651410155893776548737823152943797884729130149758279127430044739254000426610922834573094957082589539445610828279428814524313491262061930512829074466232633130599104490893572093943832740301809630847541592548921200288222432789208650949937638303429456468889100192613859073752923812454212239908948930178355331390933536771065791817643978763045030833712326162883810638120029378337092938662174119747687899484603628344079493556601422498405360731958162719296160584042671057160241284852522913676264596201906163</span></span><br><span class="line">m1=<span class="number">90009974341452243216986938028371257528604943208941176518717463554774967878152694586469377765296113165659498726012712288670458884373971419842750929287658640266219686646956929872115782173093979742958745121671928568709468526098715927189829600497283118051641107305128852697032053368115181216069626606165503465125725204875578701237789292966211824002761481815276666236869005129138862782476859103086726091860497614883282949955023222414333243193268564781621699870412557822404381213804026685831221430728290755597819259339616650158674713248841654338515199405532003173732520457813901170264713085107077001478083341339002069870585378257051150217511755761491021553239</span></span><br><span class="line">m2=<span class="number">487443985757405173426628188375657117604235507936967522993257972108872283698305238454465723214226871414276788912058186197039821242912736742824080627680971802511206914394672159240206910735850651999316100014691067295708138639363203596244693995562780286637116394738250774129759021080197323724805414668042318806010652814405078769738548913675466181551005527065309515364950610137206393257148357659666687091662749848560225453826362271704292692847596339533229088038820532086109421158575841077601268713175097874083536249006018948789413238783922845633494023608865256071962856581229890043896939025613600564283391329331452199062858930374565991634191495137939574539546</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>1.首先利用yafu或者factordb分解N，得到p,q,然后求出c1,c2</p><p>2.然后利用sympy中的solve函数解方程求得f1,f2</p><p>3.最后拼接得到flag</p><h2 id="exp">exp:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sympy.abc <span class="keyword">import</span> a, b, c</span><br><span class="line"><span class="keyword">import</span> Crypto.Util.number <span class="keyword">as</span> cun</span><br><span class="line"></span><br><span class="line">p = <span class="number">797862863902421984951231350430312260517773269684958456342860983236184129602390919026048496119757187702076499551310794177917920137646835888862706126924088411570997141257159563952725882214181185531209186972351469946269508511312863779123205322378452194261217016552527754513215520329499967108196968833163329724620251096080377747699</span></span><br><span class="line">q = <span class="number">797862863902421984951231350430312260517773269684958456342860983236184129602390919026048496119757187702076499551310794177917920137646835888862706126924088411570997141257159563952725882214181185531209186972351469946269508511312863779123205322378452194261217016552527754513215520329499967108196968833163329724620251096080377748737</span></span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">n=<span class="number">636585149594574746909030160182690866222909256464847291783000651837227921337237899651287943597773270944384034858925295744880727101606841413640006527614873110651410155893776548737823152943797884729130149758279127430044739254000426610922834573094957082589539445610828279428814524313491262061930512829074466232633130599104490893572093943832740301809630847541592548921200288222432789208650949937638303429456468889100192613859073752923812454212239908948930178355331390933536771065791817643978763045030833712326162883810638120029378337092938662174119747687899484603628344079493556601422498405360731958162719296160584042671057160241284852522913676264596201906163</span></span><br><span class="line">m1=<span class="number">90009974341452243216986938028371257528604943208941176518717463554774967878152694586469377765296113165659498726012712288670458884373971419842750929287658640266219686646956929872115782173093979742958745121671928568709468526098715927189829600497283118051641107305128852697032053368115181216069626606165503465125725204875578701237789292966211824002761481815276666236869005129138862782476859103086726091860497614883282949955023222414333243193268564781621699870412557822404381213804026685831221430728290755597819259339616650158674713248841654338515199405532003173732520457813901170264713085107077001478083341339002069870585378257051150217511755761491021553239</span></span><br><span class="line">m2=<span class="number">487443985757405173426628188375657117604235507936967522993257972108872283698305238454465723214226871414276788912058186197039821242912736742824080627680971802511206914394672159240206910735850651999316100014691067295708138639363203596244693995562780286637116394738250774129759021080197323724805414668042318806010652814405078769738548913675466181551005527065309515364950610137206393257148357659666687091662749848560225453826362271704292692847596339533229088038820532086109421158575841077601268713175097874083536249006018948789413238783922845633494023608865256071962856581229890043896939025613600564283391329331452199062858930374565991634191495137939574539546</span></span><br><span class="line"></span><br><span class="line">phi_n = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = libnum.invmod(e, phi_n)</span><br><span class="line">c1 = <span class="built_in">pow</span>(m1, d, n)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m2, d, n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 求f1, f2</span></span><br><span class="line">res = solve([a + b - c1, <span class="built_in">pow</span>(a, <span class="number">3</span>) + <span class="built_in">pow</span>(b, <span class="number">3</span>) - c2], [a, b])</span><br><span class="line"><span class="comment"># [(1141553212031156130619789508463772513350070909, 1590956290598033029862556611630426044507841845), (1590956290598033029862556611630426044507841845, 1141553212031156130619789508463772513350070909)]</span></span><br><span class="line"></span><br><span class="line">f1 = res[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">f2 = res[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(cun.long_to_bytes(f1) + cun.long_to_bytes(f2))</span><br><span class="line"><span class="comment">#b'GWHT{f709e0e2cfe7e530ca8972959a1033b2}'</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://canoepassed.top/categories/Crypto/">Crypto</category>
      
      
      <category domain="http://canoepassed.top/tags/RSA/">RSA</category>
      
      
      <comments>http://canoepassed.top/2024/05/19/Crypto/GWCTF2019-babyRSA/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2024HNCTF_crypto部分wp</title>
      <link>http://canoepassed.top/2024/05/18/Crypto/2024HNCTF-crypto%E9%83%A8%E5%88%86wp/</link>
      <guid>http://canoepassed.top/2024/05/18/Crypto/2024HNCTF-crypto%E9%83%A8%E5%88%86wp/</guid>
      <pubDate>Sat, 18 May 2024 09:22:40 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;babyaes&quot;&gt;1.babyAES&lt;/h2&gt;
&lt;p&gt;原题：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; Crypto.Cipher &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; AES&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; Crypto.Util.Padding &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pad&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; secret &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; flag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; random&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flag = pad(flag,&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;b&quot;H&amp;amp;NCTF&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; flag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;seed = &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(time.time())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;random.seed(seed)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;key = random.randbytes(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iv = random.randbytes(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aes = AES.new(key,AES.MODE_CBC,iv)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cipher = aes.encrypt(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;f&quot;cipher = &lt;span class=&quot;subst&quot;&gt;{cipher}&lt;/span&gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;cipher = b&#39;&#92;x96H_hz&#92;xe7)&#92;x0c&#92;x15&#92;x91c&#92;x9bt&#92;xa4&#92;xe5&#92;xacwch&#92;x92e&#92;xd1&#92;x0c&#92;x9f&#92;x8fH&#92;x05&#92;x9f&#92;x1d&#92;x92&#92;x81&#92;xcc&#92;xe0&#92;x98&#92;x8b&#92;xda&#92;x89&#92;xcf&#92;x92&#92;x01a&#92;xe1B&#92;xfb&#92;x97&#92;xdc&#92;x0cG&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看文件属性中的创建时间，利用datatime()函数获取指定时间的时间戳，进行爆破&lt;/p&gt;
&lt;p&gt;exp:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; Crypto.Cipher &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; AES&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; datetime &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; random&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cipher = &lt;span class=&quot;string&quot;&gt;b&#39;&amp;amp;&#92;xa9H&#92;x0ct&#92;xbbq&#92;xca&#92;xfb&#92;x92&#92;x06&#92;x0f88&#92;x908&#92;x96|&#92;xe2&#92;x17&#92;xab{&#92;xf66&#92;xbf&#92;x9av2&#92;x88&#92;x19&#92;x13J&#92;xdaT&#92;xfd&#92;x8a]&#92;xcd&#92;xe8&#92;xa6&#92;xea&#92;xe8u]&#92;xc5&#92;xc5,&#92;xdb&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t = datetime(&lt;span class=&quot;number&quot;&gt;2020&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tmp = &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(t.timestamp())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    seed = tmp + i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    random.seed(seed)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    key = random.randbytes(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    iv = random.randbytes(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aes = AES.new(key,AES.MODE_CBC,iv)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flag = aes.decrypt(cipher)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;b&quot;H&amp;amp;NCTF&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; flag:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# b&#39;H&amp;amp;NCTF{062d38ab-436e-461c-85bc-db5f370e199e}&#92;x04&#92;x04&#92;x04&#92;x04&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="babyaes">1.babyAES</h2><p>原题：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">flag = pad(flag,<span class="number">16</span>)</span><br><span class="line"><span class="keyword">assert</span> <span class="string">b"H&amp;NCTF"</span> <span class="keyword">in</span> flag</span><br><span class="line"></span><br><span class="line">seed = <span class="built_in">int</span>(time.time())</span><br><span class="line">random.seed(seed)</span><br><span class="line">key = random.randbytes(<span class="number">16</span>)</span><br><span class="line">iv = random.randbytes(<span class="number">16</span>)</span><br><span class="line">aes = AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">cipher = aes.encrypt(flag)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f"cipher = <span class="subst">{cipher}</span>"</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">cipher = b'\x96H_hz\xe7)\x0c\x15\x91c\x9bt\xa4\xe5\xacwch\x92e\xd1\x0c\x9f\x8fH\x05\x9f\x1d\x92\x81\xcc\xe0\x98\x8b\xda\x89\xcf\x92\x01a\xe1B\xfb\x97\xdc\x0cG'</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure><p>看文件属性中的创建时间，利用datatime()函数获取指定时间的时间戳，进行爆破</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">cipher = <span class="string">b'&amp;\xa9H\x0ct\xbbq\xca\xfb\x92\x06\x0f88\x908\x96|\xe2\x17\xab{\xf66\xbf\x9av2\x88\x19\x13J\xdaT\xfd\x8a]\xcd\xe8\xa6\xea\xe8u]\xc5\xc5,\xdb'</span></span><br><span class="line"></span><br><span class="line">t = datetime(<span class="number">2020</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">16</span>,<span class="number">14</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">tmp = <span class="built_in">int</span>(t.timestamp())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60</span>):</span><br><span class="line">    seed = tmp + i</span><br><span class="line">    random.seed(seed)</span><br><span class="line">    key = random.randbytes(<span class="number">16</span>)</span><br><span class="line">    iv = random.randbytes(<span class="number">16</span>)</span><br><span class="line">    aes = AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">    flag = aes.decrypt(cipher)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">b"H&amp;NCTF"</span> <span class="keyword">in</span> flag:</span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br><span class="line">        <span class="comment"># b'H&amp;NCTF{062d38ab-436e-461c-85bc-db5f370e199e}\x04\x04\x04\x04'</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="matrixrsa">2.MatrixRSA</h2><p>原题：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">flag = <span class="string">b"H&amp;NCTF{??????????????}"</span> + os.urandom(<span class="number">73</span>)</span><br><span class="line"></span><br><span class="line">p = getPrime(<span class="number">56</span>)</span><br><span class="line">q = getPrime(<span class="number">56</span>)</span><br><span class="line">n = p * q</span><br><span class="line"></span><br><span class="line">part = [bytes_to_long(flag[<span class="number">13</span>*i:<span class="number">13</span>*(i+<span class="number">1</span>)]) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>)]</span><br><span class="line"></span><br><span class="line">M = Matrix(Zmod(n),[</span><br><span class="line">    [part[<span class="number">3</span>*i+j] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">C = M ** e</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f"n = <span class="subst">{n}</span>"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f"C = <span class="subst">{<span class="built_in">list</span>(C)}</span>"</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">n = 3923490775575970082729688460890203</span></span><br><span class="line"><span class="string">C = [(1419745904325460721019899475870191, 2134514837568225691829001907289833, 3332081654357483038861367332497335), (3254631729141395759002362491926143, 3250208857960841513899196820302274, 1434051158630647158098636495711534), (2819200914668344580736577444355697, 2521674659019518795372093086263363, 2850623959410175705367927817534010)]</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure><p>看了官方WP，看到了mod p的三阶矩阵群的阶为<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="26.415ex" height="2.452ex" role="img" focusable="false" viewbox="0 -833.9 11675.3 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(503,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(892,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(1617.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(2617.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(3117.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(3506.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(3895.4,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(4620.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(5620.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(6120.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(6509.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(6898.9,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(7624.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="msup" transform="translate(8624.3,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mn" transform="translate(536,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(9786.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(10786.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(11286.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container></span>,n比较容易分解，只需要分别求模p和模q的阶，然后类似于RSA的思路即可得解</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">p = <span class="number">56891773340056609</span></span><br><span class="line">q = <span class="number">68964114585148667</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">c = [(<span class="number">1419745904325460721019899475870191</span>, <span class="number">2134514837568225691829001907289833</span>, <span class="number">3332081654357483038861367332497335</span>), (<span class="number">3254631729141395759002362491926143</span>, <span class="number">3250208857960841513899196820302274</span>, <span class="number">1434051158630647158098636495711534</span>), (<span class="number">2819200914668344580736577444355697</span>, <span class="number">2521674659019518795372093086263363</span>, <span class="number">2850623959410175705367927817534010</span>)]</span><br><span class="line"></span><br><span class="line">C = Matrix(Zmod(n),c)</span><br><span class="line"></span><br><span class="line">order_p = p*(p-<span class="number">1</span>)*(p+<span class="number">1</span>)*(p^<span class="number">2</span>+p+<span class="number">1</span>)</span><br><span class="line">order_q = q*(q-<span class="number">1</span>)*(q+<span class="number">1</span>)*(q^<span class="number">2</span>+q+<span class="number">1</span>)</span><br><span class="line">order = order_p * order_q</span><br><span class="line"></span><br><span class="line">d = gmpy2.invert(e,order)</span><br><span class="line">M = C ** d</span><br><span class="line"></span><br><span class="line">flag = <span class="string">b""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        m = <span class="built_in">int</span>(M[i,j])</span><br><span class="line">        flag += long_to_bytes(m)</span><br><span class="line">        </span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment"># H&amp;NCTF{58bff5c1-4d5f-4010-a84c-8fbe0c0f50e8}</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="is-this-iso">3.Is this iso</h2><p>原题：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">nextPrime</span>(<span class="params">p</span>):</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">not</span> isPrime(p)):</span><br><span class="line">        p += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#part1 gen Fp and init supersingular curve</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">    p = <span class="number">2</span>^randint(<span class="number">150</span>,<span class="number">200</span>)*<span class="number">3</span>^randint(<span class="number">100</span>,<span class="number">150</span>)*<span class="number">5</span>^randint(<span class="number">50</span>,<span class="number">100</span>)-<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(isPrime(p)):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">F.&lt;i&gt; = GF(p^<span class="number">2</span>, modulus = x^<span class="number">2</span> + <span class="number">1</span>)</span><br><span class="line">E = EllipticCurve(j=F(<span class="number">1728</span>))</span><br><span class="line"><span class="keyword">assert</span> E.is_supersingular()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#part2 find a random supersingular E</span></span><br><span class="line">ways = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    P = E(<span class="number">0</span>).division_points(choice(ways))[<span class="number">1</span>:]</span><br><span class="line">    shuffle(P)</span><br><span class="line">    phi = E.isogeny(P[<span class="number">0</span>])</span><br><span class="line">    E = phi.codomain()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#part3 gen E1 E2 E3</span></span><br><span class="line">E1 = E</span><br><span class="line"></span><br><span class="line">deg1 = <span class="number">2</span></span><br><span class="line">P = E1(<span class="number">0</span>).division_points(deg1)[<span class="number">1</span>:]</span><br><span class="line">shuffle(P)</span><br><span class="line">phi1 = E1.isogeny(P[<span class="number">0</span>])</span><br><span class="line">E2 = phi1.codomain()</span><br><span class="line"></span><br><span class="line">deg2 = choice(ways)</span><br><span class="line">P = E2(<span class="number">0</span>).division_points(deg2)[<span class="number">1</span>:]</span><br><span class="line">shuffle(P)</span><br><span class="line">phi2 = E2.isogeny(P[<span class="number">0</span>])</span><br><span class="line">E3 = phi2.codomain()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#part4 leak</span></span><br><span class="line">j1 = E1.j_invariant()</span><br><span class="line">j2 = E2.j_invariant()</span><br><span class="line">j3 = E3.j_invariant()</span><br><span class="line"></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">n = getPrime(<span class="built_in">int</span>(j3[<span class="number">0</span>]).bit_length())*nextPrime(<span class="built_in">int</span>(j3[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"p ="</span>,p)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"deg1 ="</span>,deg1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"deg2 ="</span>,deg2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"leak1 ="</span>,j1[<span class="number">0</span>] &gt;&gt; <span class="number">400</span> &lt;&lt; <span class="number">400</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"leak2 ="</span>,j1[<span class="number">1</span>] &gt;&gt; <span class="number">5</span> &lt;&lt; <span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"leak3 ="</span>,j2[<span class="number">0</span>] &gt;&gt; <span class="number">5</span> &lt;&lt; <span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"leak4 ="</span>,j2[<span class="number">1</span>] &gt;&gt; <span class="number">400</span> &lt;&lt; <span class="number">400</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"n ="</span>,n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"cipher ="</span>,<span class="built_in">pow</span>(m,<span class="number">65537</span>,n))</span><br><span class="line"></span><br><span class="line"><span class="comment">#p = 680201537161531317827869565786140240595567913096417274637134403255116055511280864892266374758399999999999999999999999999999999999999999999999999999999999999999999999</span></span><br><span class="line"><span class="comment">#deg1 = 2</span></span><br><span class="line"><span class="comment">#deg2 = 5</span></span><br><span class="line"><span class="comment">#leak1 = 84624382514957324426794167416980084161297449460045164807842311763375830274875400809588635343195174135691613055453493035516696630357254763624394674275492513550696448</span></span><br><span class="line"><span class="comment">#leak2 = 569334021319485756763137861791243638993859221789562816154577308542976649646202822945301844698450579193326962681107954744030417590603938838204734858601313640848501344</span></span><br><span class="line"><span class="comment">#leak3 = 325720000771917646719671745106544502680895911477018701616420509369836768451047103170212051953041518446572892754419417720965474892312189833039602545011787135282170400</span></span><br><span class="line"><span class="comment">#leak4 = 607188653779811312711900086497209011406043384341389739547214249680956969386970129072753246609362372591781044704784040165947962309186896993435085198595013761765998592</span></span><br><span class="line"><span class="comment">#n = 336631348442872227475735277623305104458216242371136122513108670525622121689052346348620824105820633714562546800934735845952338946486424402720093748392510487705996344393513464710255615634248631016778273746776059762111364616763243266453211367983670687473800622632626192654424964609849049774336197739675356042226277067017714668077407</span></span><br><span class="line"><span class="comment">#cipher = 98106149415612242984147419198102021164901863054603625014502538888604192644391041028562541950192883864954991703087157292974235031070431515337932833347213492206351147110891983722997746801220179144171968380355798405953558533823282395282563952623698461579297014597381904081095895011393305504119244812232164909852287688815879984263470</span></span><br></pre></td></tr></table></figure><p>题目的前两part是生成一条随机的<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.726ex;" xmlns="http://www.w3.org/2000/svg" width="3.158ex" height="2.265ex" role="img" focusable="false" viewbox="0 -680 1395.8 1000.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"/></g><g data-mml-node="TeXAtom" transform="translate(676,-183.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/></g><g data-mml-node="mn" transform="translate(543.7,289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></g></g></svg></mjx-container></span>下的超奇异椭圆曲线E1，然后寻找其一个2-isogeny的邻居E2，再寻找E2的一个5-isogeny的邻居E3，用E3的j不变量生成了RSA的加密参数。</p><p>不妨将E1、E2的j不变量j1、j2记为： <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.462ex;" xmlns="http://www.w3.org/2000/svg" width="21.29ex" height="2.032ex" role="img" focusable="false" viewbox="0 -694 9410.1 898"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g><g data-mml-node="mn" transform="translate(445,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g><g data-mml-node="mo" transform="translate(1126.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(2182.1,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="mo" transform="translate(2933.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(3933.6,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"/></g><g data-mml-node="mi" transform="translate(4362.6,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mspace" transform="translate(4707.6,0)"/><g data-mml-node="msub" transform="translate(4707.6,0)"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g><g data-mml-node="mn" transform="translate(445,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(5833.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(6889.7,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"/></g><g data-mml-node="mo" transform="translate(7544.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(8545.1,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/></g><g data-mml-node="mi" transform="translate(9065.1,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g></g></svg></mjx-container></span> 然后题目隐藏了以下数据：</p><p>​ ● a的低400位</p><p>​ ● b的低5位</p><p>​ ● c的低5位</p><p>​ ● d的低400位</p><p>要求还原明文。</p><p>可以看出b、c未知的位数实在太少了，总共只需要爆破10位就一定有正确的b、c。而由于E1、E2互为2-isogeny的邻居，所以他们的j不变量可以由2-modular polynomial联系，该等式共有虚部和实部两个等式可以用，所以用resulatnt消元+求根就可以求解出a、d了。</p><p>有了完整的j2后，由于E2和E3又互为5-isogeny的邻居，所以遍历E2的所有5-isogeny的邻居，其中就有一个是j3，然后就可以生成：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nextPrime(<span class="built_in">int</span>(j3[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><p>从而与n求gcd得到n的分解，进而解密RSA密文。</p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">nextPrime</span>(<span class="params">p</span>):</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">not</span> isPrime(p)):</span><br><span class="line">        p += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line">p = <span class="number">680201537161531317827869565786140240595567913096417274637134403255116055511280864892266374758399999999999999999999999999999999999999999999999999999999999999999999999</span></span><br><span class="line">deg1 = <span class="number">2</span></span><br><span class="line">deg2 = <span class="number">5</span></span><br><span class="line">leak1 = <span class="number">84624382514957324426794167416980084161297449460045164807842311763375830274875400809588635343195174135691613055453493035516696630357254763624394674275492513550696448</span></span><br><span class="line">leak2 = <span class="number">569334021319485756763137861791243638993859221789562816154577308542976649646202822945301844698450579193326962681107954744030417590603938838204734858601313640848501344</span></span><br><span class="line">leak3 = <span class="number">325720000771917646719671745106544502680895911477018701616420509369836768451047103170212051953041518446572892754419417720965474892312189833039602545011787135282170400</span></span><br><span class="line">leak4 = <span class="number">607188653779811312711900086497209011406043384341389739547214249680956969386970129072753246609362372591781044704784040165947962309186896993435085198595013761765998592</span></span><br><span class="line">n = <span class="number">336631348442872227475735277623305104458216242371136122513108670525622121689052346348620824105820633714562546800934735845952338946486424402720093748392510487705996344393513464710255615634248631016778273746776059762111364616763243266453211367983670687473800622632626192654424964609849049774336197739675356042226277067017714668077407</span></span><br><span class="line">cipher = <span class="number">98106149415612242984147419198102021164901863054603625014502538888604192644391041028562541950192883864954991703087157292974235031070431515337932833347213492206351147110891983722997746801220179144171968380355798405953558533823282395282563952623698461579297014597381904081095895011393305504119244812232164909852287688815879984263470</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##################################################### part1</span></span><br><span class="line">F.&lt;i&gt; = GF(p^<span class="number">2</span>, modulus = x^<span class="number">2</span> + <span class="number">1</span>)</span><br><span class="line">PR.&lt;a,d&gt; = PolynomialRing(Zmod(p))</span><br><span class="line"></span><br><span class="line">Find = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> b <span class="keyword">in</span> trange(<span class="number">2</span>^<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>^<span class="number">5</span>):</span><br><span class="line">        a,d = PR.gens()</span><br><span class="line">        X = (leak1 + a) + (leak2 + b) * i</span><br><span class="line">        Y = (leak3 + c) + (leak4 + d) * i</span><br><span class="line">        f = (</span><br><span class="line">            X^<span class="number">3</span></span><br><span class="line">            + Y^<span class="number">3</span></span><br><span class="line">            - X^<span class="number">2</span> * Y^<span class="number">2</span></span><br><span class="line">            + <span class="number">1488</span> * X^<span class="number">2</span> * Y</span><br><span class="line">            + <span class="number">1488</span> * X * Y^<span class="number">2</span></span><br><span class="line">            - <span class="number">162000</span> * X^<span class="number">2</span></span><br><span class="line">            - <span class="number">162000</span> * Y^<span class="number">2</span></span><br><span class="line">            + <span class="number">40773375</span> * X * Y</span><br><span class="line">            + <span class="number">8748000000</span> * X</span><br><span class="line">            + <span class="number">8748000000</span> * Y</span><br><span class="line">            - <span class="number">157464000000000</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        f_re = <span class="number">0</span></span><br><span class="line">        f_im = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> jj <span class="keyword">in</span> f:</span><br><span class="line">            temp = <span class="built_in">str</span>(jj[<span class="number">0</span>]).split(<span class="string">"*i"</span>)</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">len</span>(temp) == <span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span>(temp[<span class="number">0</span>] == <span class="string">"i"</span>):</span><br><span class="line">                    f_im += jj[<span class="number">1</span>]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    f_re += <span class="built_in">int</span>(temp[<span class="number">0</span>])*jj[<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                f_im += <span class="built_in">int</span>(temp[<span class="number">0</span>])*jj[<span class="number">1</span>]</span><br><span class="line">                <span class="keyword">if</span>(temp[<span class="number">1</span>] != <span class="string">""</span>):</span><br><span class="line">                    f_re += <span class="built_in">int</span>(temp[<span class="number">1</span>][<span class="number">2</span>:])*jj[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        h = f_im.sylvester_matrix(f_re, a).det().univariate_polynomial().monic()</span><br><span class="line">        res = h.change_ring(Zmod(p)).roots()</span><br><span class="line">        <span class="keyword">if</span>(res != []):</span><br><span class="line">            <span class="keyword">for</span> jj <span class="keyword">in</span> res:</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">int</span>(jj[<span class="number">0</span>]) &lt; <span class="number">2</span>^<span class="number">400</span>):</span><br><span class="line">                    Find = <span class="number">1</span></span><br><span class="line">                    j2il = <span class="built_in">int</span>(jj[<span class="number">0</span>])</span><br><span class="line">                    j2 = (leak3 + c) + (leak4 + j2il) * i</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">elif</span>(p - <span class="built_in">int</span>(jj[<span class="number">0</span>]) &lt; <span class="number">2</span>^<span class="number">400</span>):</span><br><span class="line">                    Find = <span class="number">1</span></span><br><span class="line">                    j2il = p - <span class="built_in">int</span>(jj[<span class="number">0</span>])</span><br><span class="line">                    j2 = (leak3 + c) + (leak4 + j2il) * i</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span>(Find):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span>(Find):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##################################################### part2</span></span><br><span class="line"><span class="comment">#Φ5</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_neighbors_phi5</span>(<span class="params">X,j_prev=<span class="literal">None</span></span>):</span><br><span class="line">    R.&lt;Y&gt; = PolynomialRing(X.parent())</span><br><span class="line">    Φ<span class="number">5</span> = (</span><br><span class="line">        X^<span class="number">6</span></span><br><span class="line">        + Y^<span class="number">6</span></span><br><span class="line">        - X^<span class="number">5</span>*Y^<span class="number">5</span> </span><br><span class="line">        + <span class="number">3720</span>*X^<span class="number">5</span>*Y^<span class="number">4</span> </span><br><span class="line">        + <span class="number">3720</span>*X^<span class="number">4</span>*Y^<span class="number">5</span> </span><br><span class="line">        - <span class="number">4550940</span>*X^<span class="number">5</span>*Y^<span class="number">3</span> </span><br><span class="line">        - <span class="number">4550940</span>*X^<span class="number">3</span>*Y^<span class="number">5</span></span><br><span class="line">        + <span class="number">2028551200</span>*X^<span class="number">5</span>*Y^<span class="number">2</span> </span><br><span class="line">        + <span class="number">2028551200</span>*X^<span class="number">2</span>*Y^<span class="number">5</span></span><br><span class="line">        - <span class="number">246683410950</span>*X^<span class="number">5</span>*Y</span><br><span class="line">        - <span class="number">246683410950</span>*X*Y^<span class="number">5</span> </span><br><span class="line">        + <span class="number">1963211489280</span>*X^<span class="number">5</span> </span><br><span class="line">        + <span class="number">1963211489280</span>*Y^<span class="number">5</span> </span><br><span class="line">        + <span class="number">1665999364600</span>*X^<span class="number">4</span>*Y^<span class="number">4</span> </span><br><span class="line">        + <span class="number">107878928185336800</span>*X^<span class="number">4</span>*Y^<span class="number">3</span> </span><br><span class="line">        + <span class="number">107878928185336800</span>*X^<span class="number">3</span>*Y^<span class="number">4</span> </span><br><span class="line">        + <span class="number">383083609779811215375</span>*X^<span class="number">4</span>*Y^<span class="number">2</span> </span><br><span class="line">        + <span class="number">383083609779811215375</span>*X^<span class="number">2</span>*Y^<span class="number">4</span></span><br><span class="line">        + <span class="number">128541798906828816384000</span>*X^<span class="number">4</span>*Y </span><br><span class="line">        + <span class="number">128541798906828816384000</span>*X*Y^<span class="number">4</span>  </span><br><span class="line">        + <span class="number">1284733132841424456253440</span>*X^<span class="number">4</span></span><br><span class="line">        + <span class="number">1284733132841424456253440</span>*Y^<span class="number">4</span></span><br><span class="line">        - <span class="number">441206965512914835246100</span>*X^<span class="number">3</span>*Y^<span class="number">3</span>  </span><br><span class="line">        + <span class="number">26898488858380731577417728000</span>*X^<span class="number">3</span>*Y^<span class="number">2</span> </span><br><span class="line">        + <span class="number">26898488858380731577417728000</span>*X^<span class="number">2</span>*Y^<span class="number">3</span> </span><br><span class="line">        - <span class="number">192457934618928299655108231168000</span>*X^<span class="number">3</span>*Y</span><br><span class="line">        - <span class="number">192457934618928299655108231168000</span>*X*Y^<span class="number">3</span> </span><br><span class="line">        + <span class="number">280244777828439527804321565297868800</span>*X^<span class="number">3</span></span><br><span class="line">        + <span class="number">280244777828439527804321565297868800</span>*Y^<span class="number">3</span></span><br><span class="line">        + <span class="number">5110941777552418083110765199360000</span>*X^<span class="number">2</span>*Y^<span class="number">2</span> </span><br><span class="line">        + <span class="number">36554736583949629295706472332656640000</span>*X^<span class="number">2</span>*Y </span><br><span class="line">        + <span class="number">36554736583949629295706472332656640000</span>*X*Y^<span class="number">2</span>        </span><br><span class="line">        + <span class="number">6692500042627997708487149415015068467200</span>*X^<span class="number">2</span> </span><br><span class="line">        - <span class="number">264073457076620596259715790247978782949376</span>*X*Y </span><br><span class="line">        + <span class="number">6692500042627997708487149415015068467200</span>*Y^<span class="number">2</span> </span><br><span class="line">        + <span class="number">53274330803424425450420160273356509151232000</span>*X </span><br><span class="line">        + <span class="number">53274330803424425450420160273356509151232000</span>*Y </span><br><span class="line">        + <span class="number">141359947154721358697753474691071362751004672000</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    res = Φ<span class="number">5.</span>roots(multiplicities=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span>(j_prev == <span class="literal">None</span>):</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">set</span>(res) - <span class="built_in">set</span>([j_prev]))</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j3 <span class="keyword">in</span> find_neighbors_phi5(j2):</span><br><span class="line">    p = GCD(nextPrime(<span class="built_in">int</span>(j3[<span class="number">0</span>])),n)</span><br><span class="line">    <span class="keyword">if</span>(p != <span class="number">1</span>):</span><br><span class="line">        q = n // p</span><br><span class="line">        d = inverse(<span class="number">65537</span>,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">        <span class="built_in">print</span>(long_to_bytes(<span class="built_in">int</span>(<span class="built_in">pow</span>(cipher,d,n))))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#H&amp;NCTF{S33m5_L1ke_C0pp3RsM1th_But_N0t:)}</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="is-this-iso2">4.Is this Iso?2</h3><p>与上一个题目唯一的区别在于，隐藏的信息变成了：</p><p>​ ● a的低48位</p><p>​ ● b的低48位</p><p>​ ● c的低48位</p><p>​ ● d的低48位</p><p>所以没有可以爆破的量了，然而显然48位相对于p实在是很小，所以很自然的会想到copper去解决它。</p><p>然而用copper的话会遇到一些问题。首先就是四个变量对应的shift实在太多了；其次，modular polynomial本身并不算一个很简单的多项式，所以综合起来用多元copper格的维数很容易就是几大百；最后还有等式数量的问题，实部和虚部分别对应两个等式，当然要一起利用上才行，但如果联立起来resultant消掉一元的话，虽然从变量数来说减少了，会变成三元copper，但是resultant之后的三元多项式度会相当高，更不利于copper，所以不容易解决。</p><p>然而，注意到2-isogeny对应的多项式中最高次项也仅有4次，所以其实最大的未知量也就只有192bit，直接把两个等式一起当作约束放入格中去LLL，就可以在规约后的短向量中直接找到我们需要的目标向量了。造格的细节可以参考solver。</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">nextPrime</span>(<span class="params">p</span>):</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">not</span> isPrime(p)):</span><br><span class="line">        p += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line">p = <span class="number">33002887544016314031879710107963270568979015443349496461580994217348108581943462671401891805445187804473789436219797804155565167447548582923397954849996799999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999</span></span><br><span class="line">leak1 = <span class="number">23970024189101676739284999949112801596159475131875488713138494179350672457539898031864018813881524127059547346056890355337626004377168849677299388452735608521932571216168945616402953073274716141377186272923187362572945186088197355146879606612986821843373706666768942322893903428906105943365666240678544198804428017369088</span></span><br><span class="line">leak2 = <span class="number">18968478281644090200080507268714677611062523716159449265101819113233914046740738809721658379928130465004476176599403035347489355703796382914550216763662625998487554273370838080897607173662469212264589929308724920155969968302754999378875497515768504097606413596494718061943021600129084717056109413521498214039208905932800</span></span><br><span class="line">leak3 = <span class="number">24846971521346659533622446473264138521227563244935912977395904811225387611724566290176121582061549516865041576960467180732303630070352480104283169087055565855330769507536550703237906927824653705302857676851252497170817996780480787545788757588029762501569142537824866794895641164190331637129027655971847921430387098648576</span></span><br><span class="line">leak4 = <span class="number">14506384300219774277241069081690189345236549123813938708663001975576355357273770188385102465249828661430885152936340057890533616107247269132829273586451886946676551549255821786705150859518035298037172807466360938386435146531493168660580846121143769776024893444008660445579419515274295620015909587687581741666493110681600</span></span><br><span class="line">n = <span class="number">17493161302233539865959778115545849614338747587320539830958673046207703917485289344059005689614899617727057491562059564216328452528431891394964839425545058028178376719697816107862705922877310886122597831458084446977069139926783492027694957365054350790083539389958649142920896888580550434273011064581701139955036959685836337063232723340151170432920208045324320904257623616896017119310224381452189172970937417436861279136518242101847150438391226935084568440274930855362251299289608983772866874344756978071504480416710819717504154104303015133892355188631899268990010375768150730500938937147573182759644411399269734039357767059492842474140949</span></span><br><span class="line">cipher = <span class="number">16921253539344108497068632546240027709825757991466136956611001346572164679990250077204370295206837487391144086361806843608963030262072269950948128913794922674041531052955655884066609971456009776555957969815343040743446935276861391783043533446286228409288466221337064700577406994578750474068930699978389468927444219610938550365285817940713903147886965909078470774683916754388441563810469530491686011112673883268153010239483497777390409547764296300047653921679373300693423282406815477193889860589206837874689550943581455570596354670272027903696833667599311930587303088445675268598000581375688180056683387083737664908840976358250628881034642</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##################################################### part1</span></span><br><span class="line">F.&lt;i&gt; = GF(p^<span class="number">2</span>, modulus = x^<span class="number">2</span> + <span class="number">1</span>)</span><br><span class="line">PR.&lt;a,b,c,d&gt; = PolynomialRing(Zmod(p))</span><br><span class="line">a,b,c,d = PR.gens()</span><br><span class="line">X = (leak1 + a) + (leak2 + b) * i</span><br><span class="line">Y = (leak3 + c) + (leak4 + d) * i</span><br><span class="line">f = (</span><br><span class="line">    X^<span class="number">3</span></span><br><span class="line">    + Y^<span class="number">3</span></span><br><span class="line">    - X^<span class="number">2</span> * Y^<span class="number">2</span></span><br><span class="line">    + <span class="number">1488</span> * X^<span class="number">2</span> * Y</span><br><span class="line">    + <span class="number">1488</span> * X * Y^<span class="number">2</span></span><br><span class="line">    - <span class="number">162000</span> * X^<span class="number">2</span></span><br><span class="line">    - <span class="number">162000</span> * Y^<span class="number">2</span></span><br><span class="line">    + <span class="number">40773375</span> * X * Y</span><br><span class="line">    + <span class="number">8748000000</span> * X</span><br><span class="line">    + <span class="number">8748000000</span> * Y</span><br><span class="line">    - <span class="number">157464000000000</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">f_re = <span class="number">0</span></span><br><span class="line">f_im = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> jj <span class="keyword">in</span> f:</span><br><span class="line">    temp = <span class="built_in">str</span>(jj[<span class="number">0</span>]).split(<span class="string">"*i"</span>)</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">len</span>(temp) == <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span>(temp[<span class="number">0</span>] == <span class="string">"i"</span>):</span><br><span class="line">            f_im += jj[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            f_re += <span class="built_in">int</span>(temp[<span class="number">0</span>])*jj[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        f_im += <span class="built_in">int</span>(temp[<span class="number">0</span>])*jj[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span>(temp[<span class="number">1</span>] != <span class="string">""</span>):</span><br><span class="line">            f_re += <span class="built_in">int</span>(temp[<span class="number">1</span>][<span class="number">2</span>:])*jj[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">polys = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">deg_h = (f_re+f_im).degree()</span><br><span class="line">polys.append(f_re)</span><br><span class="line">polys.append(f_im)</span><br><span class="line">T = <span class="number">2</span>^<span class="number">48</span></span><br><span class="line">M, v = <span class="type">Sequence</span>(polys).coefficient_matrix()</span><br><span class="line">M = M.T.dense_matrix()</span><br><span class="line">R, C = M.dimensions()</span><br><span class="line">B = block_matrix(</span><br><span class="line">    ZZ, [[matrix.identity(C)*p, matrix.zero(C, R)], [M, matrix.identity(R)]]</span><br><span class="line">)</span><br><span class="line">vT = (v.T).<span class="built_in">list</span>()</span><br><span class="line"></span><br><span class="line">B[:,:C] *= p</span><br><span class="line"><span class="keyword">for</span> jj <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(vT)):</span><br><span class="line">    B[:,C+jj:C+jj+<span class="number">1</span>] *= T^(deg_h-vT[jj].degree())</span><br><span class="line"><span class="built_in">print</span>(B.dimensions())</span><br><span class="line"></span><br><span class="line">res = B.LLL()</span><br><span class="line"><span class="keyword">for</span> tt <span class="keyword">in</span> res:</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">abs</span>(tt[-<span class="number">1</span>]) == T^deg_h):</span><br><span class="line">        a,b,c,d = <span class="built_in">abs</span>(tt[-<span class="number">5</span>])//T^(deg_h-<span class="number">1</span>) ,  <span class="built_in">abs</span>(tt[-<span class="number">4</span>])//T^(deg_h-<span class="number">1</span>) ,  <span class="built_in">abs</span>(tt[-<span class="number">3</span>])//T^(deg_h-<span class="number">1</span>) , <span class="built_in">abs</span>(tt[-<span class="number">2</span>])//T^(deg_h-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span>(a &gt; <span class="number">0</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">j2 = (leak3 + c) + (leak4 + d) * i</span><br><span class="line"><span class="comment">##################################################### part2</span></span><br><span class="line"><span class="comment">#Φ5</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_neighbors_phi5</span>(<span class="params">X,j_prev=<span class="literal">None</span></span>):</span><br><span class="line">    R.&lt;Y&gt; = PolynomialRing(X.parent())</span><br><span class="line">    Φ<span class="number">5</span> = (</span><br><span class="line">        X^<span class="number">6</span></span><br><span class="line">        + Y^<span class="number">6</span></span><br><span class="line">        - X^<span class="number">5</span>*Y^<span class="number">5</span> </span><br><span class="line">        + <span class="number">3720</span>*X^<span class="number">5</span>*Y^<span class="number">4</span> </span><br><span class="line">        + <span class="number">3720</span>*X^<span class="number">4</span>*Y^<span class="number">5</span> </span><br><span class="line">        - <span class="number">4550940</span>*X^<span class="number">5</span>*Y^<span class="number">3</span> </span><br><span class="line">        - <span class="number">4550940</span>*X^<span class="number">3</span>*Y^<span class="number">5</span></span><br><span class="line">        + <span class="number">2028551200</span>*X^<span class="number">5</span>*Y^<span class="number">2</span> </span><br><span class="line">        + <span class="number">2028551200</span>*X^<span class="number">2</span>*Y^<span class="number">5</span></span><br><span class="line">        - <span class="number">246683410950</span>*X^<span class="number">5</span>*Y</span><br><span class="line">        - <span class="number">246683410950</span>*X*Y^<span class="number">5</span> </span><br><span class="line">        + <span class="number">1963211489280</span>*X^<span class="number">5</span> </span><br><span class="line">        + <span class="number">1963211489280</span>*Y^<span class="number">5</span> </span><br><span class="line">        + <span class="number">1665999364600</span>*X^<span class="number">4</span>*Y^<span class="number">4</span> </span><br><span class="line">        + <span class="number">107878928185336800</span>*X^<span class="number">4</span>*Y^<span class="number">3</span> </span><br><span class="line">        + <span class="number">107878928185336800</span>*X^<span class="number">3</span>*Y^<span class="number">4</span> </span><br><span class="line">        + <span class="number">383083609779811215375</span>*X^<span class="number">4</span>*Y^<span class="number">2</span> </span><br><span class="line">        + <span class="number">383083609779811215375</span>*X^<span class="number">2</span>*Y^<span class="number">4</span></span><br><span class="line">        + <span class="number">128541798906828816384000</span>*X^<span class="number">4</span>*Y </span><br><span class="line">        + <span class="number">128541798906828816384000</span>*X*Y^<span class="number">4</span>  </span><br><span class="line">        + <span class="number">1284733132841424456253440</span>*X^<span class="number">4</span></span><br><span class="line">        + <span class="number">1284733132841424456253440</span>*Y^<span class="number">4</span></span><br><span class="line">        - <span class="number">441206965512914835246100</span>*X^<span class="number">3</span>*Y^<span class="number">3</span>  </span><br><span class="line">        + <span class="number">26898488858380731577417728000</span>*X^<span class="number">3</span>*Y^<span class="number">2</span> </span><br><span class="line">        + <span class="number">26898488858380731577417728000</span>*X^<span class="number">2</span>*Y^<span class="number">3</span> </span><br><span class="line">        - <span class="number">192457934618928299655108231168000</span>*X^<span class="number">3</span>*Y</span><br><span class="line">        - <span class="number">192457934618928299655108231168000</span>*X*Y^<span class="number">3</span> </span><br><span class="line">        + <span class="number">280244777828439527804321565297868800</span>*X^<span class="number">3</span></span><br><span class="line">        + <span class="number">280244777828439527804321565297868800</span>*Y^<span class="number">3</span></span><br><span class="line">        + <span class="number">5110941777552418083110765199360000</span>*X^<span class="number">2</span>*Y^<span class="number">2</span> </span><br><span class="line">        + <span class="number">36554736583949629295706472332656640000</span>*X^<span class="number">2</span>*Y </span><br><span class="line">        + <span class="number">36554736583949629295706472332656640000</span>*X*Y^<span class="number">2</span>        </span><br><span class="line">        + <span class="number">6692500042627997708487149415015068467200</span>*X^<span class="number">2</span> </span><br><span class="line">        - <span class="number">264073457076620596259715790247978782949376</span>*X*Y </span><br><span class="line">        + <span class="number">6692500042627997708487149415015068467200</span>*Y^<span class="number">2</span> </span><br><span class="line">        + <span class="number">53274330803424425450420160273356509151232000</span>*X </span><br><span class="line">        + <span class="number">53274330803424425450420160273356509151232000</span>*Y </span><br><span class="line">        + <span class="number">141359947154721358697753474691071362751004672000</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    res = Φ<span class="number">5.</span>roots(multiplicities=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span>(j_prev == <span class="literal">None</span>):</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">set</span>(res) - <span class="built_in">set</span>([j_prev]))</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j3 <span class="keyword">in</span> find_neighbors_phi5(j2):</span><br><span class="line">    p = GCD(nextPrime(<span class="built_in">int</span>(j3[<span class="number">0</span>])),n)</span><br><span class="line">    <span class="keyword">if</span>(p != <span class="number">1</span>):</span><br><span class="line">        q = n // p</span><br><span class="line">        d = inverse(<span class="number">65537</span>,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">        <span class="built_in">print</span>(long_to_bytes(<span class="built_in">int</span>(<span class="built_in">pow</span>(cipher,d,n))))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#H&amp;NCTF{5till_n0_n33d_to_u5e_co0p3R!XD}</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ezmath">5.EZmath</h3><p>原题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sage9.3</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">flag = <span class="string">b'Kicky_Mu{KFC_v_me_50!!!}'</span></span><br><span class="line">p = getPrime(<span class="number">256</span>)</span><br><span class="line">q = getPrime(<span class="number">256</span>)</span><br><span class="line">n = p*q^<span class="number">3</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">N = <span class="built_in">pow</span>(p, <span class="number">2</span>) + <span class="built_in">pow</span>(q, <span class="number">2</span>)<span class="comment">#=(p-1)*(q-1)=3pq-(p+q)+1=(p+q)^2</span></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">c = <span class="built_in">pow</span>(m,e,n)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"><span class="built_in">print</span>(N)</span><br><span class="line"></span><br><span class="line"><span class="comment"># c = 34992437145329058006346797890363070594973075282993832268508442432592383794878795192132088668900695623924153165395583430068203662437982480669703879475321408183026259569199414707773374072930515794134567251046302713509056391105776219609788157691337060835717732824405538669820477381441348146561989805141829340641</span></span><br><span class="line"><span class="comment"># N = 14131431108308143454435007577716000559419205062698618708133959457011972529354493686093109431184291126255192573090925119389094648901918393503865225710648658</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用sage内置函数two_squares（）分解两数平方和得到p和q,然后直接求解RSA</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">e = </span><br><span class="line">c = </span><br><span class="line">p = </span><br><span class="line">q = </span><br><span class="line">n = p*q**<span class="number">3</span></span><br><span class="line">phi = (q**<span class="number">2</span>)*(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(e,phi)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c,d,n)))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://canoepassed.top/categories/Crypto/">Crypto</category>
      
      
      <category domain="http://canoepassed.top/tags/RSA/">RSA</category>
      
      
      <comments>http://canoepassed.top/2024/05/18/Crypto/2024HNCTF-crypto%E9%83%A8%E5%88%86wp/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>matlab常用算法程序包</title>
      <link>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/matlab%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E7%A8%8B%E5%BA%8F%E5%8C%85/</link>
      <guid>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/matlab%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E7%A8%8B%E5%BA%8F%E5%8C%85/</guid>
      <pubDate>Sat, 18 May 2024 05:01:07 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;svm分类器&quot;&gt;1.SVM分类器&lt;/h1&gt;
&lt;figure class=&quot;highlight matlab&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;240&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;241&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;242&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;243&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;244&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;245&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;246&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;命令函数部分：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clear;&lt;span class=&quot;comment&quot;&gt;%清屏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X =load(&lt;span class=&quot;string&quot;&gt;&#39;data.txt&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = &lt;span class=&quot;built_in&quot;&gt;length&lt;/span&gt;(X);&lt;span class=&quot;comment&quot;&gt;%总样本数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y = X(:,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;%类别标志&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X = X(:,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TOL = &lt;span class=&quot;number&quot;&gt;0.0001&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;%精度要求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;%参数，对损失函数的权重&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;%初始设置截距b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Wold = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;%未更新a时的W(a)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Wnew = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;%更新a后的W(a)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;%设置类别标志为1或者-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;) = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = &lt;span class=&quot;built_in&quot;&gt;zeros&lt;/span&gt;(n,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;%参数a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : n&lt;span class=&quot;comment&quot;&gt;%随机初始化a,a属于[0,C]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;) = &lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%为简化计算，减少重复计算进行的计算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;K = &lt;span class=&quot;built_in&quot;&gt;ones&lt;/span&gt;(n,n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; :n&lt;span class=&quot;comment&quot;&gt;%求出K矩阵，便于之后的计算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        K(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;) = k(X(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,:),X(&lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;,:));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sum = &lt;span class=&quot;built_in&quot;&gt;zeros&lt;/span&gt;(n,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;%中间变量，便于之后的计算，sum(k)=sigma a(i)*y(i)*K(k,i);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sum(k) = sum(k) + a(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;) * y(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;) * K(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,k);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;%迭代过程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%启发式选点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n1 = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;%初始化，n1,n2代表选择的2个点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n2 = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%n1按照第一个违反KKT条件的点选择&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; n1 &amp;lt;= n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; y(n1) * (sum(n1) + b) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; a(n1) &amp;gt;= C &amp;amp;&amp;amp; a(n1) &amp;lt;=  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; y(n1) * (sum(n1) + b) &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; a(n1) ~=  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; y(n1) * (sum(n1) + b) &amp;lt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; a(n1) ~=C&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     n1 = n1 + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;              &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%n2按照最大化|E1-E2|的原则选取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;E1 = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;E2 = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;maxDiff = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;%假设的最大误差&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;E1 = sum(n1) + b - y(n1);&lt;span class=&quot;comment&quot;&gt;%n1的误差&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tempSum = sum(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;) + b - y(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;abs&lt;/span&gt;(E1 - tempSum)&amp;gt; maxDiff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        maxDiff = &lt;span class=&quot;built_in&quot;&gt;abs&lt;/span&gt;(E1 - tempSum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        n2 = &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        E2 = tempSum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%以下进行更新&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a1old = a(n1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a2old = a(n2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;KK = K(n1,n1) + K(n2,n2) - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*K(n1,n2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a2new = a2old + y(n2) *(E1 - E2) / KK;&lt;span class=&quot;comment&quot;&gt;%计算新的a2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%a2必须满足约束条件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S = y(n1) * y(n2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; S == &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    U = &lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,a2old - a1old);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V = &lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(C,C - a1old + a2old);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    U = &lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,a1old + a2old - C);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V = &lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(C,a1old + a2old);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; a2new &amp;gt; V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a2new = V;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; a2new &amp;lt; U&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a2new = U;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a1new = a1old + S * (a2old - a2new);&lt;span class=&quot;comment&quot;&gt;%计算新的a1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a(n1) = a1new;&lt;span class=&quot;comment&quot;&gt;%更新a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a(n2) = a2new;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%更新部分值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sum = &lt;span class=&quot;built_in&quot;&gt;zeros&lt;/span&gt;(n,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sum(k) = sum(k) + a(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;) * y(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;) * K(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,k);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Wold = Wnew;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Wnew = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;%更新a后的W(a)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tempSum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;%临时变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tempSum= tempSum + y(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt; )*y(&lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;)*a(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;)*a(&lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;)*K(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Wnew= Wnew+ a(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Wnew= Wnew - &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt; * tempSum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%以下更新b：通过找到某一个支持向量来计算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;support = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;%支持向量坐标初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;abs&lt;/span&gt;(a(support))&amp;lt; &lt;span class=&quot;number&quot;&gt;1e-4&lt;/span&gt; &amp;amp;&amp;amp; support &amp;lt;= n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    support = support + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; / y(support) - sum(support);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%判断停止条件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;abs&lt;/span&gt;(Wnew/ Wold - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ) &amp;lt;= TOL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%输出结果：包括原分类，辨别函数计算结果，svm分类结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fprintf(&lt;span class=&quot;string&quot;&gt;&#39;第%d点:原标号 &#39;&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt; &amp;lt;= &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fprintf(&lt;span class=&quot;string&quot;&gt;&#39;-1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fprintf(&lt;span class=&quot;string&quot;&gt;&#39; 1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fprintf(&lt;span class=&quot;string&quot;&gt;&#39;    判别函数值%f      分类结果&#39;&lt;/span&gt;,sum(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;) + b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;abs&lt;/span&gt;(sum(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;) + b - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;lt; &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fprintf(&lt;span class=&quot;string&quot;&gt;&#39;1&#92;n&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;abs&lt;/span&gt;(sum(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;) + b + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;lt; &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fprintf(&lt;span class=&quot;string&quot;&gt;&#39;-1&#92;n&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fprintf(&lt;span class=&quot;string&quot;&gt;&#39;归类错误&#92;n&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;名为f的功能函数部分:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;y&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x1,x2)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y = &lt;span class=&quot;built_in&quot;&gt;exp&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;-0.5&lt;/span&gt;*norm(x1 - x2).^&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.&lt;/span&gt;数据：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.8871&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.3491&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;8.3376&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.2519&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.2083&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.5041&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;-1.1925&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.9338&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.8790&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;-0.1277&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.4371&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.6971&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.9697&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.0906&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.0391&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.7603&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.8241&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.5323&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.6382&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.5516&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.4694&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.3438&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.4539&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.9366&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;-1.3361&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-2.0201&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.6393&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;-0.3886&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.3041&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;8.0450&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;-0.6780&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.0196&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.4084&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.3552&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.1051&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.2458&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.6560&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.0786&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.8521&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.8117&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.5451&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.8925&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.4773&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-1.9340&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.9256&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;-0.0732&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.9526&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.4609&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.1521&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.3711&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.2600&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.4820&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.7493&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.3475&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.6140&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.5261&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;8.3776&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.5721&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.3460&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.7853&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.5269&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.1452&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.3900&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.7879&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.5390&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.5516&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.9885&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.7625&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.1832&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;-0.3318&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.4373&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.6884&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.3578&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.4709&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.4302&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;2.7210&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-1.1268&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.7719&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.5039&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.1025&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.3650&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.1107&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.6885&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.7650&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.7862&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.3587&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.3203&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.0444&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-1.5841&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.6349&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.7795&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.7276&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.9847&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.6710&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.4724&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.5504&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.2303&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.2720&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-1.6028&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.7089&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-1.7399&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.8882&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.0059&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.5557&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.1188&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;2.3050&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.8545&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.8294&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.9555&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.9898&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.3501&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.7141&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.5413&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.8739&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;2.2749&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.3280&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.9604&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.6171&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.5270&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.3826&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;3.6681&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-1.8409&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.8934&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.1964&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.8781&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.4146&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.7788&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.1048&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.0380&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.7916&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.0906&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.8513&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.0807&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.8849&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.9766&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.6340&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.6030&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.6940&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.9069&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.0609&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.4208&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.6599&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.9409&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;8.1108&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1.3763&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.8899&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.9069&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0.8485&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.4688&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.7393&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;3.6792&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.1092&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.9051&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.3812&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.2148&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.1211&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.3971&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.4139&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.7974&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;5.0716&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.7253&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;10.5373&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;5.3078&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;8.8138&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.1682&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.1448&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.5156&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.8731&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;5.3609&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.0458&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.0815&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.7452&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.6352&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.3689&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;6.0274&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.5397&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-1.9120&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;5.3174&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.0134&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.7935&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;7.2459&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.6970&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.1246&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;6.1007&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;8.1087&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.5568&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;5.9924&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.9238&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.7938&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;6.0263&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.3333&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.5185&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;3.6470&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;8.0915&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.4713&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;3.6543&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.2264&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.5783&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;5.0114&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.5335&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.5229&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.4348&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.4379&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.0292&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;3.6087&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.7351&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.0172&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;3.5374&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.5354&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.6578&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;6.0048&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.0691&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;10.4513&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;3.1423&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.0003&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.4994&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;3.4012&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.1536&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;8.3510&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;5.5471&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.1372&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-1.5090&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;6.5089&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.4911&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;8.0468&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;5.4583&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.7674&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.9353&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.1727&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.9798&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.6027&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;5.1672&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;8.4136&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.8621&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.8808&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.5514&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.9953&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;5.4938&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.1998&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.2440&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;5.4542&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.8803&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.4269&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.8743&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.9641&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;8.1417&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;5.9762&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.7711&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.3816&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;6.6945&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.2858&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.8942&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.7301&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.7652&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;1.6608&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.7084&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.3623&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.2596&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;6.0408&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.3138&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.7876&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.6024&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;8.3517&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.2193&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.7054&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.6633&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.3492&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.7139&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.6362&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.2330&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.0850&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;10.7118&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.3541&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;6.1088&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.1635&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.2292&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.9836&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.4042&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.7422&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;6.1387&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.1949&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.5614&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;6.0700&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.0373&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.3256&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;5.6881&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;5.1363&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;9.9254&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;7.2058&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.3570&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.7361&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.2972&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;7.3245&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;4.7928&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4.7794&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;8.1235&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.1827&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;3.9282&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;6.4092&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;-0.6339&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="svm分类器">1.SVM分类器</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.</span>命令函数部分：</span><br><span class="line"></span><br><span class="line">clear;<span class="comment">%清屏</span></span><br><span class="line">clc;</span><br><span class="line">X =load(<span class="string">'data.txt'</span>);</span><br><span class="line">n = <span class="built_in">length</span>(X);<span class="comment">%总样本数量</span></span><br><span class="line">y = X(:,<span class="number">4</span>);<span class="comment">%类别标志</span></span><br><span class="line">X = X(:,<span class="number">1</span>:<span class="number">3</span>);</span><br><span class="line">TOL = <span class="number">0.0001</span>;<span class="comment">%精度要求</span></span><br><span class="line">C = <span class="number">1</span>;<span class="comment">%参数，对损失函数的权重</span></span><br><span class="line">b = <span class="number">0</span>;<span class="comment">%初始设置截距b</span></span><br><span class="line">Wold = <span class="number">0</span>;<span class="comment">%未更新a时的W(a)</span></span><br><span class="line">Wnew = <span class="number">0</span>;<span class="comment">%更新a后的W(a)</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : <span class="number">50</span><span class="comment">%设置类别标志为1或者-1</span></span><br><span class="line">    y(<span class="built_in">i</span>) = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">a = <span class="built_in">zeros</span>(n,<span class="number">1</span>);<span class="comment">%参数a</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : n<span class="comment">%随机初始化a,a属于[0,C]</span></span><br><span class="line">        a(<span class="built_in">i</span>) = <span class="number">0.2</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%为简化计算，减少重复计算进行的计算</span></span><br><span class="line">K = <span class="built_in">ones</span>(n,n);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> :n<span class="comment">%求出K矩阵，便于之后的计算</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span> : n</span><br><span class="line">        K(<span class="built_in">i</span>,<span class="built_in">j</span>) = k(X(<span class="built_in">i</span>,:),X(<span class="built_in">j</span>,:));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">sum = <span class="built_in">zeros</span>(n,<span class="number">1</span>);<span class="comment">%中间变量，便于之后的计算，sum(k)=sigma a(i)*y(i)*K(k,i);</span></span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span> : n</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : n</span><br><span class="line">        sum(k) = sum(k) + a(<span class="built_in">i</span>) * y(<span class="built_in">i</span>) * K(<span class="built_in">i</span>,k);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span><span class="comment">%迭代过程</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">%启发式选点</span></span><br><span class="line">n1 = <span class="number">1</span>;<span class="comment">%初始化，n1,n2代表选择的2个点</span></span><br><span class="line">n2 = <span class="number">2</span>;</span><br><span class="line"><span class="comment">%n1按照第一个违反KKT条件的点选择</span></span><br><span class="line"><span class="keyword">while</span> n1 &lt;= n</span><br><span class="line">    <span class="keyword">if</span> y(n1) * (sum(n1) + b) == <span class="number">1</span> &amp;&amp; a(n1) &gt;= C &amp;&amp; a(n1) &lt;=  <span class="number">0</span></span><br><span class="line">         <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> y(n1) * (sum(n1) + b) &gt; <span class="number">1</span> &amp;&amp; a(n1) ~=  <span class="number">0</span></span><br><span class="line">           <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> y(n1) * (sum(n1) + b) &lt; <span class="number">1</span> &amp;&amp; a(n1) ~=C</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">     n1 = n1 + <span class="number">1</span>;              </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%n2按照最大化|E1-E2|的原则选取</span></span><br><span class="line">E1 = <span class="number">0</span>;</span><br><span class="line">E2 = <span class="number">0</span>;</span><br><span class="line">maxDiff = <span class="number">0</span>;<span class="comment">%假设的最大误差</span></span><br><span class="line">E1 = sum(n1) + b - y(n1);<span class="comment">%n1的误差</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : n</span><br><span class="line">    tempSum = sum(<span class="built_in">i</span>) + b - y(<span class="built_in">i</span>);</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">abs</span>(E1 - tempSum)&gt; maxDiff</span><br><span class="line">        maxDiff = <span class="built_in">abs</span>(E1 - tempSum);</span><br><span class="line">        n2 = <span class="built_in">i</span>;</span><br><span class="line">        E2 = tempSum;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%以下进行更新</span></span><br><span class="line">a1old = a(n1);</span><br><span class="line">a2old = a(n2);</span><br><span class="line">KK = K(n1,n1) + K(n2,n2) - <span class="number">2</span>*K(n1,n2);</span><br><span class="line">a2new = a2old + y(n2) *(E1 - E2) / KK;<span class="comment">%计算新的a2</span></span><br><span class="line"><span class="comment">%a2必须满足约束条件</span></span><br><span class="line">S = y(n1) * y(n2);</span><br><span class="line"><span class="keyword">if</span> S == <span class="number">-1</span></span><br><span class="line">    U = <span class="built_in">max</span>(<span class="number">0</span>,a2old - a1old);</span><br><span class="line">    V = <span class="built_in">min</span>(C,C - a1old + a2old);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    U = <span class="built_in">max</span>(<span class="number">0</span>,a1old + a2old - C);</span><br><span class="line">    V = <span class="built_in">min</span>(C,a1old + a2old);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> a2new &gt; V</span><br><span class="line">    a2new = V;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> a2new &lt; U</span><br><span class="line">    a2new = U;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">a1new = a1old + S * (a2old - a2new);<span class="comment">%计算新的a1</span></span><br><span class="line">a(n1) = a1new;<span class="comment">%更新a</span></span><br><span class="line">a(n2) = a2new;</span><br><span class="line"></span><br><span class="line"><span class="comment">%更新部分值</span></span><br><span class="line">sum = <span class="built_in">zeros</span>(n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span> : n</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : n</span><br><span class="line">        sum(k) = sum(k) + a(<span class="built_in">i</span>) * y(<span class="built_in">i</span>) * K(<span class="built_in">i</span>,k);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">Wold = Wnew;</span><br><span class="line">Wnew = <span class="number">0</span>;<span class="comment">%更新a后的W(a)</span></span><br><span class="line">tempSum = <span class="number">0</span>;<span class="comment">%临时变量</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : n</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span> : n</span><br><span class="line">    tempSum= tempSum + y(<span class="built_in">i</span> )*y(<span class="built_in">j</span>)*a(<span class="built_in">i</span>)*a(<span class="built_in">j</span>)*K(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    Wnew= Wnew+ a(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">Wnew= Wnew - <span class="number">0.5</span> * tempSum;</span><br><span class="line"><span class="comment">%以下更新b：通过找到某一个支持向量来计算</span></span><br><span class="line">support = <span class="number">1</span>;<span class="comment">%支持向量坐标初始化</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">abs</span>(a(support))&lt; <span class="number">1e-4</span> &amp;&amp; support &lt;= n</span><br><span class="line">    support = support + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">b = <span class="number">1</span> / y(support) - sum(support);</span><br><span class="line"><span class="comment">%判断停止条件</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">abs</span>(Wnew/ Wold - <span class="number">1</span> ) &lt;= TOL</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%输出结果：包括原分类，辨别函数计算结果，svm分类结果</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : n</span><br><span class="line">    fprintf(<span class="string">'第%d点:原标号 '</span>,<span class="built_in">i</span>);</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">i</span> &lt;= <span class="number">50</span></span><br><span class="line">        fprintf(<span class="string">'-1'</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        fprintf(<span class="string">' 1'</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    fprintf(<span class="string">'    判别函数值%f      分类结果'</span>,sum(<span class="built_in">i</span>) + b);</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">abs</span>(sum(<span class="built_in">i</span>) + b - <span class="number">1</span>) &lt; <span class="number">0.5</span></span><br><span class="line">        fprintf(<span class="string">'1\n'</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> <span class="built_in">abs</span>(sum(<span class="built_in">i</span>) + b + <span class="number">1</span>) &lt; <span class="number">0.5</span></span><br><span class="line">            fprintf(<span class="string">'-1\n'</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            fprintf(<span class="string">'归类错误\n'</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>名为f的功能函数部分:</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">k</span><span class="params">(x1,x2)</span></span></span><br><span class="line">    y = <span class="built_in">exp</span>(<span class="number">-0.5</span>*norm(x1 - x2).^<span class="number">2</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>数据：</span><br><span class="line">    <span class="number">0.8871</span>   <span class="number">-0.3491</span>    <span class="number">8.3376</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.2519</span>    <span class="number">1.2083</span>    <span class="number">6.5041</span>         <span class="number">0</span></span><br><span class="line">   <span class="number">-1.1925</span>    <span class="number">1.9338</span>    <span class="number">1.8790</span>         <span class="number">0</span></span><br><span class="line">   <span class="number">-0.1277</span>    <span class="number">2.4371</span>    <span class="number">2.6971</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.9697</span>    <span class="number">3.0906</span>    <span class="number">6.0391</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.7603</span>    <span class="number">0.8241</span>    <span class="number">1.5323</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.6382</span>    <span class="number">3.5516</span>    <span class="number">4.4694</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.3438</span>   <span class="number">-0.4539</span>    <span class="number">5.9366</span>         <span class="number">0</span></span><br><span class="line">   <span class="number">-1.3361</span>   <span class="number">-2.0201</span>    <span class="number">1.6393</span>         <span class="number">0</span></span><br><span class="line">   <span class="number">-0.3886</span>    <span class="number">3.3041</span>    <span class="number">8.0450</span>         <span class="number">0</span></span><br><span class="line">   <span class="number">-0.6780</span>    <span class="number">6.0196</span>   <span class="number">-0.4084</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.3552</span>   <span class="number">-0.1051</span>    <span class="number">1.2458</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.6560</span>    <span class="number">4.0786</span>    <span class="number">0.8521</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.8117</span>    <span class="number">3.5451</span>    <span class="number">6.8925</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.4773</span>   <span class="number">-1.9340</span>    <span class="number">3.9256</span>         <span class="number">0</span></span><br><span class="line">   <span class="number">-0.0732</span>   <span class="number">-0.9526</span>    <span class="number">0.4609</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.1521</span>    <span class="number">4.3711</span>    <span class="number">2.2600</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.4820</span>    <span class="number">0.7493</span>    <span class="number">0.3475</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.6140</span>    <span class="number">4.5261</span>    <span class="number">8.3776</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.5721</span>    <span class="number">3.3460</span>    <span class="number">3.7853</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.5269</span>    <span class="number">4.1452</span>    <span class="number">4.3900</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.7879</span>   <span class="number">-0.5390</span>    <span class="number">2.5516</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.9885</span>    <span class="number">5.7625</span>    <span class="number">0.1832</span>         <span class="number">0</span></span><br><span class="line">   <span class="number">-0.3318</span>    <span class="number">2.4373</span>   <span class="number">-0.6884</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.3578</span>    <span class="number">5.4709</span>    <span class="number">3.4302</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">2.7210</span>   <span class="number">-1.1268</span>    <span class="number">4.7719</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.5039</span>   <span class="number">-0.1025</span>    <span class="number">2.3650</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.1107</span>    <span class="number">1.6885</span>    <span class="number">3.7650</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.7862</span>    <span class="number">1.3587</span>    <span class="number">7.3203</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.0444</span>   <span class="number">-1.5841</span>    <span class="number">3.6349</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.7795</span>    <span class="number">1.7276</span>    <span class="number">4.9847</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.6710</span>    <span class="number">1.4724</span>   <span class="number">-0.5504</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.2303</span>    <span class="number">0.2720</span>   <span class="number">-1.6028</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.7089</span>   <span class="number">-1.7399</span>    <span class="number">4.8882</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.0059</span>    <span class="number">0.5557</span>    <span class="number">5.1188</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">2.3050</span>    <span class="number">0.8545</span>    <span class="number">2.8294</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.9555</span>    <span class="number">0.9898</span>    <span class="number">0.3501</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.7141</span>    <span class="number">1.5413</span>    <span class="number">3.8739</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">2.2749</span>    <span class="number">5.3280</span>    <span class="number">4.9604</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.6171</span>    <span class="number">0.5270</span>    <span class="number">3.3826</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">3.6681</span>   <span class="number">-1.8409</span>    <span class="number">4.8934</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.1964</span>    <span class="number">1.8781</span>    <span class="number">1.4146</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.7788</span>    <span class="number">2.1048</span>    <span class="number">0.0380</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.7916</span>    <span class="number">5.0906</span>    <span class="number">3.8513</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.0807</span>    <span class="number">1.8849</span>    <span class="number">5.9766</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.6340</span>    <span class="number">2.6030</span>    <span class="number">3.6940</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.9069</span>   <span class="number">-0.0609</span>    <span class="number">7.4208</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.6599</span>    <span class="number">4.9409</span>    <span class="number">8.1108</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">1.3763</span>    <span class="number">0.8899</span>    <span class="number">3.9069</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.8485</span>    <span class="number">1.4688</span>    <span class="number">6.7393</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">3.6792</span>    <span class="number">6.1092</span>    <span class="number">4.9051</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.3812</span>    <span class="number">7.2148</span>    <span class="number">6.1211</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.3971</span>    <span class="number">3.4139</span>    <span class="number">7.7974</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">5.0716</span>    <span class="number">7.7253</span>   <span class="number">10.5373</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">5.3078</span>    <span class="number">8.8138</span>    <span class="number">6.1682</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.1448</span>    <span class="number">5.5156</span>    <span class="number">2.8731</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">5.3609</span>    <span class="number">6.0458</span>    <span class="number">4.0815</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.7452</span>    <span class="number">6.6352</span>    <span class="number">1.3689</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">6.0274</span>    <span class="number">6.5397</span>   <span class="number">-1.9120</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">5.3174</span>    <span class="number">3.0134</span>    <span class="number">6.7935</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">7.2459</span>    <span class="number">3.6970</span>    <span class="number">3.1246</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">6.1007</span>    <span class="number">8.1087</span>    <span class="number">5.5568</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">5.9924</span>    <span class="number">6.9238</span>    <span class="number">5.7938</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">6.0263</span>    <span class="number">5.3333</span>    <span class="number">7.5185</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">3.6470</span>    <span class="number">8.0915</span>    <span class="number">6.4713</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">3.6543</span>    <span class="number">7.2264</span>    <span class="number">7.5783</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">5.0114</span>    <span class="number">6.5335</span>    <span class="number">3.5229</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.4348</span>    <span class="number">7.4379</span>   <span class="number">-0.0292</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">3.6087</span>    <span class="number">3.7351</span>    <span class="number">3.0172</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">3.5374</span>    <span class="number">5.5354</span>    <span class="number">7.6578</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">6.0048</span>    <span class="number">2.0691</span>   <span class="number">10.4513</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">3.1423</span>    <span class="number">4.0003</span>    <span class="number">5.4994</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">3.4012</span>    <span class="number">7.1536</span>    <span class="number">8.3510</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">5.5471</span>    <span class="number">5.1372</span>   <span class="number">-1.5090</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">6.5089</span>    <span class="number">5.4911</span>    <span class="number">8.0468</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">5.4583</span>    <span class="number">6.7674</span>    <span class="number">5.9353</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.1727</span>    <span class="number">2.9798</span>    <span class="number">3.6027</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">5.1672</span>    <span class="number">8.4136</span>    <span class="number">4.8621</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.8808</span>    <span class="number">3.5514</span>    <span class="number">1.9953</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">5.4938</span>    <span class="number">4.1998</span>    <span class="number">3.2440</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">5.4542</span>    <span class="number">5.8803</span>    <span class="number">4.4269</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.8743</span>    <span class="number">3.9641</span>    <span class="number">8.1417</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">5.9762</span>    <span class="number">6.7711</span>    <span class="number">2.3816</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">6.6945</span>    <span class="number">7.2858</span>    <span class="number">1.8942</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.7301</span>    <span class="number">5.7652</span>    <span class="number">1.6608</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.7084</span>    <span class="number">5.3623</span>    <span class="number">3.2596</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">6.0408</span>    <span class="number">3.3138</span>    <span class="number">7.7876</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.6024</span>    <span class="number">8.3517</span>    <span class="number">0.2193</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.7054</span>    <span class="number">6.6633</span>   <span class="number">-0.3492</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.7139</span>    <span class="number">5.6362</span>    <span class="number">6.2330</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.0850</span>   <span class="number">10.7118</span>    <span class="number">3.3541</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">6.1088</span>    <span class="number">6.1635</span>    <span class="number">4.2292</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.9836</span>    <span class="number">5.4042</span>    <span class="number">6.7422</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">6.1387</span>    <span class="number">6.1949</span>    <span class="number">2.5614</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">6.0700</span>    <span class="number">7.0373</span>    <span class="number">3.3256</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">5.6881</span>    <span class="number">5.1363</span>    <span class="number">9.9254</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">7.2058</span>    <span class="number">2.3570</span>    <span class="number">4.7361</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.2972</span>    <span class="number">7.3245</span>    <span class="number">4.7928</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">4.7794</span>    <span class="number">8.1235</span>    <span class="number">3.1827</span>         <span class="number">1</span></span><br><span class="line">    <span class="number">3.9282</span>    <span class="number">6.4092</span>   <span class="number">-0.6339</span>         <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="小波神经网络预测代码">2.小波神经网络预测代码</h1><h2 id="cengcifenxi.m">cengcifenxi.m</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">clc</span><br><span class="line">clear </span><br><span class="line">A=[1 5 3 7;1/5 1 1/3 3;1/3 3 1 5;1/7 1/3 1/5 1];</span><br><span class="line">[m,n]=size(A);</span><br><span class="line">RI=[0 0 0.58 0.90 1.12 1.24 1.32 1.41 1.45 1.49 1.51];</span><br><span class="line">R=rank(A);</span><br><span class="line">[V,D]=eig(A);</span><br><span class="line">tz=max(D);</span><br><span class="line">B=max(tz);</span><br><span class="line">[row,col]=find(D==B);</span><br><span class="line">C=V(:,col);</span><br><span class="line">CI=(B-n)/(n-1);</span><br><span class="line">CR=CI/RI(1,n);</span><br><span class="line">if CR&lt;0.10</span><br><span class="line">    disp('CI=');disp(CI);</span><br><span class="line">    disp('CR=');disp(CR);</span><br><span class="line">    disp('矩阵通过一致性检验，各向量权重向量Q为：');</span><br><span class="line">    Q=zeros(n,1);</span><br><span class="line">    for i=1:n</span><br><span class="line">        Q(i,1)=C(i,1)/sum(C(:,1));</span><br><span class="line">    end</span><br><span class="line">    Q</span><br><span class="line">else</span><br><span class="line">    disp('矩阵没有通过一致性检验，请重新构造');</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h2 id="d_mymorlet.m">d_mymorlet.m</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span>=<span class="title">d_mymorlet</span><span class="params">(t)</span></span></span><br><span class="line"></span><br><span class="line">y = <span class="number">-1.75</span>*<span class="built_in">sin</span>(<span class="number">1.75</span>*t).*<span class="built_in">exp</span>(-(t.^<span class="number">2</span>)/<span class="number">2</span>)-t* <span class="built_in">cos</span>(<span class="number">1.75</span>*t).*<span class="built_in">exp</span>(-(t.^<span class="number">2</span>)/<span class="number">2</span>) ;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="mymorlet.m">mymorlet.m</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%这里面用到的两个子程序分别是：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span>=<span class="title">mymorlet</span><span class="params">(t)</span></span></span><br><span class="line"></span><br><span class="line">y = <span class="built_in">exp</span>(-(t.^<span class="number">2</span>)/<span class="number">2</span>) * <span class="built_in">cos</span>(<span class="number">1.75</span>*t);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="shenjingwangluo.m">shenjingwangluo.m</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">clc</span><br><span class="line">clear </span><br><span class="line">P=[<span class="number">-1</span> <span class="number">-1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">4</span>;<span class="number">0</span> <span class="number">5</span> <span class="number">0</span> <span class="number">5</span> <span class="number">7</span>];</span><br><span class="line">T=[<span class="number">-1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">-1</span>];</span><br><span class="line">P1=[<span class="number">3</span>;<span class="number">4</span>];</span><br><span class="line">net=newff(minmax(P),[<span class="number">5</span>,<span class="number">1</span>],{<span class="string">'tansig'</span>,<span class="string">'purelin'</span>},<span class="string">'trainrp'</span>);</span><br><span class="line">net.trainParam.epochs=<span class="number">500</span>;</span><br><span class="line">net.trainParam.goal=<span class="number">0.000001</span>;</span><br><span class="line">net.trainParam.lr=<span class="number">0.05</span>;</span><br><span class="line">net.trainParam.show=<span class="number">20</span>;</span><br><span class="line">[net,tr]=train(net,P,T);</span><br><span class="line">sim(net,P1)</span><br></pre></td></tr></table></figure><h2 id="wavenn.m">wavenn.m</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 该代码为基于小波神经网络的交通流预测代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 清空环境变量</span></span><br><span class="line">clc</span><br><span class="line">clear</span><br><span class="line"></span><br><span class="line"><span class="comment">%% 网络参数配置</span></span><br><span class="line">load traffic_flux input output input_test output_test</span><br><span class="line"></span><br><span class="line">M=<span class="built_in">size</span>(input,<span class="number">2</span>); <span class="comment">%输入节点个数</span></span><br><span class="line">N=<span class="built_in">size</span>(output,<span class="number">2</span>); <span class="comment">%输出节点个数</span></span><br><span class="line"></span><br><span class="line">n=<span class="number">6</span>; <span class="comment">%隐形节点个数</span></span><br><span class="line">lr1=<span class="number">0.01</span>; <span class="comment">%学习概率</span></span><br><span class="line">lr2=<span class="number">0.001</span>; <span class="comment">%学习概率</span></span><br><span class="line">maxgen=<span class="number">100</span>; <span class="comment">%迭代次数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%权值初始化</span></span><br><span class="line">Wjk=<span class="built_in">randn</span>(n,M);Wjk_1=Wjk;Wjk_2=Wjk_1;</span><br><span class="line">Wij=<span class="built_in">randn</span>(N,n);Wij_1=Wij;Wij_2=Wij_1;</span><br><span class="line">a=<span class="built_in">randn</span>(<span class="number">1</span>,n);a_1=a;a_2=a_1;</span><br><span class="line">b=<span class="built_in">randn</span>(<span class="number">1</span>,n);b_1=b;b_2=b_1;</span><br><span class="line"></span><br><span class="line"><span class="comment">%节点初始化</span></span><br><span class="line">y=<span class="built_in">zeros</span>(<span class="number">1</span>,N);</span><br><span class="line">net=<span class="built_in">zeros</span>(<span class="number">1</span>,n);</span><br><span class="line">net_ab=<span class="built_in">zeros</span>(<span class="number">1</span>,n);</span><br><span class="line"></span><br><span class="line"><span class="comment">%权值学习增量初始化</span></span><br><span class="line">d_Wjk=<span class="built_in">zeros</span>(n,M);</span><br><span class="line">d_Wij=<span class="built_in">zeros</span>(N,n);</span><br><span class="line">d_a=<span class="built_in">zeros</span>(<span class="number">1</span>,n);</span><br><span class="line">d_b=<span class="built_in">zeros</span>(<span class="number">1</span>,n);</span><br><span class="line"></span><br><span class="line"><span class="comment">%% 输入输出数据归一化</span></span><br><span class="line">[inputn,inputps]=mapminmax(input');</span><br><span class="line">[outputn,outputps]=mapminmax(output'); </span><br><span class="line">inputn=inputn';</span><br><span class="line">outputn=outputn';</span><br><span class="line"></span><br><span class="line">error=<span class="built_in">zeros</span>(<span class="number">1</span>,maxgen);</span><br><span class="line"><span class="comment">%% 网络训练</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:maxgen</span><br><span class="line">    </span><br><span class="line">    <span class="comment">%误差累计</span></span><br><span class="line">    error(<span class="built_in">i</span>)=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">% 循环训练</span></span><br><span class="line">    <span class="keyword">for</span> kk=<span class="number">1</span>:<span class="built_in">size</span>(input,<span class="number">1</span>)</span><br><span class="line">        x=inputn(kk,:);</span><br><span class="line">        yqw=outputn(kk,:);</span><br><span class="line">   </span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">            <span class="keyword">for</span> k=<span class="number">1</span>:M</span><br><span class="line">                net(<span class="built_in">j</span>)=net(<span class="built_in">j</span>)+Wjk(<span class="built_in">j</span>,k)*x(k);</span><br><span class="line">                net_ab(<span class="built_in">j</span>)=(net(<span class="built_in">j</span>)-b(<span class="built_in">j</span>))/a(<span class="built_in">j</span>);</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            temp=mymorlet(net_ab(<span class="built_in">j</span>));</span><br><span class="line">            <span class="keyword">for</span> k=<span class="number">1</span>:N</span><br><span class="line">                y=y+Wij(k,<span class="built_in">j</span>)*temp;   <span class="comment">%小波函数</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">%计算误差和</span></span><br><span class="line">        error(<span class="built_in">i</span>)=error(<span class="built_in">i</span>)+sum(<span class="built_in">abs</span>(yqw-y));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">%权值调整</span></span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">            <span class="comment">%计算d_Wij</span></span><br><span class="line">            temp=mymorlet(net_ab(<span class="built_in">j</span>));</span><br><span class="line">            <span class="keyword">for</span> k=<span class="number">1</span>:N</span><br><span class="line">                d_Wij(k,<span class="built_in">j</span>)=d_Wij(k,<span class="built_in">j</span>)-(yqw(k)-y(k))*temp;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="comment">%计算d_Wjk</span></span><br><span class="line">            temp=d_mymorlet(net_ab(<span class="built_in">j</span>));</span><br><span class="line">            <span class="keyword">for</span> k=<span class="number">1</span>:M</span><br><span class="line">                <span class="keyword">for</span> l=<span class="number">1</span>:N</span><br><span class="line">                    d_Wjk(<span class="built_in">j</span>,k)=d_Wjk(<span class="built_in">j</span>,k)+(yqw(l)-y(l))*Wij(l,<span class="built_in">j</span>) ;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                d_Wjk(<span class="built_in">j</span>,k)=-d_Wjk(<span class="built_in">j</span>,k)*temp*x(k)/a(<span class="built_in">j</span>);</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="comment">%计算d_b</span></span><br><span class="line">            <span class="keyword">for</span> k=<span class="number">1</span>:N</span><br><span class="line">                d_b(<span class="built_in">j</span>)=d_b(<span class="built_in">j</span>)+(yqw(k)-y(k))*Wij(k,<span class="built_in">j</span>);</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            d_b(<span class="built_in">j</span>)=d_b(<span class="built_in">j</span>)*temp/a(<span class="built_in">j</span>);</span><br><span class="line">            <span class="comment">%计算d_a</span></span><br><span class="line">            <span class="keyword">for</span> k=<span class="number">1</span>:N</span><br><span class="line">                d_a(<span class="built_in">j</span>)=d_a(<span class="built_in">j</span>)+(yqw(k)-y(k))*Wij(k,<span class="built_in">j</span>);</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            d_a(<span class="built_in">j</span>)=d_a(<span class="built_in">j</span>)*temp*((net(<span class="built_in">j</span>)-b(<span class="built_in">j</span>))/b(<span class="built_in">j</span>))/a(<span class="built_in">j</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">%权值参数更新      </span></span><br><span class="line">        Wij=Wij-lr1*d_Wij;</span><br><span class="line">        Wjk=Wjk-lr1*d_Wjk;</span><br><span class="line">        b=b-lr2*d_b;</span><br><span class="line">        a=a-lr2*d_a;</span><br><span class="line">    </span><br><span class="line">        d_Wjk=<span class="built_in">zeros</span>(n,M);</span><br><span class="line">        d_Wij=<span class="built_in">zeros</span>(N,n);</span><br><span class="line">        d_a=<span class="built_in">zeros</span>(<span class="number">1</span>,n);</span><br><span class="line">        d_b=<span class="built_in">zeros</span>(<span class="number">1</span>,n);</span><br><span class="line"></span><br><span class="line">        y=<span class="built_in">zeros</span>(<span class="number">1</span>,N);</span><br><span class="line">        net=<span class="built_in">zeros</span>(<span class="number">1</span>,n);</span><br><span class="line">        net_ab=<span class="built_in">zeros</span>(<span class="number">1</span>,n);</span><br><span class="line">        </span><br><span class="line">        Wjk_1=Wjk;Wjk_2=Wjk_1;</span><br><span class="line">        Wij_1=Wij;Wij_2=Wij_1;</span><br><span class="line">        a_1=a;a_2=a_1;</span><br><span class="line">        b_1=b;b_2=b_1;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 网络预测</span></span><br><span class="line"><span class="comment">%预测输入归一化</span></span><br><span class="line">x=mapminmax(<span class="string">'apply'</span>,input_test',inputps);</span><br><span class="line">x=x';</span><br><span class="line">yuce=<span class="built_in">zeros</span>(<span class="number">92</span>,<span class="number">1</span>);</span><br><span class="line"><span class="comment">%网络预测</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">92</span></span><br><span class="line">    x_test=x(<span class="built_in">i</span>,:);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:<span class="number">1</span>:n</span><br><span class="line">        <span class="keyword">for</span> k=<span class="number">1</span>:<span class="number">1</span>:M</span><br><span class="line">            net(<span class="built_in">j</span>)=net(<span class="built_in">j</span>)+Wjk(<span class="built_in">j</span>,k)*x_test(k);</span><br><span class="line">            net_ab(<span class="built_in">j</span>)=(net(<span class="built_in">j</span>)-b(<span class="built_in">j</span>))/a(<span class="built_in">j</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        temp=mymorlet(net_ab(<span class="built_in">j</span>));</span><br><span class="line">        <span class="keyword">for</span> k=<span class="number">1</span>:N</span><br><span class="line">            y(k)=y(k)+Wij(k,<span class="built_in">j</span>)*temp ; </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    yuce(<span class="built_in">i</span>)=y(k);</span><br><span class="line">    y=<span class="built_in">zeros</span>(<span class="number">1</span>,N);</span><br><span class="line">    net=<span class="built_in">zeros</span>(<span class="number">1</span>,n);</span><br><span class="line">    net_ab=<span class="built_in">zeros</span>(<span class="number">1</span>,n);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%预测输出反归一化</span></span><br><span class="line">ynn=mapminmax(<span class="string">'reverse'</span>,yuce,outputps);</span><br><span class="line"></span><br><span class="line"><span class="comment">%% 结果分析</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">plot</span>(ynn,<span class="string">'r*:'</span>)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(output_test,<span class="string">'bo--'</span>)</span><br><span class="line">title(<span class="string">'预测交通流量'</span>,<span class="string">'fontsize'</span>,<span class="number">12</span>)</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">'预测交通流量'</span>,<span class="string">'实际交通流量'</span>,<span class="string">'fontsize'</span>,<span class="number">12</span>)</span><br><span class="line">xlabel(<span class="string">'时间点'</span>)</span><br><span class="line">ylabel(<span class="string">'交通流量'</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="topsis方法">3.TOPSIS方法</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%topsis</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%矩阵x为</span></span><br><span class="line"></span><br><span class="line">[n,m]=<span class="built_in">size</span>(x);</span><br><span class="line"></span><br><span class="line"><span class="comment">%将把所有指标换成接近的大小</span></span><br><span class="line"><span class="comment">%x(:,1)=x(:,1)*10; </span></span><br><span class="line"></span><br><span class="line">zh=<span class="built_in">zeros</span>(<span class="number">1</span>,m); </span><br><span class="line"></span><br><span class="line">d1=<span class="built_in">zeros</span>(<span class="number">1</span>,n); <span class="comment">%最小值矩阵</span></span><br><span class="line"></span><br><span class="line">d2=<span class="built_in">zeros</span>(<span class="number">1</span>,n);<span class="comment">%最大值矩阵 </span></span><br><span class="line"></span><br><span class="line">c=<span class="built_in">zeros</span>(<span class="number">1</span>,n);<span class="comment">%接近程度</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%归一化 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</span><br><span class="line">     </span><br><span class="line">           <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">      </span><br><span class="line">                     zh(<span class="built_in">i</span>)=zh(<span class="built_in">i</span>)+x(<span class="built_in">j</span>,<span class="built_in">i</span>)^<span class="number">2</span>;</span><br><span class="line">    </span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m </span><br><span class="line">    </span><br><span class="line">           <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n </span><br><span class="line">        </span><br><span class="line">                     x(<span class="built_in">j</span>,<span class="built_in">i</span>)=x(<span class="built_in">j</span>,<span class="built_in">i</span>)/<span class="built_in">sqrt</span>( zh(<span class="built_in">i</span>));</span><br><span class="line">    </span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%计算距离 </span></span><br><span class="line"></span><br><span class="line">xx=<span class="built_in">min</span>(x); </span><br><span class="line"></span><br><span class="line">dd=<span class="built_in">max</span>(x);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">    </span><br><span class="line">           <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:m </span><br><span class="line">        </span><br><span class="line">                       d1(<span class="built_in">i</span>)=d1(<span class="built_in">i</span>)+(x(<span class="built_in">i</span>,<span class="built_in">j</span>)-xx(<span class="built_in">j</span>))^<span class="number">2</span>; </span><br><span class="line">    </span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">           d1(<span class="built_in">i</span>)=<span class="built_in">sqrt</span>(d1(<span class="built_in">i</span>)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">    </span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:m </span><br><span class="line">        </span><br><span class="line">                     d2(<span class="built_in">i</span>)=d2(<span class="built_in">i</span>)+(x(<span class="built_in">i</span>,<span class="built_in">j</span>)-dd(<span class="built_in">j</span>))^<span class="number">2</span>; </span><br><span class="line">    </span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">           d2(<span class="built_in">i</span>)=<span class="built_in">sqrt</span>(d2(<span class="built_in">i</span>));</span><br><span class="line"> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%计算接近程度 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">    </span><br><span class="line">            c(<span class="built_in">i</span>)=d1(<span class="built_in">i</span>)/(d2(<span class="built_in">i</span>)+d1(<span class="built_in">i</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">c</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="层次分析法">4.层次分析法</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">使用方法</span><br><span class="line">（<span class="number">1</span>）构造判断矩阵A</span><br><span class="line">（<span class="number">2</span>）将下文代码复制粘贴到Matlab中即可</span><br><span class="line">例如：A=[<span class="number">1</span> <span class="number">3</span> <span class="number">5</span>;<span class="number">0.33</span> <span class="number">1</span> <span class="number">3</span>;<span class="number">0.2</span> <span class="number">0.33</span>,<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">disp</span>(<span class="string">'请输入准则层判断矩阵A(n阶)'</span>);</span><br><span class="line">A=input(<span class="string">'A='</span>);</span><br><span class="line">[n,n]=<span class="built_in">size</span>(A);</span><br><span class="line">[V,D]=eig(A);<span class="comment">%求得特征向量和特征值</span></span><br><span class="line">            <span class="comment">%求出最大特征值和它所对应的特征向量</span></span><br><span class="line">tempNum=D(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">pos=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> h=<span class="number">1</span>:n</span><br><span class="line">    <span class="keyword">if</span> D(h,h)&gt;tempNum</span><br><span class="line">        tempNum=D(h,h);</span><br><span class="line">        pos=h;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span>    </span><br><span class="line">w=<span class="built_in">abs</span>(V(:,pos));</span><br><span class="line">w=w/sum(w);</span><br><span class="line">t=D(pos,pos);</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">'准则层特征向量w='</span>);<span class="built_in">disp</span>(w);<span class="built_in">disp</span>(<span class="string">'准则层最大特征根t='</span>);<span class="built_in">disp</span>(t);</span><br><span class="line">         <span class="comment">%以下是一致性检验</span></span><br><span class="line">CI=(t-n)/(n<span class="number">-1</span>);RI=[<span class="number">0</span> <span class="number">0</span> <span class="number">0.52</span> <span class="number">0.89</span> <span class="number">1.12</span> <span class="number">1.26</span> <span class="number">1.36</span> <span class="number">1.41</span> <span class="number">1.46</span> <span class="number">1.49</span> <span class="number">1.52</span> <span class="number">1.54</span> <span class="number">1.56</span> <span class="number">1.58</span> <span class="number">1.59</span> <span class="number">1.60</span> <span class="number">1.61</span> <span class="number">1.615</span> <span class="number">1.62</span> <span class="number">1.63</span>];</span><br><span class="line">CR=CI/RI(n);</span><br><span class="line"><span class="keyword">if</span> CR&lt;<span class="number">0.10</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">'此矩阵的一致性可以接受!'</span>);</span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">'CI='</span>);<span class="built_in">disp</span>(CI);</span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">'CR='</span>);<span class="built_in">disp</span>(CR);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">disp</span>(<span class="string">'此矩阵的一致性验证失败，请重新进行评分!'</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">disp</span>(<span class="string">'请输入方案层各因素对准则层各因素权重的成对比较阵'</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">'请输入第'</span>);<span class="built_in">disp</span>(<span class="built_in">i</span>);<span class="built_in">disp</span>(<span class="string">'个准则层因素的判断矩阵B'</span>);<span class="built_in">disp</span>(<span class="built_in">i</span>);</span><br></pre></td></tr></table></figure><h1 id="插值与拟合">5.插值与拟合</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">一维插值步骤</span><br><span class="line">（<span class="number">1</span>）输入已知数据，x,y</span><br><span class="line">（<span class="number">2</span>）输入待插自变量的值x1</span><br><span class="line">x=<span class="number">1</span>:<span class="number">12</span>;</span><br><span class="line">y=[<span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">15</span> <span class="number">25</span> <span class="number">29</span> <span class="number">31</span> <span class="number">30</span> <span class="number">22</span> <span class="number">25</span> <span class="number">27</span> <span class="number">24</span>];</span><br><span class="line">x1=<span class="number">1</span>:<span class="number">0.1</span>:<span class="number">12</span>;</span><br><span class="line">t=interp1(x,y,x1,<span class="string">'spline'</span>);<span class="comment">%</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">plot</span>(x1,t,<span class="string">'r:'</span>)   <span class="comment">%作图</span></span><br><span class="line"></span><br><span class="line">xlabel(<span class="string">'x'</span>),ylabel(<span class="string">'y'</span>)</span><br><span class="line"></span><br><span class="line">二维插值步骤</span><br><span class="line">（<span class="number">1</span>）先输入二维数据的x,y坐标值</span><br><span class="line">（<span class="number">2</span>）输入Z数据</span><br><span class="line">（<span class="number">3</span>）输入待插点的x,y坐标</span><br><span class="line">（<span class="number">4</span>）应用函数插值即可</span><br><span class="line">x=<span class="number">1</span>:<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">y=<span class="number">1</span>:<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">temps=[<span class="number">82</span> <span class="number">81</span> <span class="number">80</span> <span class="number">82</span> <span class="number">84</span>;<span class="number">79</span> <span class="number">63</span> <span class="number">61</span> <span class="number">65</span> <span class="number">81</span>;<span class="number">84</span> <span class="number">84</span> <span class="number">82</span> <span class="number">85</span> <span class="number">86</span>];</span><br><span class="line"></span><br><span class="line">mesh(x,y,temps);</span><br><span class="line">xi=<span class="number">1</span>:<span class="number">0.2</span>:<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">yi=<span class="number">1</span>:<span class="number">0.2</span>:<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">zi=interp2(x,y,temps,xi',yi,<span class="string">'cubic'</span>);</span><br><span class="line"></span><br><span class="line">mesh(xi,yi,zi);</span><br><span class="line"></span><br><span class="line">多项式拟合步骤</span><br><span class="line">(<span class="number">1</span>)输入待拟合数据x,y</span><br><span class="line">(<span class="number">2</span>)输入函数公式进行拟合</span><br><span class="line">x=<span class="number">0</span>:<span class="number">0.1</span>:<span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">y=[<span class="number">-0.447</span> <span class="number">1.978</span> <span class="number">3.28</span> <span class="number">6.16</span> <span class="number">7.08</span> <span class="number">7.34</span> <span class="number">7.66</span>   <span class="number">9.56</span> <span class="number">9.48</span> <span class="number">9.30</span> <span class="number">11.2</span>];</span><br><span class="line"> </span><br><span class="line">A=polyfit(x,y,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">指定函数拟合步骤</span><br><span class="line"> (<span class="number">1</span>)输入待拟合数据x,y</span><br><span class="line">（<span class="number">2</span>）指定函数关系式</span><br><span class="line">syms t;</span><br><span class="line">x=[<span class="number">0</span>;<span class="number">0.4</span>;<span class="number">1.2</span>;<span class="number">2</span>;<span class="number">2.8</span>;<span class="number">3.6</span>;<span class="number">4.4</span>;<span class="number">5.2</span>;<span class="number">6</span>;<span class="number">7.2</span>;<span class="number">8</span>;<span class="number">9.2</span>;<span class="number">10.4</span>;<span class="number">11.6</span>;<span class="number">12.4</span>;<span class="number">13.6</span>;<span class="number">14.4</span>;<span class="number">15</span>];</span><br><span class="line">y=[<span class="number">1</span>;<span class="number">0.85</span>;<span class="number">0.29</span>;<span class="number">-0.27</span>;<span class="number">-0.53</span>;<span class="number">-0.4</span>;<span class="number">-0.12</span>;<span class="number">0.17</span>;<span class="number">0.28</span>;<span class="number">0.15</span>;<span class="number">-0.03</span>;<span class="number">-0.15</span>;<span class="number">-0.071</span>;<span class="number">0.059</span>;<span class="number">0.09</span>;<span class="number">0.032</span>;<span class="number">-0.015</span>;<span class="number">-0.02</span>];<span class="comment">%指定函数形式为f(t)=acos(kt)e^(wt),进行拟合</span></span><br><span class="line">f=fittype(<span class="string">'a*cos(k*t)*exp(w*t)'</span>,<span class="string">'independent'</span>,<span class="string">'t'</span>,<span class="string">'coefficients'</span>,{<span class="string">'a'</span>,<span class="string">'k'</span>,<span class="string">'w'</span>});</span><br><span class="line">cfun=fit(x,y,f)     <span class="comment">%显示拟合函数</span></span><br><span class="line">xi=<span class="number">0</span>:<span class="number">.1</span>:<span class="number">20</span>;</span><br><span class="line">yi=cfun(xi);</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">'r*'</span>,xi,yi,<span class="string">'b-'</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="规划模型">6.规划模型</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">线性规划步骤</span><br><span class="line">（<span class="number">1</span>）定义决策变量</span><br><span class="line">（<span class="number">1</span>）构造目标函数</span><br><span class="line">（<span class="number">2</span>）寻找限制条件</span><br><span class="line">（<span class="number">4</span>）按照步骤带入Matlab函数</span><br><span class="line"></span><br><span class="line">c=-[<span class="number">5</span>,<span class="number">3</span>]';  </span><br><span class="line">   </span><br><span class="line">A=[<span class="number">2</span>,<span class="number">1</span>;<span class="number">1</span>,<span class="number">2</span>];  </span><br><span class="line">   </span><br><span class="line">b=[<span class="number">40</span>,<span class="number">50</span>]'; </span><br><span class="line">   </span><br><span class="line">L=[<span class="number">0</span>, <span class="number">0</span>];</span><br><span class="line">   </span><br><span class="line">[x,fmin]=linprog(c,A,b,[],[],L);</span><br><span class="line">   </span><br><span class="line">Pmax=-fmin</span><br><span class="line">   x1=x(<span class="number">1</span>),  x2=x(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">非线性规划代码</span><br><span class="line">H=[<span class="number">1</span> <span class="number">-1</span>; <span class="number">-1</span> <span class="number">2</span>]; </span><br><span class="line">      c=[<span class="number">-2</span> ;<span class="number">-6</span>];A=[<span class="number">1</span> <span class="number">1</span>; <span class="number">-1</span> <span class="number">2</span>];b=[<span class="number">2</span>;<span class="number">2</span>];</span><br><span class="line">      Aeq=[];beq=[]; VLB=[<span class="number">0</span>;<span class="number">0</span>];VUB=[];</span><br><span class="line">      [x,z]=quadprog(H,c,A,b,Aeq,beq,VLB,VUB)</span><br><span class="line"></span><br><span class="line">多目标规划代码</span><br><span class="line"></span><br><span class="line">f=[<span class="number">3</span>;<span class="number">-2</span>]; </span><br><span class="line">A=[<span class="number">2</span>,<span class="number">3</span>;<span class="number">2</span>,<span class="number">1</span>]; </span><br><span class="line">b=[<span class="number">18</span>;<span class="number">10</span>]; </span><br><span class="line">lb=[<span class="number">0</span>;<span class="number">0</span>];</span><br><span class="line">[x,fval]=linprog(f,A,b,[],[],lb)</span><br><span class="line"></span><br><span class="line">f=[<span class="number">-4</span>;<span class="number">-3</span>]; </span><br><span class="line">A=[<span class="number">2</span>,<span class="number">3</span>;<span class="number">2</span>,<span class="number">1</span>]; </span><br><span class="line">b=[<span class="number">18</span>;<span class="number">10</span>]; </span><br><span class="line">lb=[<span class="number">0</span>;<span class="number">0</span>];</span><br><span class="line">[x,fval]=linprog(f,A,b,[],[],lb)</span><br></pre></td></tr></table></figure><h1 id="灰色关联分析">7.灰色关联分析</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">x1=[<span class="number">1.14</span> <span class="number">1.49</span> <span class="number">1.69</span> <span class="number">2.12</span> <span class="number">2.43</span> <span class="number">4.32</span> <span class="number">5.92</span> <span class="number">6.07</span> <span class="number">7.85</span>;<span class="number">3.30</span> <span class="number">3.47</span> <span class="number">3.61</span> <span class="number">3.80</span> <span class="number">4.00</span> <span class="number">4.19</span> <span class="number">4.42</span> <span class="number">4.61</span> <span class="number">4.80</span>;<span class="number">6.00</span> <span class="number">6.00</span> <span class="number">6.00</span> <span class="number">7.50</span> <span class="number">7.50</span> <span class="number">7.50</span> <span class="number">9.00</span> <span class="number">9.00</span> <span class="number">9.00</span>;<span class="number">1.20</span> <span class="number">1.20</span> <span class="number">1.80</span> <span class="number">1.80</span> <span class="number">1.80</span> <span class="number">2.40</span> <span class="number">2.70</span> <span class="number">3.60</span> <span class="number">4.00</span>;<span class="number">4.87</span> <span class="number">5.89</span> <span class="number">6.76</span> <span class="number">7.97</span> <span class="number">8.84</span> <span class="number">10.05</span> <span class="number">11.31</span> <span class="number">12.25</span> <span class="number">11.64</span>]<span class="comment">%原始数据5行9列</span></span><br><span class="line">x=x1;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">5</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:<span class="number">9</span></span><br><span class="line">  x(<span class="built_in">i</span>,<span class="built_in">j</span>)=x(<span class="built_in">i</span>,<span class="built_in">j</span>)/x1(<span class="number">1</span>,<span class="built_in">j</span>)</span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">x1=x</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">5</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:<span class="number">9</span></span><br><span class="line">  x(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="built_in">abs</span>(x(<span class="built_in">i</span>,<span class="built_in">j</span>)-x1(<span class="built_in">i</span>,<span class="number">1</span>))</span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">max</span>=x(<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">min</span>=x(<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">5</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:<span class="number">9</span></span><br><span class="line"> <span class="keyword">if</span> x(<span class="built_in">i</span>,<span class="built_in">j</span>)&gt;=<span class="built_in">max</span></span><br><span class="line">     <span class="built_in">max</span>=x(<span class="built_in">i</span>,<span class="built_in">j</span>)</span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">5</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:<span class="number">9</span></span><br><span class="line"> <span class="keyword">if</span> x(<span class="built_in">i</span>,<span class="built_in">j</span>)&lt;=<span class="built_in">min</span></span><br><span class="line">     <span class="built_in">min</span>=x(<span class="built_in">i</span>,<span class="built_in">j</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">k=<span class="number">0.5</span> <span class="comment">%分辨系数取值</span></span><br><span class="line">l=(<span class="built_in">min</span>+k*<span class="built_in">max</span>)./(x+k*<span class="built_in">max</span>)<span class="comment">%求关联系数矩阵</span></span><br></pre></td></tr></table></figure><h1 id="灰色预测算法">8.灰色预测算法</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">灰色预测步骤</span><br><span class="line">（<span class="number">1</span>）输入前期的小样本数据</span><br><span class="line">（<span class="number">2</span>）输入预测个数</span><br><span class="line">（<span class="number">3</span>）运行</span><br><span class="line">y=input(<span class="string">'请输入数据'</span>);</span><br><span class="line">n=<span class="built_in">length</span>(y);</span><br><span class="line">yy=<span class="built_in">ones</span>(n,<span class="number">1</span>);</span><br><span class="line">yy(<span class="number">1</span>)=y(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:n</span><br><span class="line">    yy(<span class="built_in">i</span>)=yy(<span class="built_in">i</span><span class="number">-1</span>)+y(<span class="built_in">i</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">B=<span class="built_in">ones</span>(n<span class="number">-1</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:(n<span class="number">-1</span>)</span><br><span class="line">    B(<span class="built_in">i</span>,<span class="number">1</span>)=-(yy(<span class="built_in">i</span>)+yy(<span class="built_in">i</span>+<span class="number">1</span>))/<span class="number">2</span>;</span><br><span class="line">    B(<span class="built_in">i</span>,<span class="number">2</span>)=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">BT=B';</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:(n<span class="number">-1</span>)</span><br><span class="line">    YN(<span class="built_in">j</span>)=y(<span class="built_in">j</span>+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">YN=YN';</span><br><span class="line">A=inv(BT*B)*BT*YN;</span><br><span class="line">a=A(<span class="number">1</span>);</span><br><span class="line">u=A(<span class="number">2</span>);</span><br><span class="line">t=u/a;</span><br><span class="line">t_test=input(<span class="string">'输入需要预测的个数'</span>);</span><br><span class="line"><span class="built_in">i</span>=<span class="number">1</span>:t_test+n;</span><br><span class="line">yys(<span class="built_in">i</span>+<span class="number">1</span>)=(y(<span class="number">1</span>)-t).*<span class="built_in">exp</span>(-a.*<span class="built_in">i</span>)+t;</span><br><span class="line">yys(<span class="number">1</span>)=y(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=n+t_test:<span class="number">-1</span>:<span class="number">2</span></span><br><span class="line">    ys(<span class="built_in">j</span>)=yys(<span class="built_in">j</span>)-yys(<span class="built_in">j</span><span class="number">-1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">x=<span class="number">1</span>:n;</span><br><span class="line">xs=<span class="number">2</span>:n+t_test;</span><br><span class="line">yn=ys(<span class="number">2</span>:n+t_test);</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">'^r'</span>,xs,yn,<span class="string">'*-b'</span>);</span><br><span class="line">det=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:n</span><br><span class="line">    det=det+<span class="built_in">abs</span>(yn(<span class="built_in">i</span>)-y(<span class="built_in">i</span>));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">det=det/(n<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">'百分绝对误差为：'</span>,num2str(det),<span class="string">'%'</span>]);</span><br><span class="line">    <span class="built_in">disp</span>([<span class="string">'预测值为：'</span>,num2str(ys(n+<span class="number">1</span>:n+t_test))]);</span><br></pre></td></tr></table></figure><h1 id="聚类分析代码">9.聚类分析代码</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">聚类分析主要过程</span><br><span class="line">（<span class="number">1</span>）将数据展绘</span><br><span class="line"><span class="comment">% 随机生成3个中心以及标准差</span></span><br><span class="line">s = rng(<span class="number">5</span>,<span class="string">'v5normal'</span>);</span><br><span class="line">mu = <span class="built_in">round</span>((<span class="built_in">rand</span>(<span class="number">3</span>,<span class="number">2</span>)<span class="number">-0.5</span>)*<span class="number">19</span>)+<span class="number">1</span>;</span><br><span class="line">sigma = <span class="built_in">round</span>(<span class="built_in">rand</span>(<span class="number">3</span>,<span class="number">2</span>)*<span class="number">40</span>)/<span class="number">10</span>+<span class="number">1</span>;</span><br><span class="line">X = [mvnrnd(mu(<span class="number">1</span>,:),sigma(<span class="number">1</span>,:),<span class="number">200</span>);</span><br><span class="line">mvnrnd(mu(<span class="number">2</span>,:),sigma(<span class="number">2</span>,:),<span class="number">300</span>);</span><br><span class="line">mvnrnd(mu(<span class="number">3</span>,:),sigma(<span class="number">3</span>,:),<span class="number">400</span>)];</span><br><span class="line"><span class="comment">% 作图</span></span><br><span class="line">P1 = <span class="built_in">figure</span>;clf;</span><br><span class="line"><span class="built_in">scatter</span>(X(:,<span class="number">1</span>),X(:,<span class="number">2</span>),<span class="number">10</span>,<span class="string">'ro'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">（<span class="number">2</span>）利用不同的算法进行带入分析</span><br><span class="line"><span class="number">1</span> 高斯混合聚类代码</span><br><span class="line"><span class="comment">% 等高线</span></span><br><span class="line">options = statset(<span class="string">'Display'</span>,<span class="string">'off'</span>);</span><br><span class="line">gm = gmdistribution.fit(X,<span class="number">3</span>,<span class="string">'Options'</span>,options);</span><br><span class="line">P6 = <span class="built_in">figure</span>;clf</span><br><span class="line"><span class="built_in">scatter</span>(X(:,<span class="number">1</span>),X(:,<span class="number">2</span>),<span class="number">10</span>,<span class="string">'ro'</span>);</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line">ezcontour(@(x,y) pdf(gm,[x,y]),[<span class="number">-15</span> <span class="number">15</span>],[<span class="number">-15</span> <span class="number">10</span>]);</span><br><span class="line"><span class="built_in">hold</span> off</span><br><span class="line">P7 = <span class="built_in">figure</span>;clf</span><br><span class="line"><span class="built_in">scatter</span>(X(:,<span class="number">1</span>),X(:,<span class="number">2</span>),<span class="number">10</span>,<span class="string">'ro'</span>);</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line">ezsurf(@(x,y) pdf(gm,[x,y]),[<span class="number">-15</span> <span class="number">15</span>],[<span class="number">-15</span> <span class="number">10</span>]);</span><br><span class="line"><span class="built_in">hold</span> off</span><br><span class="line">view(<span class="number">33</span>,<span class="number">24</span>)</span><br><span class="line">cluster1 = (cidx3 == <span class="number">1</span>);</span><br><span class="line">cluster3 = (cidx3 == <span class="number">2</span>);</span><br><span class="line"><span class="comment">% 通过观察，K均值方法的第二类是gm的第三类</span></span><br><span class="line">cluster2 = (cidx3 == <span class="number">3</span>);</span><br><span class="line"><span class="comment">% 计算分类概率</span></span><br><span class="line">P = posterior(gm,X);</span><br><span class="line">P8 = <span class="built_in">figure</span>;clf</span><br><span class="line"><span class="built_in">plot3</span>(X(cluster1,<span class="number">1</span>),X(cluster1,<span class="number">2</span>),P(cluster1,<span class="number">1</span>),<span class="string">'r.'</span>)</span><br><span class="line">grid on;<span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot3</span>(X(cluster2,<span class="number">1</span>),X(cluster2,<span class="number">2</span>),P(cluster2,<span class="number">2</span>),<span class="string">'bo'</span>)</span><br><span class="line"><span class="built_in">plot3</span>(X(cluster3,<span class="number">1</span>),X(cluster3,<span class="number">2</span>),P(cluster3,<span class="number">3</span>),<span class="string">'g*'</span>)</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">'第 1 类'</span>,<span class="string">'第 2 类'</span>,<span class="string">'第 3 类'</span>,<span class="string">'Location'</span>,<span class="string">'NW'</span>)</span><br><span class="line">clrmap = jet(<span class="number">80</span>); colormap(clrmap(<span class="number">9</span>:<span class="number">72</span>,:))</span><br><span class="line">ylabel(colorbar,<span class="string">'Component 1 Posterior Probability'</span>)</span><br><span class="line">view(<span class="number">-45</span>,<span class="number">20</span>);</span><br><span class="line"><span class="comment">% 第三类点部分概率值较低，可能需要其他数据来进行分析。</span></span><br><span class="line"><span class="comment">% 概率图</span></span><br><span class="line">P9 = <span class="built_in">figure</span>;clf</span><br><span class="line">[~,order] = <span class="built_in">sort</span>(P(:,<span class="number">1</span>));</span><br><span class="line"><span class="built_in">plot</span>(<span class="number">1</span>:<span class="built_in">size</span>(X,<span class="number">1</span>),P(order,<span class="number">1</span>),<span class="string">'r-'</span>,<span class="number">1</span>:<span class="built_in">size</span>(X,<span class="number">1</span>),P(order,<span class="number">2</span>),<span class="string">'b-'</span>,<span class="number">1</span>:<span class="built_in">size</span>(X,<span class="number">1</span>),P(order,<span class="number">3</span>),<span class="string">'y-'</span>);</span><br><span class="line"><span class="built_in">legend</span>({<span class="string">'Cluster 1 Score'</span> <span class="string">'Cluster 2 Score'</span> <span class="string">'Cluster 3 Score'</span>},<span class="string">'location'</span>,<span class="string">'NW'</span>);</span><br><span class="line">ylabel(<span class="string">'Cluster Membership Score'</span>);</span><br><span class="line">xlabel(<span class="string">'Point Ranking'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2</span> K均值聚类算法</span><br><span class="line">[cidx3,cmeans3,sumd3,D3] = kmeans(X,<span class="number">3</span>,<span class="string">'dist'</span>,<span class="string">'sqEuclidean'</span>);</span><br><span class="line">P4 = <span class="built_in">figure</span>;clf;</span><br><span class="line">[silh3,h3] = silhouette(X,cidx3,<span class="string">'sqeuclidean'</span>);</span><br><span class="line">P5 = <span class="built_in">figure</span>;clf</span><br><span class="line">ptsymb = {<span class="string">'bo'</span>,<span class="string">'ro'</span>,<span class="string">'go'</span>,<span class="string">',mo'</span>,<span class="string">'c+'</span>};</span><br><span class="line">MarkFace = {[<span class="number">0</span> <span class="number">0</span> <span class="number">1</span>],[<span class="number">.8</span> <span class="number">0</span> <span class="number">0</span>],[<span class="number">0</span> <span class="number">.5</span> <span class="number">0</span>]};</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:<span class="number">3</span></span><br><span class="line">clust = <span class="built_in">find</span>(cidx3 == <span class="built_in">i</span>);</span><br><span class="line"><span class="built_in">plot</span>(X(clust,<span class="number">1</span>),X(clust,<span class="number">2</span>),ptsymb{<span class="built_in">i</span>},<span class="string">'MarkerSize'</span>,<span class="number">3</span>,<span class="string">'MarkerFace'</span>,MarkFace{<span class="built_in">i</span>},<span class="string">'MarkerEdgeColor'</span>,<span class="string">'black'</span>);</span><br><span class="line"><span class="built_in">plot</span>(cmeans3(<span class="built_in">i</span>,<span class="number">1</span>),cmeans3(<span class="built_in">i</span>,<span class="number">2</span>),ptsymb{<span class="built_in">i</span>},<span class="string">'MarkerSize'</span>,<span class="number">10</span>,<span class="string">'MarkerFace'</span>,MarkFace{<span class="built_in">i</span>});</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">hold</span> off</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">3</span> 分层聚类算法代码</span><br><span class="line">eucD = pdist(X,<span class="string">'euclidean'</span>);</span><br><span class="line">clustTreeEuc = linkage(eucD,<span class="string">'average'</span>);</span><br><span class="line">cophenet(clustTreeEuc,eucD);</span><br><span class="line">P3 = <span class="built_in">figure</span>;clf;</span><br><span class="line">[h,nodes] =? dendrogram(clustTreeEuc,<span class="number">20</span>);</span><br><span class="line">set(gca,<span class="string">'TickDir'</span>,<span class="string">'out'</span>,<span class="string">'TickLength'</span>,[<span class="number">.002</span> <span class="number">0</span>],<span class="string">'XTickLabel'</span>,[]);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="排队论算法">10.排队论算法</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">步骤：</span><br><span class="line">（<span class="number">1</span>）确定问题是否属于排队论领域</span><br><span class="line">（<span class="number">2</span>）确定修理工个数s</span><br><span class="line">（<span class="number">3</span>）确定机器源数m</span><br><span class="line">（<span class="number">4</span>）找到时间终止点T</span><br><span class="line">（<span class="number">5</span>）带入模型即可</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">out</span>=<span class="title">MMSmteam</span><span class="params">(s,m,mu1,mu2,T)</span></span></span><br><span class="line"><span class="comment">%M/M/S/m排队模型</span></span><br><span class="line"><span class="comment">%s——修理工个数</span></span><br><span class="line"><span class="comment">%m——机器源数</span></span><br><span class="line"><span class="comment">%T——时间终止点</span></span><br><span class="line"><span class="comment">%mu1——机器离开-到达时间服从指数分布</span></span><br><span class="line"><span class="comment">%mu2——修理时间服从指数分布</span></span><br><span class="line"><span class="comment">%事件表：</span></span><br><span class="line"><span class="comment">%  p_s——修理工空闲概率</span></span><br><span class="line"><span class="comment">%   arrive_time——机器到达事件</span></span><br><span class="line"><span class="comment">%   leave_time——机器离开事件</span></span><br><span class="line"><span class="comment">%mintime——事件表中的最近事件</span></span><br><span class="line"><span class="comment">%current_time——当前时间</span></span><br><span class="line"><span class="comment">%L——队长</span></span><br><span class="line"><span class="comment">%tt——时间序列</span></span><br><span class="line"><span class="comment">%LL——队长序列</span></span><br><span class="line"><span class="comment">%c——机器到达时间序列</span></span><br><span class="line"><span class="comment">%b——修理开始时间序列</span></span><br><span class="line"><span class="comment">%e——机器离开时间序列</span></span><br><span class="line"><span class="comment">%a_count——到达机器数</span></span><br><span class="line"><span class="comment">%b_count——修理机器数</span></span><br><span class="line"><span class="comment">%e_count——损失机器数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%初始化</span></span><br><span class="line"></span><br><span class="line">arrive_time=exprnd(mu1,<span class="number">1</span>,m);</span><br><span class="line">arrive_time=<span class="built_in">sort</span>(arrive_time);</span><br><span class="line">leave_time=[];</span><br><span class="line">current_time=<span class="number">0</span>;</span><br><span class="line">L=<span class="number">0</span>;</span><br><span class="line">LL=[L];</span><br><span class="line">tt=[current_time];</span><br><span class="line">c=[];</span><br><span class="line">b=[];</span><br><span class="line">e=[];</span><br><span class="line">a_count=<span class="number">0</span>;</span><br><span class="line"><span class="comment">%循环</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">min</span>([arrive_time,leave_time])&lt;T</span><br><span class="line">    current_time=<span class="built_in">min</span>([arrive_time,leave_time]);</span><br><span class="line">    tt=[tt,current_time];    <span class="comment">%记录时间序列</span></span><br><span class="line">    <span class="keyword">if</span> current_time==<span class="built_in">min</span>(arrive_time)      <span class="comment">%机器到达子过程</span></span><br><span class="line">        arrive_time(<span class="number">1</span>)=[];  <span class="comment">% 从事件表中抹去机器到达事件</span></span><br><span class="line">        a_count=a_count+<span class="number">1</span>; <span class="comment">%累加到达机器数</span></span><br><span class="line">        <span class="keyword">if</span>  L&lt;s            <span class="comment">%有空闲修理工</span></span><br><span class="line">            L=L+<span class="number">1</span>;        <span class="comment">%更新队长</span></span><br><span class="line">            c=[c,current_time];<span class="comment">%记录机器到达时间序列</span></span><br><span class="line">            b=[b,current_time];<span class="comment">%记录修理开始时间序列</span></span><br><span class="line">            leave_time=[leave_time,current_time+exprnd(mu2)];<span class="comment">%产生新的机器离开事件</span></span><br><span class="line">            leave_time=<span class="built_in">sort</span>(leave_time);<span class="comment">%离开事件表排序</span></span><br><span class="line">        <span class="keyword">else</span>             <span class="comment">%无空闲修理工</span></span><br><span class="line">            L=L+<span class="number">1</span>;        <span class="comment">%更新队长</span></span><br><span class="line">            c=[c,current_time];<span class="comment">%记录机器到达时间序列</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span>                   <span class="comment">%机器离开子过程</span></span><br><span class="line">            leave_time(<span class="number">1</span>)=[];<span class="comment">%从事件表中抹去机器离开事件</span></span><br><span class="line">            arrive_time=[arrive_time,current_time+exprnd(mu1)];</span><br><span class="line">            arrive_time=<span class="built_in">sort</span>(arrive_time);<span class="comment">%到达事件表排序</span></span><br><span class="line">            e=[e,current_time];<span class="comment">%记录机器离开时间序列</span></span><br><span class="line">            <span class="keyword">if</span> L&gt;s   <span class="comment">%有机器等待</span></span><br><span class="line">                L=L<span class="number">-1</span>;        <span class="comment">%更新队长</span></span><br><span class="line">                b=[b,current_time];<span class="comment">%记录修理开始时间序列</span></span><br><span class="line">                leave_time=[leave_time,current_time+exprnd(mu2)];<span class="comment">%产生新的机器离开事件</span></span><br><span class="line">                leave_time=<span class="built_in">sort</span>(leave_time);<span class="comment">%离开事件表排序</span></span><br><span class="line">            <span class="keyword">else</span>    <span class="comment">%无机器等待</span></span><br><span class="line">                L=L<span class="number">-1</span>;        <span class="comment">%更新队长</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    LL=[LL,L];   <span class="comment">%记录队长序列</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">Ws=sum(e-c(<span class="number">1</span>:<span class="built_in">length</span>(e)))/<span class="built_in">length</span>(e);</span><br><span class="line">Wq=sum(b-c(<span class="number">1</span>:<span class="built_in">length</span>(b)))/<span class="built_in">length</span>(b);</span><br><span class="line">Wb=sum(e-b(<span class="number">1</span>:<span class="built_in">length</span>(e)))/<span class="built_in">length</span>(e);</span><br><span class="line">Ls=sum(diff([tt,T]).*LL)/T;</span><br><span class="line">Lq=sum(diff([tt,T]).*<span class="built_in">max</span>(LL-s,<span class="number">0</span>))/T;</span><br><span class="line">p_s=<span class="number">1.0</span>/(<span class="built_in">factorial</span>(m)/<span class="built_in">factorial</span>(m).*(mu2/mu1)^<span class="number">0</span>+<span class="built_in">factorial</span>(m)/<span class="built_in">factorial</span>(m<span class="number">-1</span>).*(mu2/mu1)^<span class="number">1</span>+<span class="built_in">factorial</span>(m<span class="number">-2</span>)/<span class="built_in">factorial</span>(m<span class="number">-1</span>).*(mu2/mu1)^<span class="number">2</span>+<span class="built_in">factorial</span>(m)/<span class="built_in">factorial</span>(m<span class="number">-2</span>).*(mu2/mu1)^<span class="number">2</span>+<span class="built_in">factorial</span>(m)/<span class="built_in">factorial</span>(m<span class="number">-4</span>).*(mu2/mu1)^<span class="number">4</span>+<span class="built_in">factorial</span>(m)/<span class="built_in">factorial</span>(m<span class="number">-5</span>).*(mu2/mu1)^<span class="number">5</span>);</span><br><span class="line">fprintf(<span class="string">'修理工空闲概率:%d\n'</span>,p_s)<span class="comment">%修理工空闲概率</span></span><br><span class="line">fprintf(<span class="string">'到达机器数:%d\n'</span>,a_count)<span class="comment">%到达机器数</span></span><br><span class="line">fprintf(<span class="string">'平均逗留时间:%f\n'</span>,sum(e-c(<span class="number">1</span>:<span class="built_in">length</span>(e)))/<span class="built_in">length</span>(e))<span class="comment">%平均逗留时间</span></span><br><span class="line">fprintf(<span class="string">'平均等待时间:%f\n'</span>,sum(b-c(<span class="number">1</span>:<span class="built_in">length</span>(b)))/<span class="built_in">length</span>(b))<span class="comment">%平均等待时间</span></span><br><span class="line">fprintf(<span class="string">'平均修理时间:%f\n'</span>,sum(e-b(<span class="number">1</span>:<span class="built_in">length</span>(e)))/<span class="built_in">length</span>(e))<span class="comment">%平均修理时间</span></span><br><span class="line">fprintf(<span class="string">'平均队长:%f\n'</span>,sum(diff([tt,T]).*LL)/T)<span class="comment">%平均队长</span></span><br><span class="line">fprintf(<span class="string">'平均等待队长:%f\n'</span>,sum(diff([tt,T]).*<span class="built_in">max</span>(LL-s,<span class="number">0</span>))/T)<span class="comment">%平均等待队长</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">0</span>:m</span><br><span class="line">     p(<span class="built_in">i</span>+<span class="number">1</span>)=sum((LL==<span class="built_in">i</span>).*diff([tt,T]))/T;<span class="comment">%队长为i的概率</span></span><br><span class="line">     fprintf(<span class="string">'队长为%d的概率:%f\n'</span>,<span class="built_in">i</span>,p(<span class="built_in">i</span>+<span class="number">1</span>));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">'机器不能马上得到修理的概率:%f\n'</span>,<span class="number">1</span>-sum(p(<span class="number">1</span>:s)))<span class="comment">%机器不能马上得到修理的概率</span></span><br><span class="line">out=[Ws,Wq,Wb,Ls,Lq,p];</span><br></pre></td></tr></table></figure><h1 id="熵权topsis">11.熵权+TOPSIS</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%第一部分：求熵值</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[s,w]</span>=<span class="title">shang</span><span class="params">(x)</span></span></span><br><span class="line"> </span><br><span class="line">x=[ ];<span class="comment">%这里输入自己的评价矩阵</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">% 函数shang.m, 实现用熵值法求各指标(列）的权重及各数据行的得分</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% x为原始数据矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% s返回各行得分, w返回各列权重</span></span><br><span class="line"></span><br><span class="line">[n,m]=<span class="built_in">size</span>(x); <span class="comment">% n=23个国家, m=5个指标</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 数据的归一化处理</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Matlab2010b,2011a,b版本都有bug,需如下处理. 其它版本直接用[X,ps]=mapminmax(x',0,1);即可</span></span><br><span class="line"></span><br><span class="line">[X,ps]=mapminmax(x',<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line"> </span><br><span class="line">ps.ymin=<span class="number">0.002</span>; <span class="comment">% 归一化后的最小值</span></span><br><span class="line"></span><br><span class="line">ps.ymax=<span class="number">0.996</span>; <span class="comment">% 归一化后的最大值</span></span><br><span class="line"></span><br><span class="line">ps.yrange=ps.ymax-ps.ymin; <span class="comment">% 归一化后的极差,若不调整该值, 则逆运算会出错</span></span><br><span class="line"></span><br><span class="line">X=mapminmax(x',ps);</span><br><span class="line"> </span><br><span class="line"><span class="comment">% mapminmax('reverse',xx,ps); % 反归一化, 回到原数据</span></span><br><span class="line"></span><br><span class="line">X=X';  <span class="comment">% X为归一化后的数据</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">%% 计算第j个指标下，第i个记录占该指标的比重p(i,j)</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">     </span><br><span class="line">       <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:m</span><br><span class="line">         </span><br><span class="line">                  p(<span class="built_in">i</span>,<span class="built_in">j</span>)=X(<span class="built_in">i</span>,<span class="built_in">j</span>)/sum(X(:,<span class="built_in">j</span>));</span><br><span class="line">     </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">%计算第j个指标的熵值e(j)</span></span><br><span class="line"> </span><br><span class="line">k=<span class="number">1</span>/<span class="built_in">log</span>(n);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:m</span><br><span class="line">    </span><br><span class="line">                e(<span class="built_in">j</span>)=-k*sum(p(:,<span class="built_in">j</span>).*<span class="built_in">log</span>(p(:,<span class="built_in">j</span>)));</span><br><span class="line"> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line">d=<span class="built_in">ones</span>(<span class="number">1</span>,m)-e;  <span class="comment">% 计算信息熵冗余度</span></span><br><span class="line"></span><br><span class="line">w=d./sum(d);    <span class="comment">% 求权值w</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%第二部分：TOPSIS综合评价</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[ output_args ]</span> = <span class="title">TOPSIS</span><span class="params">(A,W)</span></span></span><br><span class="line"></span><br><span class="line">A=[];<span class="comment">%这里输入自己的评价矩阵</span></span><br><span class="line"></span><br><span class="line">W=[]<span class="comment">%这里输入上面求得的权重</span></span><br><span class="line"><span class="comment">%A为决策矩阵，W为权值矩阵,M为正指标所在的列，N为负指标所在的列</span></span><br><span class="line">  </span><br><span class="line">[ma,na]=<span class="built_in">size</span>(A);          <span class="comment">%ma为A矩阵的行数，na为A矩阵的列数</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:na</span><br><span class="line">     </span><br><span class="line">               B(:,<span class="built_in">i</span>)=A(:,<span class="built_in">i</span>)*W(<span class="built_in">i</span>);     <span class="comment">%按列循环得到[加权标准化矩阵]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">V1=<span class="built_in">zeros</span>(<span class="number">1</span>,na);            <span class="comment">%初始化正理想解和负理想解</span></span><br><span class="line"></span><br><span class="line">V2=<span class="built_in">zeros</span>(<span class="number">1</span>,na);</span><br><span class="line"></span><br><span class="line">BMAX=<span class="built_in">max</span>(B);               <span class="comment">%取加权标准化矩阵每列的最大值和最小值</span></span><br><span class="line"></span><br><span class="line">BMIN=<span class="built_in">min</span>(B);               <span class="comment">%</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:na</span><br><span class="line">     </span><br><span class="line">            <span class="comment">%if i&lt;=size(M,2)        %循环得到理想解和负理想解，注意判断，不然会超个数</span></span><br><span class="line">     </span><br><span class="line">            V1(<span class="built_in">i</span>)=BMAX(<span class="built_in">i</span>);</span><br><span class="line">     </span><br><span class="line">            V2(<span class="built_in">i</span>)=BMIN(<span class="built_in">i</span>);</span><br><span class="line">     </span><br><span class="line">            <span class="comment">%end</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">%if i&lt;=size(N,2)</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">%V1(N(i))=BMIN(N(i));</span></span><br><span class="line">     </span><br><span class="line">             <span class="comment">%V2(N(i))=BMAX(N(i));</span></span><br><span class="line">     </span><br><span class="line">              <span class="comment">%end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:ma                 <span class="comment">%按行循环求各方案的贴近度</span></span><br><span class="line">     </span><br><span class="line">                 C1=B(<span class="built_in">i</span>,:)-V1;</span><br><span class="line">     </span><br><span class="line">                 S1(<span class="built_in">i</span>)=norm(C1);        <span class="comment">%S1,S2分别为离正理想点和负理想点的距离，用二阶范数</span></span><br><span class="line">     </span><br><span class="line">                 C2=B(<span class="built_in">i</span>,:)-V2;</span><br><span class="line">     </span><br><span class="line">                 S2(<span class="built_in">i</span>)=norm(C2);</span><br><span class="line">     </span><br><span class="line">                 T(<span class="built_in">i</span>)=S2(<span class="built_in">i</span>)/(S1(<span class="built_in">i</span>)+S2(<span class="built_in">i</span>));     <span class="comment">%T为贴近度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">output_args=T</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="熵值法">12.熵值法</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%输入数据即可得到指标权重与样本分数</span></span><br><span class="line">clc;clear;</span><br><span class="line">x=[<span class="number">1.98774</span><span class="number">2.03366</span><span class="number">2.03307</span><span class="number">1.62067</span></span><br><span class="line"><span class="number">.01951</span><span class="number">-.23544</span><span class="number">-.25917</span><span class="number">.44951</span></span><br><span class="line"><span class="number">-.34633</span><span class="number">-.45250</span><span class="number">-.34711</span><span class="number">-1.00697</span></span><br><span class="line"><span class="number">-.57681</span><span class="number">-.43292</span><span class="number">-.45996</span><span class="number">.36593</span></span><br><span class="line"><span class="number">-.47803</span><span class="number">-.45250</span><span class="number">-.47960</span><span class="number">-.68111</span></span><br><span class="line"><span class="number">-.60608</span><span class="number">-.46029</span><span class="number">-.48722</span><span class="number">-.74804</span></span><br><span class="line">];<span class="comment">%输入数据，横轴为样本，纵轴为指标</span></span><br><span class="line"></span><br><span class="line">lamda=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>];<span class="comment">%---人为修权，1代表不修改计算后的指标权重</span></span><br><span class="line">[m,n]=<span class="built_in">size</span>(x);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">x(:,<span class="built_in">i</span>)=(x(:,<span class="built_in">i</span>)-<span class="built_in">min</span>(x(:,<span class="built_in">i</span>)))/(<span class="built_in">max</span>(x(:,<span class="built_in">i</span>))-<span class="built_in">min</span>(x(:,<span class="built_in">i</span>)))+<span class="number">1</span>;<span class="comment">%对原始数据进行非负数化、归一化处理，值介于1-2之间</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">p(<span class="built_in">i</span>,<span class="built_in">j</span>)=x(<span class="built_in">i</span>,<span class="built_in">j</span>)/sum(x(:,<span class="built_in">j</span>));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">k=<span class="number">1</span>/<span class="built_in">log</span>(m);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line"><span class="keyword">if</span> p(<span class="built_in">i</span>,<span class="built_in">j</span>)~=<span class="number">0</span></span><br><span class="line">e(<span class="built_in">i</span>,<span class="built_in">j</span>)=p(<span class="built_in">i</span>,<span class="built_in">j</span>)*<span class="built_in">log</span>(p(<span class="built_in">i</span>,<span class="built_in">j</span>));</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">e(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">E(<span class="built_in">j</span>)=-k*sum(e(:,<span class="built_in">j</span>));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">d=<span class="number">1</span>-E;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">w(<span class="built_in">j</span>)=d(<span class="built_in">j</span>)/sum(d);<span class="comment">%指标权重计算</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">w(<span class="built_in">j</span>)=w(<span class="built_in">j</span>)*lamda(<span class="built_in">j</span>)/sum(w.*lamda);<span class="comment">% 修改指标权重</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</span><br><span class="line">score(<span class="built_in">i</span>,<span class="number">1</span>)=sum(x(<span class="built_in">i</span>,:).*w);<span class="comment">%计算综合分数</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">disp</span>(<span class="string">'各指标权重为：'</span>)</span><br><span class="line"><span class="built_in">disp</span>(w)</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">'各综合分数为：'</span>)</span><br><span class="line"><span class="built_in">disp</span>(score)</span><br></pre></td></tr></table></figure><h1 id="神经网络算法">13.神经网络算法</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">神经网络编程步骤</span><br><span class="line">（<span class="number">1</span>）寻找对结果产生影响的各种指标，假设有m个</span><br><span class="line">（<span class="number">2</span>）寻找样本n个，构造矩阵m*n，其对应的标准输出是n*<span class="number">1</span></span><br><span class="line"> (<span class="number">3</span>)将上述m*n与n*<span class="number">1</span>分别带入网络中训练，类似于下列代码中的P与T</span><br><span class="line">（<span class="number">4</span>）输入新的数据进行仿真，类似于下列代码中的P2；</span><br><span class="line"></span><br><span class="line"><span class="comment">%traingd</span></span><br><span class="line">  </span><br><span class="line">clear;</span><br><span class="line">  </span><br><span class="line">clc;</span><br><span class="line">  </span><br><span class="line">P=[<span class="number">-1</span> <span class="number">-1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">4</span>;<span class="number">0</span> <span class="number">5</span> <span class="number">0</span> <span class="number">5</span> <span class="number">7</span>];</span><br><span class="line">  </span><br><span class="line">T=[<span class="number">-1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">-1</span>];</span><br><span class="line">  <span class="comment">%利用minmax函数求输入样本范围</span></span><br><span class="line">  </span><br><span class="line">net = newff(minmax(P),[<span class="number">7</span>,<span class="number">1</span>],{<span class="string">'tansig'</span>,<span class="string">'purelin'</span>},<span class="string">'trainlm'</span>);</span><br><span class="line">  </span><br><span class="line">net.trainParam.show=<span class="number">50</span>;<span class="comment">%</span></span><br><span class="line">  </span><br><span class="line">net.trainParam.lr=<span class="number">0.05</span>;</span><br><span class="line">  </span><br><span class="line">net.trainParam.epochs=<span class="number">1000</span>;</span><br><span class="line">  </span><br><span class="line">net.trainParam.goal=<span class="number">1e-5</span>;</span><br><span class="line"></span><br><span class="line">[net,tr]=train(net,P,T);</span><br><span class="line"></span><br><span class="line">net.iw{<span class="number">1</span>,<span class="number">1</span>}<span class="comment">%隐层权值</span></span><br><span class="line">net.b{<span class="number">1</span>}<span class="comment">%隐层阈值</span></span><br><span class="line"></span><br><span class="line">net.lw{<span class="number">2</span>,<span class="number">1</span>}<span class="comment">%输出层权值</span></span><br><span class="line">net.b{<span class="number">2</span>}<span class="comment">%输出层阈值</span></span><br><span class="line">P2=[<span class="number">-1</span>;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">y3=sim(net,P2);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="数据包络分析">14.数据包络分析</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%输入指标数据与输出指标数据</span></span><br><span class="line">X=[<span class="number">89.39</span> <span class="number">86.25</span> <span class="number">108.13</span> <span class="number">106.38</span> <span class="number">62.40</span> <span class="number">47.19</span>;<span class="number">64.3</span> <span class="number">99</span> <span class="number">99.6</span> <span class="number">96</span> <span class="number">96.2</span> <span class="number">79.9</span>];</span><br><span class="line"></span><br><span class="line">Y=[<span class="number">25.2</span> <span class="number">28.2</span> <span class="number">29.4</span> <span class="number">26.4</span> <span class="number">27.2</span> <span class="number">25.2</span>;<span class="number">223</span> <span class="number">287</span> <span class="number">317</span> <span class="number">291</span> <span class="number">295</span> <span class="number">222</span>];</span><br><span class="line"></span><br><span class="line">[m,s]=<span class="built_in">size</span>(X);</span><br><span class="line"></span><br><span class="line">[n,~]=<span class="built_in">size</span>(Y);</span><br><span class="line"></span><br><span class="line">b=<span class="built_in">ones</span>(s,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">A=[Y',-X'];</span><br><span class="line"></span><br><span class="line">result=<span class="built_in">zeros</span>(n,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:s</span><br><span class="line">    </span><br><span class="line">      f=[-Y(:,<span class="built_in">i</span>)',-X(:,<span class="built_in">i</span>)'];</span><br><span class="line">    </span><br><span class="line">      x=linprog(f,A,b,[],[],<span class="built_in">zeros</span>(m+n,<span class="number">1</span>));</span><br><span class="line">    </span><br><span class="line">      result(<span class="built_in">i</span>,<span class="number">1</span>)=(f(<span class="number">1</span>,<span class="number">1</span>:m)*x(<span class="number">1</span>:m,:))/(f(:,m+<span class="number">1</span>:<span class="keyword">end</span>)*x(m+<span class="number">1</span>:<span class="keyword">end</span>,:));</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">result</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="图论算法">15.图论算法</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line">Dijkstra算法步骤</span><br><span class="line">（<span class="number">1</span>）构造邻接矩阵</span><br><span class="line">（<span class="number">2</span>）定义起始点</span><br><span class="line">（<span class="number">3</span>）运行代码</span><br><span class="line">M=[  <span class="number">0</span>     <span class="number">5</span>     <span class="number">9</span>   Inf   Inf   Inf   Inf</span><br><span class="line">   Inf     <span class="number">0</span>   Inf   Inf    <span class="number">12</span>   Inf   Inf</span><br><span class="line">   Inf     <span class="number">3</span>     <span class="number">0</span>    <span class="number">15</span>   Inf    <span class="number">23</span>   Inf</span><br><span class="line">   Inf     <span class="number">6</span>   Inf     <span class="number">0</span>   Inf     <span class="number">8</span>     <span class="number">7</span></span><br><span class="line">   Inf    <span class="number">12</span>   Inf     <span class="number">5</span>     <span class="number">0</span>   Inf    <span class="number">14</span></span><br><span class="line">   Inf   Inf   Inf   Inf   Inf     <span class="number">0</span>    <span class="number">10</span></span><br><span class="line">   Inf   Inf   Inf   Inf   Inf   Inf     <span class="number">0</span>];</span><br><span class="line">first=<span class="number">2</span>;</span><br><span class="line">last=<span class="number">4</span>;</span><br><span class="line">[m,n]=<span class="built_in">size</span>(M);</span><br><span class="line">L=<span class="built_in">zeros</span>(<span class="number">1</span>,m);</span><br><span class="line">symbol=<span class="built_in">zeros</span>(<span class="number">1</span>,m);</span><br><span class="line">direction=<span class="built_in">zeros</span>(<span class="number">1</span>,m);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">i</span>~=first)</span><br><span class="line">        L(<span class="built_in">i</span>)=<span class="built_in">inf</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    direction(<span class="built_in">i</span>)=first;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">judge=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> judge</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</span><br><span class="line">    <span class="keyword">if</span>(symbol(<span class="built_in">i</span>)==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">min</span>=L(<span class="built_in">i</span>);</span><br><span class="line">        temporary=<span class="built_in">i</span>;</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</span><br><span class="line">    <span class="keyword">if</span>(symbol(<span class="built_in">i</span>)==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span>(L(<span class="built_in">i</span>)&lt;<span class="built_in">min</span>)</span><br><span class="line">            <span class="built_in">min</span>=L(<span class="built_in">i</span>);</span><br><span class="line">            temporary=<span class="built_in">i</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">k=temporary;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:m</span><br><span class="line">    <span class="keyword">if</span>(symbol(<span class="number">1</span>,<span class="built_in">j</span>)==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span>(M(k,<span class="built_in">j</span>)==<span class="built_in">inf</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">if</span>(L(k)+M(k,<span class="built_in">j</span>)&lt;L(<span class="built_in">j</span>))</span><br><span class="line">                L(<span class="built_in">j</span>)=L(k)+M(k,<span class="built_in">j</span>);</span><br><span class="line">                direction(<span class="built_in">j</span>)=k;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">symbol(k)=<span class="number">1</span>;</span><br><span class="line">num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</span><br><span class="line">    <span class="keyword">if</span>(symbol(<span class="built_in">i</span>)==<span class="number">1</span>)</span><br><span class="line">        num=num+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span>(num==m)</span><br><span class="line">    judge=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">p=last;</span><br><span class="line">arrow=<span class="built_in">zeros</span>(<span class="number">1</span>,m);</span><br><span class="line">arrow(<span class="number">1</span>)=last;</span><br><span class="line"><span class="built_in">i</span>=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span> p~=first</span><br><span class="line">    arrow(<span class="number">1</span>,<span class="built_in">i</span>)=direction(p);</span><br><span class="line">    <span class="built_in">i</span>=<span class="built_in">i</span>+<span class="number">1</span>;</span><br><span class="line">    p=direction(p);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">distance=L(last);</span><br><span class="line"></span><br><span class="line">floyd 算法代码</span><br><span class="line">d=[<span class="built_in">inf</span> <span class="number">6</span> <span class="number">0</span> <span class="number">4</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">   <span class="number">0</span> <span class="built_in">inf</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">   <span class="number">4</span> <span class="number">7</span> <span class="built_in">inf</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">0</span></span><br><span class="line">   <span class="number">0</span> <span class="number">0</span> <span class="number">4</span> <span class="built_in">inf</span> <span class="number">0</span> <span class="number">3</span> <span class="number">0</span></span><br><span class="line">   <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="built_in">inf</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">   <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">4</span> <span class="built_in">inf</span> <span class="number">5</span></span><br><span class="line">   <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">6</span> <span class="number">0</span> <span class="built_in">inf</span>];</span><br><span class="line">[m,n]=<span class="built_in">size</span>(d);</span><br><span class="line">first=<span class="number">1</span>;</span><br><span class="line">last=<span class="number">7</span>;</span><br><span class="line">direction=<span class="built_in">zeros</span>(m,m);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</span><br><span class="line">    direction(:,<span class="built_in">i</span>)=<span class="built_in">i</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:m</span><br><span class="line">        <span class="keyword">for</span> k=<span class="number">1</span>:m</span><br><span class="line">            small=<span class="built_in">min</span>(d(<span class="built_in">i</span>,k),d(k,<span class="built_in">j</span>));</span><br><span class="line">            <span class="keyword">if</span> d(<span class="built_in">i</span>,<span class="built_in">j</span>)&lt;small</span><br><span class="line">                d(<span class="built_in">i</span>,<span class="built_in">j</span>)=small;</span><br><span class="line">                direction(<span class="built_in">i</span>,<span class="built_in">j</span>)=direction(<span class="built_in">i</span>,k);</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">arrow=<span class="built_in">zeros</span>(<span class="number">1</span>,m);</span><br><span class="line">arrow(<span class="number">1</span>)=first;</span><br><span class="line"><span class="built_in">i</span>=<span class="number">2</span>;</span><br><span class="line">p=first;</span><br><span class="line"><span class="keyword">while</span> p~=last</span><br><span class="line">    p=direction(p,last);</span><br><span class="line">    arrow(<span class="built_in">i</span>)=p;</span><br><span class="line">    <span class="built_in">i</span>=<span class="built_in">i</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">生成树算法代码</span><br><span class="line">M=[ <span class="number">0</span> <span class="number">17</span> <span class="number">11</span> <span class="built_in">inf</span> <span class="built_in">inf</span> <span class="built_in">inf</span></span><br><span class="line">    <span class="number">17</span> <span class="number">0</span> <span class="number">13</span> <span class="number">12</span> <span class="number">28</span> <span class="number">15</span></span><br><span class="line">    <span class="number">11</span> <span class="number">13</span> <span class="number">0</span> <span class="built_in">inf</span> <span class="number">19</span> <span class="built_in">inf</span></span><br><span class="line">    <span class="built_in">inf</span> <span class="number">12</span> <span class="built_in">inf</span> <span class="number">0</span> <span class="built_in">inf</span> <span class="number">16</span></span><br><span class="line">    <span class="built_in">inf</span> <span class="number">28</span> <span class="number">19</span> <span class="built_in">inf</span> <span class="number">0</span> <span class="number">10</span></span><br><span class="line">    <span class="built_in">inf</span> <span class="number">15</span> <span class="built_in">inf</span> <span class="number">16</span> <span class="number">10</span> <span class="number">0</span>];</span><br><span class="line">[m,n]=<span class="built_in">size</span>(M);</span><br><span class="line">X=<span class="built_in">zeros</span>(m,n);</span><br><span class="line">Y=<span class="built_in">zeros</span>(m);</span><br><span class="line">Z=<span class="built_in">zeros</span>(m);</span><br><span class="line">Y(<span class="number">1</span>)=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:m</span><br><span class="line">    Z(<span class="built_in">i</span>)=<span class="built_in">i</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">judge=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> judge</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</span><br><span class="line">    <span class="keyword">if</span>(Y(<span class="built_in">i</span>)~=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:m</span><br><span class="line">            <span class="keyword">if</span>(Z(<span class="built_in">j</span>)~=<span class="number">0</span>)</span><br><span class="line">                <span class="built_in">min</span>=M(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">                a=<span class="built_in">i</span>;</span><br><span class="line">                b=<span class="built_in">j</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</span><br><span class="line">    <span class="keyword">if</span>(Y(<span class="built_in">i</span>)~=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:m</span><br><span class="line">            <span class="keyword">if</span>(Z(<span class="built_in">j</span>)~=<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">if</span>(M(<span class="built_in">i</span>,<span class="built_in">j</span>)&lt;<span class="built_in">min</span>)</span><br><span class="line">                    <span class="built_in">min</span>=M(<span class="built_in">i</span>,<span class="built_in">j</span>);</span><br><span class="line">                    a=<span class="built_in">i</span>;</span><br><span class="line">                    b=<span class="built_in">j</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">Y(b)=b;</span><br><span class="line">Z(b)=<span class="number">0</span>;</span><br><span class="line">X(a,b)=<span class="number">1</span>;</span><br><span class="line">X(b,a)=<span class="number">1</span>;</span><br><span class="line">c=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m</span><br><span class="line">    <span class="keyword">if</span>(Y(<span class="built_in">i</span>)~=<span class="number">0</span>)</span><br><span class="line">        c=c+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span>(c==m)</span><br><span class="line">    judge=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h1 id="智能算法之粒子群优化算法">16.智能算法之粒子群优化算法</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 初始化种群  </span></span><br><span class="line">f= @(x)x .* <span class="built_in">sin</span>(x) .* <span class="built_in">cos</span>(<span class="number">2</span> * x) - <span class="number">2</span> * x .* <span class="built_in">sin</span>(<span class="number">3</span> * x); <span class="comment">% 函数表达式    % 求这个函数的最大值  </span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);ezplot(f,[<span class="number">0</span>,<span class="number">0.01</span>,<span class="number">20</span>]);  </span><br><span class="line">N = <span class="number">50</span>;                         <span class="comment">% 初始种群个数  </span></span><br><span class="line">d = <span class="number">1</span>;                          <span class="comment">% 空间维数  </span></span><br><span class="line">ger = <span class="number">100</span>;                      <span class="comment">% 最大迭代次数       </span></span><br><span class="line">limit = [<span class="number">0</span>, <span class="number">20</span>];                <span class="comment">% 设置位置参数限制  </span></span><br><span class="line">vlimit = [<span class="number">-1</span>, <span class="number">1</span>];               <span class="comment">% 设置速度限制  </span></span><br><span class="line">w = <span class="number">0.8</span>;                        <span class="comment">% 惯性权重  </span></span><br><span class="line">c1 = <span class="number">0.5</span>;                       <span class="comment">% 自我学习因子  </span></span><br><span class="line">c2 = <span class="number">0.5</span>;                       <span class="comment">% 群体学习因子   </span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:d  </span><br><span class="line">    x = limit(<span class="built_in">i</span>, <span class="number">1</span>) + (limit(<span class="built_in">i</span>, <span class="number">2</span>) - limit(<span class="built_in">i</span>, <span class="number">1</span>)) * <span class="built_in">rand</span>(N, d);<span class="comment">%初始种群的位置  </span></span><br><span class="line"><span class="keyword">end</span>  </span><br><span class="line">v = <span class="built_in">rand</span>(N, d);                  <span class="comment">% 初始种群的速度  </span></span><br><span class="line">xm = x;                          <span class="comment">% 每个个体的历史最佳位置  </span></span><br><span class="line">ym = <span class="built_in">zeros</span>(<span class="number">1</span>, d);                <span class="comment">% 种群的历史最佳位置  </span></span><br><span class="line">fxm = <span class="built_in">zeros</span>(N, <span class="number">1</span>);               <span class="comment">% 每个个体的历史最佳适应度  </span></span><br><span class="line">fym = -<span class="built_in">inf</span>;                      <span class="comment">% 种群历史最佳适应度  </span></span><br><span class="line"><span class="built_in">hold</span> on  </span><br><span class="line"><span class="built_in">plot</span>(xm, f(xm), <span class="string">'ro'</span>);title(<span class="string">'初始状态图'</span>);  </span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>)  </span><br><span class="line"><span class="comment">%% 群体更新  </span></span><br><span class="line">iter = <span class="number">1</span>;  </span><br><span class="line">record = <span class="built_in">zeros</span>(ger, <span class="number">1</span>);          <span class="comment">% 记录器  </span></span><br><span class="line"><span class="keyword">while</span> iter &lt;= ger  </span><br><span class="line">     fx = f(x) ; <span class="comment">% 个体当前适应度     </span></span><br><span class="line">     <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:N        </span><br><span class="line">        <span class="keyword">if</span> fxm(<span class="built_in">i</span>) &lt; fx(<span class="built_in">i</span>)  </span><br><span class="line">            fxm(<span class="built_in">i</span>) = fx(<span class="built_in">i</span>);     <span class="comment">% 更新个体历史最佳适应度  </span></span><br><span class="line">            xm(<span class="built_in">i</span>,:) = x(<span class="built_in">i</span>,:);   <span class="comment">% 更新个体历史最佳位置  </span></span><br><span class="line">        <span class="keyword">end</span>   </span><br><span class="line">     <span class="keyword">end</span>  </span><br><span class="line"><span class="keyword">if</span> fym &lt; <span class="built_in">max</span>(fxm)  </span><br><span class="line">        [fym, nmax] = <span class="built_in">max</span>(fxm);   <span class="comment">% 更新群体历史最佳适应度  </span></span><br><span class="line">        ym = xm(nmax, :);      <span class="comment">% 更新群体历史最佳位置  </span></span><br><span class="line"> <span class="keyword">end</span>  </span><br><span class="line">    v = v * w + c1 * <span class="built_in">rand</span> * (xm - x) + c2 * <span class="built_in">rand</span> * (<span class="built_in">repmat</span>(ym, N, <span class="number">1</span>) - x);<span class="comment">% 速度更新  </span></span><br><span class="line">    <span class="comment">% 边界速度处理  </span></span><br><span class="line">    v(v &gt; vlimit(<span class="number">2</span>)) = vlimit(<span class="number">2</span>);  </span><br><span class="line">    v(v &lt; vlimit(<span class="number">1</span>)) = vlimit(<span class="number">1</span>);  </span><br><span class="line">    x = x + v;<span class="comment">% 位置更新  </span></span><br><span class="line">    <span class="comment">% 边界位置处理  </span></span><br><span class="line">    x(x &gt; limit(<span class="number">2</span>)) = limit(<span class="number">2</span>);  </span><br><span class="line">    x(x &lt; limit(<span class="number">1</span>)) = limit(<span class="number">1</span>);  </span><br><span class="line">    record(iter) = fym;<span class="comment">%最大值记录  </span></span><br><span class="line">     x0 = <span class="number">0</span> : <span class="number">0.01</span> : <span class="number">20</span>;  </span><br><span class="line">     <span class="built_in">plot</span>(x0, f(x0), <span class="string">'b-'</span>, x, f(x), <span class="string">'ro'</span>);title(<span class="string">'状态位置变化'</span>)  </span><br><span class="line">    pause(<span class="number">0.1</span>)  </span><br><span class="line">    iter = iter+<span class="number">1</span>;  </span><br><span class="line"><span class="keyword">end</span>  </span><br><span class="line"><span class="built_in">figure</span>(<span class="number">3</span>);<span class="built_in">plot</span>(record);title(<span class="string">'收敛过程'</span>)  </span><br><span class="line">x0 = <span class="number">0</span> : <span class="number">0.01</span> : <span class="number">20</span>;  </span><br><span class="line"><span class="built_in">figure</span>(<span class="number">4</span>);<span class="built_in">plot</span>(x0, f(x0), <span class="string">'b-'</span>, x, f(x), <span class="string">'ro'</span>);title(<span class="string">'最终状态位置'</span>)  </span><br><span class="line"><span class="built_in">disp</span>([<span class="string">'最大值：'</span>,num2str(fym)]);  </span><br><span class="line"><span class="built_in">disp</span>([<span class="string">'变量取值：'</span>,num2str(ym)]);  </span><br></pre></td></tr></table></figure><h1 id="智能算法之模拟退火算法">17.智能算法之模拟退火算法</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">%生成初始解，求目标函数f(x)=x1^2+x2^2+8在x1^2-x2&gt;0;-x1-x2^2+2=0约束下的最小值问题  </span></span><br><span class="line">sol_new2=<span class="number">1</span>;<span class="comment">%（1）解空间（初始解）  </span></span><br><span class="line">sol_new1=<span class="number">2</span>-sol_new2^<span class="number">2</span>;  </span><br><span class="line">sol_current1 = sol_new1;   </span><br><span class="line">sol_best1 = sol_new1;  </span><br><span class="line">sol_current2 = sol_new2;   </span><br><span class="line">sol_best2 = sol_new2;  </span><br><span class="line">E_current = <span class="built_in">inf</span>;  </span><br><span class="line">E_best = <span class="built_in">inf</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="built_in">rand</span>(<span class="string">'state'</span>,sum(clock)); <span class="comment">%初始化随机数发生器  </span></span><br><span class="line">t=<span class="number">90</span>; <span class="comment">%初始温度  </span></span><br><span class="line">tf=<span class="number">89.9</span>; <span class="comment">%结束温度  </span></span><br><span class="line">a = <span class="number">0.99</span>; <span class="comment">%温度下降比例  </span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">while</span> t&gt;=tf<span class="comment">%（7）结束条件  </span></span><br><span class="line">    <span class="keyword">for</span> r=<span class="number">1</span>:<span class="number">1000</span> <span class="comment">%退火次数  </span></span><br><span class="line">          </span><br><span class="line">        <span class="comment">%产生随机扰动（3）新解的产生  </span></span><br><span class="line">        sol_new2=sol_new2+<span class="built_in">rand</span>*<span class="number">0.2</span>;  </span><br><span class="line">        sol_new1=<span class="number">2</span>-sol_new2^<span class="number">2</span>;  </span><br><span class="line">          </span><br><span class="line">        <span class="comment">%检查是否满足约束  </span></span><br><span class="line">        <span class="keyword">if</span> sol_new1^<span class="number">2</span>-sol_new2&gt;=<span class="number">0</span> &amp;&amp; -sol_new1-sol_new2^<span class="number">2</span>+<span class="number">2</span>==<span class="number">0</span> &amp;&amp; sol_new1&gt;=<span class="number">0</span> &amp;&amp;sol_new2&gt;=<span class="number">0</span>  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">            sol_new2=<span class="built_in">rand</span>*<span class="number">2</span>;  </span><br><span class="line">            sol_new1=<span class="number">2</span>-sol_new2^<span class="number">2</span>;  </span><br><span class="line">            <span class="keyword">continue</span>;  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">          </span><br><span class="line">        <span class="comment">%退火过程  </span></span><br><span class="line">        E_new=sol_new1^<span class="number">2</span>+sol_new2^<span class="number">2</span>+<span class="number">8</span>;<span class="comment">%（2）目标函数  </span></span><br><span class="line">        <span class="keyword">if</span> E_new&lt;E_current<span class="comment">%（5）接受准则  </span></span><br><span class="line">                E_current=E_new;  </span><br><span class="line">                sol_current1=sol_new1;  </span><br><span class="line">                sol_current2=sol_new2;  </span><br><span class="line">                <span class="keyword">if</span> E_new&lt;E_best  </span><br><span class="line">                    <span class="comment">%把冷却过程中最好的解保存下来  </span></span><br><span class="line">                    E_best=E_new;  </span><br><span class="line">                    sol_best1=sol_new1;  </span><br><span class="line">                    sol_best2=sol_new2;  </span><br><span class="line">                <span class="keyword">end</span>  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">rand</span>&lt;<span class="built_in">exp</span>(-(E_new-E_current)/t)<span class="comment">%（4）代价函数差  </span></span><br><span class="line">                    E_current=E_new;  </span><br><span class="line">                    sol_current1=sol_new1;  </span><br><span class="line">                    sol_current2=sol_new2;  </span><br><span class="line">                <span class="keyword">else</span>  </span><br><span class="line">                    sol_new1=sol_current1;  </span><br><span class="line">                    sol_new2=sol_current2;  </span><br><span class="line">                <span class="keyword">end</span>  </span><br><span class="line">        <span class="keyword">end</span>  </span><br><span class="line">        <span class="built_in">plot</span>(r,E_best,<span class="string">'*'</span>)  </span><br><span class="line">        <span class="built_in">hold</span> on  </span><br><span class="line">    <span class="keyword">end</span>  </span><br><span class="line">    t=t*a;<span class="comment">%（6）降温  </span></span><br><span class="line"><span class="keyword">end</span>  </span><br><span class="line">  </span><br><span class="line"><span class="built_in">disp</span>(<span class="string">'最优解为：'</span>)  </span><br><span class="line"><span class="built_in">disp</span>(sol_best1)  </span><br><span class="line"><span class="built_in">disp</span>(sol_best2)  </span><br><span class="line"><span class="built_in">disp</span>(<span class="string">'目标表达式的最小值等于：'</span>)  </span><br><span class="line"><span class="built_in">disp</span>(E_best)  </span><br></pre></td></tr></table></figure><h1 id="智能算法之遗传算法">18.智能算法之遗传算法</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 求下列函数的最大值 %</span></span><br><span class="line"><span class="comment">% f(x)=10*sin(5x)+7*cos(4x) x∈[0,10] %</span></span><br><span class="line"><span class="comment">% 将 x 的值用一个10位的二值形式表示为二值问题，一个10位的二值数提供的分辨率是每为 (10-0)/(2^10-1)≈0.01 。 %</span></span><br><span class="line"><span class="comment">% 将变量域 [0,10] 离散化为二值域 [0,1023], x=0+10*b/1023, 其中 b 是 [0,1023] 中的一个二值数。 %</span></span><br><span class="line"><span class="comment">% %</span></span><br><span class="line"><span class="comment">%--------------------------------------------------------------------------------------------------------------%</span></span><br><span class="line"><span class="comment">%--------------------------------------------------------------------------------------------------------------%</span></span><br><span class="line"><span class="comment">% 编程</span></span><br><span class="line"><span class="comment">%-----------------------------------------------</span></span><br><span class="line"><span class="comment">% 2.8 主程序</span></span><br><span class="line"><span class="comment">%遗传算法主程序</span></span><br><span class="line"><span class="comment">%Name:genmain05.m</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">genmain</span><span class="params">()</span></span></span><br><span class="line">tic;</span><br><span class="line">clear</span><br><span class="line">clf</span><br><span class="line">popsize=<span class="number">20</span>; <span class="comment">%群体大小</span></span><br><span class="line">chromlength=<span class="number">10</span>; <span class="comment">%字符串长度（个体长度）</span></span><br><span class="line">pc=<span class="number">0.6</span>; <span class="comment">%交叉概率</span></span><br><span class="line">pm=<span class="number">0.001</span>; <span class="comment">%变异概率</span></span><br><span class="line"></span><br><span class="line">pop=initpop(popsize,chromlength); <span class="comment">%随机产生初始群体</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">20</span> <span class="comment">%20为迭代次数</span></span><br><span class="line">[objvalue]=calobjvalue(pop); <span class="comment">%计算目标函数</span></span><br><span class="line">fitvalue=calfitvalue(objvalue); <span class="comment">%计算群体中每个个体的适应度</span></span><br><span class="line">[newpop]=selection(pop,fitvalue); <span class="comment">%复制</span></span><br><span class="line">[newpop]=crossover(pop,pc); <span class="comment">%交叉</span></span><br><span class="line">[newpop]=mutation(pop,pc); <span class="comment">%变异</span></span><br><span class="line">[bestindividual,bestfit]=best(pop,fitvalue); <span class="comment">%求出群体中适应值最大的个体及其适应值</span></span><br><span class="line">y(<span class="built_in">i</span>)=<span class="built_in">max</span>(bestfit);</span><br><span class="line">n(<span class="built_in">i</span>)=<span class="built_in">i</span>;</span><br><span class="line">pop5=bestindividual;</span><br><span class="line">x(<span class="built_in">i</span>)=decodechrom(pop5,<span class="number">1</span>,chromlength)*<span class="number">10</span>/<span class="number">1023</span>;</span><br><span class="line">pop=newpop;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">fplot(<span class="string">'10*sin(5*x)+7*cos(4*x)'</span>,[<span class="number">0</span> <span class="number">10</span>])</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">'r*'</span>)</span><br><span class="line"><span class="built_in">hold</span> off</span><br><span class="line"></span><br><span class="line">[z index]=<span class="built_in">max</span>(y); <span class="comment">%计算最大值及其位置</span></span><br><span class="line">x5=x(index)<span class="comment">%计算最大值对应的x值</span></span><br><span class="line">y=z</span><br><span class="line">toc</span><br><span class="line"></span><br><span class="line"><span class="comment">% 2.1初始化(编码)</span></span><br><span class="line"><span class="comment">% initpop.m函数的功能是实现群体的初始化，popsize表示群体的大小，chromlength表示染色体的长度(二值数的长度)，</span></span><br><span class="line"><span class="comment">% 长度大小取决于变量的二进制编码的长度(在本例中取10位)。</span></span><br><span class="line"><span class="comment">%遗传算法子程序</span></span><br><span class="line"><span class="comment">%Name: initpop.m</span></span><br><span class="line"><span class="comment">%初始化</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pop</span>=<span class="title">initpop</span><span class="params">(popsize,chromlength)</span> </span></span><br><span class="line">pop=<span class="built_in">round</span>(<span class="built_in">rand</span>(popsize,chromlength)) <span class="comment">% rand随机产生每个单元为 {0,1} 行数为popsize，列数为chromlength的矩阵，</span></span><br><span class="line"><span class="comment">% roud对矩阵的每个单元进行圆整。这样产生的初始种群。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 2.2 计算目标函数值</span></span><br><span class="line"><span class="comment">% 2.2.1 将二进制数转化为十进制数(1)</span></span><br><span class="line"><span class="comment">%遗传算法子程序</span></span><br><span class="line"><span class="comment">%Name: decodebinary.m</span></span><br><span class="line"><span class="comment">%产生 [2^n 2^(n-1) ... 1] 的行向量，然后求和，将二进制转化为十进制</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pop2</span>=<span class="title">decodebinary</span><span class="params">(pop)</span></span></span><br><span class="line">[px,py]=<span class="built_in">size</span>(pop); <span class="comment">%求pop行和列数</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:py</span><br><span class="line">pop1(:,<span class="built_in">i</span>)=<span class="number">2.</span>^(py-<span class="built_in">i</span>).*pop(:,<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">pop2=sum(pop1,<span class="number">2</span>); <span class="comment">%求pop1的每行之和</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 2.2.2 将二进制编码转化为十进制数(2)</span></span><br><span class="line"><span class="comment">% decodechrom.m函数的功能是将染色体(或二进制编码)转换为十进制，参数spoint表示待解码的二进制串的起始位置</span></span><br><span class="line"><span class="comment">% (对于多个变量而言，如有两个变量，采用20为表示，每个变量10为，则第一个变量从1开始，另一个变量从11开始。本例为1)，</span></span><br><span class="line"><span class="comment">% 参数1ength表示所截取的长度（本例为10）。</span></span><br><span class="line"><span class="comment">%遗传算法子程序</span></span><br><span class="line"><span class="comment">%Name: decodechrom.m</span></span><br><span class="line"><span class="comment">%将二进制编码转换成十进制</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pop2</span>=<span class="title">decodechrom</span><span class="params">(pop,spoint,length)</span></span></span><br><span class="line">pop1=pop(:,spoint:spoint+<span class="built_in">length</span><span class="number">-1</span>);</span><br><span class="line">pop2=decodebinary(pop1);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 2.2.3 计算目标函数值</span></span><br><span class="line"><span class="comment">% calobjvalue.m函数的功能是实现目标函数的计算，其公式采用本文示例仿真，可根据不同优化问题予以修改。</span></span><br><span class="line"><span class="comment">%遗传算法子程序</span></span><br><span class="line"><span class="comment">%Name: calobjvalue.m</span></span><br><span class="line"><span class="comment">%实现目标函数的计算</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[objvalue]</span>=<span class="title">calobjvalue</span><span class="params">(pop)</span></span></span><br><span class="line">temp1=decodechrom(pop,<span class="number">1</span>,<span class="number">10</span>); <span class="comment">%将pop每行转化成十进制数</span></span><br><span class="line">x=temp1*<span class="number">10</span>/<span class="number">1023</span>; <span class="comment">%将二值域 中的数转化为变量域 的数</span></span><br><span class="line">objvalue=<span class="number">10</span>*<span class="built_in">sin</span>(<span class="number">5</span>*x)+<span class="number">7</span>*<span class="built_in">cos</span>(<span class="number">4</span>*x); <span class="comment">%计算目标函数值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 2.3 计算个体的适应值</span></span><br><span class="line"><span class="comment">%遗传算法子程序</span></span><br><span class="line"><span class="comment">%Name:calfitvalue.m</span></span><br><span class="line"><span class="comment">%计算个体的适应值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fitvalue</span>=<span class="title">calfitvalue</span><span class="params">(objvalue)</span></span></span><br><span class="line"><span class="keyword">global</span> Cmin;</span><br><span class="line">Cmin=<span class="number">0</span>;</span><br><span class="line">[px,py]=<span class="built_in">size</span>(objvalue);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:px</span><br><span class="line"><span class="keyword">if</span> objvalue(<span class="built_in">i</span>)+Cmin&gt;<span class="number">0</span></span><br><span class="line">temp=Cmin+objvalue(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">temp=<span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fitvalue(<span class="built_in">i</span>)=temp;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fitvalue=fitvalue';</span><br><span class="line"></span><br><span class="line"><span class="comment">% 2.4 选择复制</span></span><br><span class="line"><span class="comment">% 选择或复制操作是决定哪些个体可以进入下一代。程序中采用赌轮盘选择法选择，这种方法较易实现。</span></span><br><span class="line"><span class="comment">% 根据方程 pi=fi/∑fi=fi/fsum ，选择步骤：</span></span><br><span class="line"><span class="comment">% 1） 在第 t 代，由（1）式计算 fsum 和 pi </span></span><br><span class="line"><span class="comment">% 2） 产生 {0,1} 的随机数 rand( .)，求 s=rand( .)*fsum</span></span><br><span class="line"><span class="comment">% 3） 求 ∑fi≥s 中最小的 k ，则第 k 个个体被选中</span></span><br><span class="line"><span class="comment">% 4） 进行 N 次2）、3）操作，得到 N 个个体，成为第 t=t+1 代种群</span></span><br><span class="line"><span class="comment">%遗传算法子程序</span></span><br><span class="line"><span class="comment">%Name: selection.m</span></span><br><span class="line"><span class="comment">%选择复制</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[newpop]</span>=<span class="title">selection</span><span class="params">(pop,fitvalue)</span></span></span><br><span class="line">totalfit=sum(fitvalue); <span class="comment">%求适应值之和</span></span><br><span class="line">fitvalue=fitvalue/totalfit; <span class="comment">%单个个体被选择的概率</span></span><br><span class="line">fitvalue=cumsum(fitvalue); <span class="comment">%如 fitvalue=[1 2 3 4]，则 cumsum(fitvalue)=[1 3 6 10] </span></span><br><span class="line">[px,py]=<span class="built_in">size</span>(pop);</span><br><span class="line">ms=<span class="built_in">sort</span>(<span class="built_in">rand</span>(px,<span class="number">1</span>)); <span class="comment">%从小到大排列</span></span><br><span class="line">fitin=<span class="number">1</span>;</span><br><span class="line">newin=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> newin&lt;=px</span><br><span class="line"><span class="keyword">if</span>(ms(newin))&lt;fitvalue(fitin)</span><br><span class="line">newpop(newin)=pop(fitin);</span><br><span class="line">newin=newin+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">fitin=fitin+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 2.5 交叉</span></span><br><span class="line"><span class="comment">% 交叉(crossover)，群体中的每个个体之间都以一定的概率 pc 交叉，即两个个体从各自字符串的某一位置</span></span><br><span class="line"><span class="comment">% （一般是随机确定）开始互相交换，这类似生物进化过程中的基因分裂与重组。例如，假设2个父代个体x1，x2为：</span></span><br><span class="line"><span class="comment">% x1=0100110</span></span><br><span class="line"><span class="comment">% x2=1010001</span></span><br><span class="line"><span class="comment">% 从每个个体的第3位开始交叉，交又后得到2个新的子代个体y1，y2分别为：</span></span><br><span class="line"><span class="comment">% y1＝0100001</span></span><br><span class="line"><span class="comment">% y2＝1010110</span></span><br><span class="line"><span class="comment">% 这样2个子代个体就分别具有了2个父代个体的某些特征。利用交又我们有可能由父代个体在子代组合成具有更高适合度的个体。</span></span><br><span class="line"><span class="comment">% 事实上交又是遗传算法区别于其它传统优化方法的主要特点之一。</span></span><br><span class="line"><span class="comment">%遗传算法子程序</span></span><br><span class="line"><span class="comment">%Name: crossover.m</span></span><br><span class="line"><span class="comment">%交叉</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[newpop]</span>=<span class="title">crossover</span><span class="params">(pop,pc)</span></span></span><br><span class="line">[px,py]=<span class="built_in">size</span>(pop);</span><br><span class="line">newpop=<span class="built_in">ones</span>(<span class="built_in">size</span>(pop));</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">2</span>:px<span class="number">-1</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">rand</span>&lt;pc)</span><br><span class="line">cpoint=<span class="built_in">round</span>(<span class="built_in">rand</span>*py);</span><br><span class="line">newpop(<span class="built_in">i</span>,:)=[pop(<span class="built_in">i</span>,<span class="number">1</span>:cpoint),pop(<span class="built_in">i</span>+<span class="number">1</span>,cpoint+<span class="number">1</span>:py)];</span><br><span class="line">newpop(<span class="built_in">i</span>+<span class="number">1</span>,:)=[pop(<span class="built_in">i</span>+<span class="number">1</span>,<span class="number">1</span>:cpoint),pop(<span class="built_in">i</span>,cpoint+<span class="number">1</span>:py)];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">newpop(<span class="built_in">i</span>,:)=pop(<span class="built_in">i</span>);</span><br><span class="line">newpop(<span class="built_in">i</span>+<span class="number">1</span>,:)=pop(<span class="built_in">i</span>+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 2.6 变异</span></span><br><span class="line"><span class="comment">% 变异(mutation)，基因的突变普遍存在于生物的进化过程中。变异是指父代中的每个个体的每一位都以概率 pm 翻转，即由“1”变为“0”，</span></span><br><span class="line"><span class="comment">% 或由“0”变为“1”。遗传算法的变异特性可以使求解过程随机地搜索到解可能存在的整个空间，因此可以在一定程度上求得全局最优解。</span></span><br><span class="line"><span class="comment">%遗传算法子程序</span></span><br><span class="line"><span class="comment">%Name: mutation.m</span></span><br><span class="line"><span class="comment">%变异</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[newpop]</span>=<span class="title">mutation</span><span class="params">(pop,pm)</span></span></span><br><span class="line">[px,py]=<span class="built_in">size</span>(pop);</span><br><span class="line">newpop=<span class="built_in">ones</span>(<span class="built_in">size</span>(pop));</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:px</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">rand</span>&lt;pm)</span><br><span class="line">mpoint=<span class="built_in">round</span>(<span class="built_in">rand</span>*py);</span><br><span class="line"><span class="keyword">if</span> mpoint&lt;=<span class="number">0</span></span><br><span class="line">mpoint=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">newpop(<span class="built_in">i</span>)=pop(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">if</span> any(newpop(<span class="built_in">i</span>,mpoint))==<span class="number">0</span></span><br><span class="line">newpop(<span class="built_in">i</span>,mpoint)=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">newpop(<span class="built_in">i</span>,mpoint)=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">newpop(<span class="built_in">i</span>)=pop(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 2.7 求出群体中最大得适应值及其个体</span></span><br><span class="line"><span class="comment">%遗传算法子程序</span></span><br><span class="line"><span class="comment">%Name: best.m</span></span><br><span class="line"><span class="comment">%求出群体中适应值最大的值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[bestindividual,bestfit]</span>=<span class="title">best</span><span class="params">(pop,fitvalue)</span></span></span><br><span class="line">[px,py]=<span class="built_in">size</span>(pop);</span><br><span class="line">bestindividual=pop(<span class="number">1</span>,:);</span><br><span class="line">bestfit=fitvalue(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:px</span><br><span class="line"><span class="keyword">if</span> fitvalue(<span class="built_in">i</span>)&gt;bestfit</span><br><span class="line">bestindividual=pop(<span class="built_in">i</span>,:);</span><br><span class="line">bestfit=fitvalue(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://canoepassed.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/">数学建模相关性分析</category>
      
      
      <category domain="http://canoepassed.top/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/">数学建模</category>
      
      
      <comments>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/matlab%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E7%A8%8B%E5%BA%8F%E5%8C%85/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>matlab离散数据分析</title>
      <link>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/matlab%E7%A6%BB%E6%95%A3%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</link>
      <guid>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/matlab%E7%A6%BB%E6%95%A3%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</guid>
      <pubDate>Sat, 18 May 2024 04:59:07 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight matlab&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%FFT变换,获得采样数据基本信息，时域图，频域图</span></span><br><span class="line"><span class="comment">%这里的向量都用行向量，假设被测变量是速度，单位为m/s</span></span><br><span class="line">clear;</span><br><span class="line">close all;</span><br><span class="line"></span><br><span class="line">load data.txt                                  <span class="comment">%通过仪器测量的原始数据，存储为data.txt中，附件中有一个模版(该信号极不规则)</span></span><br><span class="line">A=data;                                        <span class="comment">%将测量数据赋给A，此时A为N×2的数组</span></span><br><span class="line">x=A(:,<span class="number">1</span>);                                     <span class="comment">%将A中的第一列赋值给x，形成时间序列</span></span><br><span class="line">x=x';                                           <span class="comment">%将列向量变成行向量</span></span><br><span class="line">y=A(:,<span class="number">2</span>);                                     <span class="comment">%将A中的第二列赋值给y，形成被测量序列</span></span><br><span class="line">y=y';                                           <span class="comment">%将列向量变成行向量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%显示数据基本信息</span></span><br><span class="line">fprintf(<span class="string">'\n数据基本信息：\n'</span>) </span><br><span class="line">fprintf(<span class="string">'        采样点数 = %7.0f \n'</span>,<span class="built_in">length</span>(x))                         <span class="comment">%输出采样数据个数</span></span><br><span class="line">fprintf(<span class="string">'        采样时间 = %7.3f s\n'</span>,<span class="built_in">max</span>(x)-<span class="built_in">min</span>(x))                    <span class="comment">%输出采样耗时</span></span><br><span class="line">fprintf(<span class="string">'        采样频率 = %7.1f Hz\n'</span>,<span class="built_in">length</span>(x)/(<span class="built_in">max</span>(x)-<span class="built_in">min</span>(x)))   <span class="comment">%输出采样频率</span></span><br><span class="line">fprintf(<span class="string">'        最小速度 = %7.3f m/s\n'</span>,<span class="built_in">min</span>(y))                         <span class="comment">%输出本次采样被测量最小值</span></span><br><span class="line">fprintf(<span class="string">'        平均速度 = %7.3f m/s\n'</span>,<span class="built_in">mean</span>(y))                      <span class="comment">%输出本次采样被测量平均值</span></span><br><span class="line">fprintf(<span class="string">'        速度中值 = %7.3f m/s\n'</span>,median(y))                   <span class="comment">%输出本次采样被测量中值</span></span><br><span class="line">fprintf(<span class="string">'        最大速度 = %7.3f m/s\n'</span>,<span class="built_in">max</span>(y))                          <span class="comment">%输出本次采样被测量最大值</span></span><br><span class="line">fprintf(<span class="string">'        标准方差 = %7.3f \n'</span>,std(y))                               <span class="comment">%输出本次采样数据标准差</span></span><br><span class="line">fprintf(<span class="string">'       协 方 差 = %7.3f \n'</span>,cov(y))                                <span class="comment">%输出本次采样数据协方差</span></span><br><span class="line">fprintf(<span class="string">'     自相关系数 = %7.3f \n\n'</span>,corrcoef(y))                       <span class="comment">%输出本次采样数据自相关系数</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">%显示原始数据曲线图（时域）</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,y)                                                                                <span class="comment">%显示原始数据曲线图</span></span><br><span class="line">axis([<span class="built_in">min</span>(x) <span class="built_in">max</span>(x) <span class="number">1.1</span>*<span class="built_in">floor</span>(<span class="built_in">min</span>(y)) <span class="number">1.1</span>*<span class="built_in">ceil</span>(<span class="built_in">max</span>(y))])             <span class="comment">%优化坐标，可有可无</span></span><br><span class="line">xlabel(<span class="string">'时间 (s)'</span>);</span><br><span class="line">ylabel(<span class="string">'被测变量y'</span>);</span><br><span class="line">title(<span class="string">'原始信号(时域)'</span>);</span><br><span class="line">grid on;</span><br><span class="line"></span><br><span class="line"><span class="comment">%傅立叶变换</span></span><br><span class="line">y=y-<span class="built_in">mean</span>(y);                                               <span class="comment">%消去直流分量，使频谱更能体现有效信息</span></span><br><span class="line">Fs=<span class="number">2000</span>;                                                     <span class="comment">%得到原始数据data.txt时，仪器的采样频率。其实就是length(x)/(max(x)-min(x));</span></span><br><span class="line">N=<span class="number">10000</span>;                                                 <span class="comment">%data.txt中的被测量个数，即采样个数。其实就是length(y);</span></span><br><span class="line">z=fft(y);</span><br><span class="line"></span><br><span class="line"><span class="comment">%频谱分析</span></span><br><span class="line">f=(<span class="number">0</span>:N<span class="number">-1</span>)*Fs/N;</span><br><span class="line">Mag=<span class="number">2</span>*<span class="built_in">abs</span>(z)/N;                                        <span class="comment">%幅值，单位同被测变量y</span></span><br><span class="line">Pyy=Mag.^<span class="number">2</span>;                                              <span class="comment">%能量；对实数系列X，有 X.*X=X.*conj(X)=abs(X).^2=X.^2，故这里有很多表达方式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%显示频谱图(频域)</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">plot</span>(f(<span class="number">1</span>:N/<span class="number">2</span>),Pyy(<span class="number">1</span>:N/<span class="number">2</span>),<span class="string">'r'</span>)                         <span class="comment">%显示频谱图</span></span><br><span class="line"><span class="comment">%                 |</span></span><br><span class="line"><span class="comment">%             将这里的Pyy改成Mag就是 幅值-频率图了</span></span><br><span class="line">axis([<span class="built_in">min</span>(f(<span class="number">1</span>:N/<span class="number">2</span>)) <span class="built_in">max</span>(f(<span class="number">1</span>:N/<span class="number">2</span>)) <span class="number">1.1</span>*<span class="built_in">floor</span>(<span class="built_in">min</span>(Pyy(<span class="number">1</span>:N/<span class="number">2</span>))) <span class="number">1.1</span>*<span class="built_in">ceil</span>(<span class="built_in">max</span>(Pyy(<span class="number">1</span>:N/<span class="number">2</span>)))]) </span><br><span class="line">xlabel(<span class="string">'频率 (Hz)'</span>)</span><br><span class="line">ylabel(<span class="string">'能量'</span>)</span><br><span class="line">title(<span class="string">'频谱图(频域)'</span>)</span><br><span class="line">grid on;</span><br><span class="line"></span><br><span class="line"><span class="comment">%返回最大能量对应的频率和周期值</span></span><br><span class="line">[a b]=<span class="built_in">max</span>(Pyy(<span class="number">1</span>:N/<span class="number">2</span>));</span><br><span class="line">fprintf(<span class="string">'\n傅立叶变换结果：\n'</span>) </span><br><span class="line">fprintf(<span class="string">'           FFT_f = %1.3f Hz\n'</span>,f(b))             <span class="comment">%输出最大值对应的频率</span></span><br><span class="line">fprintf(<span class="string">'           FFT_T = %1.3f s\n'</span>,<span class="number">1</span>/f(b))          <span class="comment">%输出最大值对应的周期</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://canoepassed.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/">数学建模相关性分析</category>
      
      
      <category domain="http://canoepassed.top/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/">数学建模</category>
      
      
      <comments>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/matlab%E7%A6%BB%E6%95%A3%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>灰色关联分析</title>
      <link>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/%E7%81%B0%E8%89%B2%E5%85%B3%E8%81%94%E5%88%86%E6%9E%90/</link>
      <guid>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/%E7%81%B0%E8%89%B2%E5%85%B3%E8%81%94%E5%88%86%E6%9E%90/</guid>
      <pubDate>Sat, 18 May 2024 04:54:08 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;gray.m&quot;&gt;gray.m&lt;/h2&gt;
&lt;figure class=&quot;highlight matlab&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="gray.m">gray.m</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">clc;</span><br><span class="line">close;</span><br><span class="line">clear all;</span><br><span class="line">x=xlsread(<span class="string">'C:\\Users\\Administrator\\Desktop\\data.xlsx'</span>);</span><br><span class="line">x=x(:,<span class="number">2</span>:<span class="keyword">end</span>)';</span><br><span class="line">column_num=<span class="built_in">size</span>(x,<span class="number">2</span>);</span><br><span class="line">index_num=<span class="built_in">size</span>(x,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 1、数据均值化处理</span></span><br><span class="line">x_mean=<span class="built_in">mean</span>(x,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:index_num</span><br><span class="line">    x(<span class="built_in">i</span>,:) = x(<span class="built_in">i</span>,:)/x_mean(<span class="built_in">i</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">% 2、提取参考队列和比较队列</span></span><br><span class="line">ck=x(<span class="number">1</span>,:)</span><br><span class="line">cp=x(<span class="number">2</span>:<span class="keyword">end</span>,:)</span><br><span class="line">cp_index_num=<span class="built_in">size</span>(cp,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%比较队列与参考队列相减</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:cp_index_num</span><br><span class="line">    t(<span class="built_in">j</span>,:)=cp(<span class="built_in">j</span>,:)-ck;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%求最大差和最小差</span></span><br><span class="line">mmax=<span class="built_in">max</span>(<span class="built_in">max</span>(<span class="built_in">abs</span>(t)))</span><br><span class="line">mmin=<span class="built_in">min</span>(<span class="built_in">min</span>(<span class="built_in">abs</span>(t)))</span><br><span class="line">rho=<span class="number">0.5</span>;</span><br><span class="line"><span class="comment">%3、求关联系数</span></span><br><span class="line">ksi=((mmin+rho*mmax)./(<span class="built_in">abs</span>(t)+rho*mmax))</span><br><span class="line"></span><br><span class="line"><span class="comment">%4、求关联度</span></span><br><span class="line">ksi_column_num=<span class="built_in">size</span>(ksi,<span class="number">2</span>);</span><br><span class="line">r=sum(ksi,<span class="number">2</span>)/ksi_column_num;</span><br><span class="line"></span><br><span class="line"><span class="comment">%5、关联度排序，得到结果r3&gt;r2&gt;r1</span></span><br><span class="line">[rs,rind]=<span class="built_in">sort</span>(r,<span class="string">'descend'</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://canoepassed.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/">数学建模相关性分析</category>
      
      
      <category domain="http://canoepassed.top/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/">数学建模</category>
      
      
      <comments>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/%E7%81%B0%E8%89%B2%E5%85%B3%E8%81%94%E5%88%86%E6%9E%90/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>典型相关分析</title>
      <link>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/%E5%85%B8%E5%9E%8B%E7%9B%B8%E5%85%B3%E5%88%86%E6%9E%90/</link>
      <guid>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/%E5%85%B8%E5%9E%8B%E7%9B%B8%E5%85%B3%E5%88%86%E6%9E%90/</guid>
      <pubDate>Sat, 18 May 2024 04:49:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;cancorr.m&quot;&gt;cancorr.m&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="cancorr.m">cancorr.m</h2><span id="more"></span><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[CV1,CV2,rho,v1,v2,s11,s22,s12]</span> = <span class="title">cancorr</span><span class="params">(fname1,fname2, ...</span></span></span><br><span class="line"><span class="params"><span class="function">    nrows,ncols,nvar1,nvar2,varargin)</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">% [CV1,CV2,rho,v1,v2,s11,s22,s12] = cancorr(fname1,fname2, ...</span></span><br><span class="line"><span class="comment">%   nrows,ncols,nvar1,nvar2,varargin)</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% CANCORR - canonical correlation analysis</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% Input</span></span><br><span class="line"><span class="comment">% fname1  - file name of multivariate band sequential byte, float32 or int16 input image</span></span><br><span class="line"><span class="comment">%           number one</span></span><br><span class="line"><span class="comment">% fname2  - file name of multivariate band sequential byte, float32 or int16 input image</span></span><br><span class="line"><span class="comment">%           number two</span></span><br><span class="line"><span class="comment">% nrows   - number of rows in input image number one</span></span><br><span class="line"><span class="comment">% ncols   - number of columns in input image number one</span></span><br><span class="line"><span class="comment">% nvars1  - number of variables or bands or channels in input image number one</span></span><br><span class="line"><span class="comment">% nvars2  - number of variables or bands or channels in input image number two</span></span><br><span class="line"><span class="comment">% fnameo1 - outout file name for CV1, BSQ float32 image  (optio-</span></span><br><span class="line"><span class="comment">% fnameo2 - outout file name for CV2, BSQ float32 image   nal)</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% If fnameo1 occurs so must fnameo2.</span></span><br><span class="line"><span class="comment">% </span></span><br><span class="line"><span class="comment">% Output</span></span><br><span class="line"><span class="comment">% the canonical variates (CV1 and CV2),</span></span><br><span class="line"><span class="comment">% the canonical correlations (rho),</span></span><br><span class="line"><span class="comment">% the eigenvectors (v1 and v2) normed to give CVs unit variance, and</span></span><br><span class="line"><span class="comment">% the relevant (variance-)covariance matrices.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% Output arrays CV1 and CV2 consist of transposed images must be viewed with e.g.</span></span><br><span class="line"><span class="comment">%       imshow(reshape(CV1(:,:,1),ncols,nrows)',[-3 3])</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% If disk output is requested a primitive .hdr file for the output file is written;</span></span><br><span class="line"><span class="comment">% (a  full ENVI or another header file must be constructed manually).</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% (c) Copyright 2005</span></span><br><span class="line"><span class="comment">% Allan Aasbjerg Nielsen</span></span><br><span class="line"><span class="comment">% aa@imm.dtu.dk, www.imm.dtu.dk/~aa</span></span><br><span class="line"><span class="comment">% 15 Feb 2005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> nargin&lt;<span class="number">6</span>, error(<span class="string">'Not enough input arguments.'</span>); <span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> nargin&gt;<span class="number">8</span>, error(<span class="string">'Too many input arguments.'</span>); <span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> ~ischar(fname1), error(<span class="string">'fname1 should be a char string'</span>); <span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> ~ischar(fname2), error(<span class="string">'fname2 should be a char string'</span>); <span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> nargin==<span class="number">8</span></span><br><span class="line">    fnameo1 = varargin{<span class="number">1</span>};</span><br><span class="line">    <span class="keyword">if</span> ~ischar(fnameo1), error(<span class="string">'fnameo1 should be a char string'</span>); <span class="keyword">end</span></span><br><span class="line">    fnameo2 = varargin{<span class="number">2</span>};</span><br><span class="line">    <span class="keyword">if</span> ~ischar(fnameo2), error(<span class="string">'fnameo2 should be a char string'</span>); <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> nvar2&gt;nvar1</span><br><span class="line">    error(<span class="string">'input with highest number of variables must be first set'</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% open as byte (uint8) image, if unsuccesful open as float32 or int16</span></span><br><span class="line">fid1 = fopen(fname1,<span class="string">'r'</span>);</span><br><span class="line"><span class="keyword">if</span> fid1==<span class="number">-1</span>, error(strcat(fname1,<span class="string">' not found'</span>)); <span class="keyword">end</span></span><br><span class="line">[x,count1] = fread(fid1,<span class="string">'uint8'</span>);</span><br><span class="line">fclose(fid1);</span><br><span class="line"><span class="keyword">if</span> count1~=(nrows*ncols*nvar1)</span><br><span class="line">    warning(<span class="string">'data in fname1 do not match nrows, ncols, nvars for uint8, try float32'</span>);</span><br><span class="line">    fid1 = fopen(fname1,<span class="string">'r'</span>);</span><br><span class="line">    <span class="keyword">if</span> fid1==<span class="number">-1</span>, error(strcat(fname1,<span class="string">' not found'</span>)); <span class="keyword">end</span></span><br><span class="line">    [x,count1] = fread(fid1,<span class="string">'float32'</span>);</span><br><span class="line">    fclose(fid1);</span><br><span class="line">    <span class="keyword">if</span> count1~=(nrows*ncols*nvar1)</span><br><span class="line">        warning(<span class="string">'data in fname1 do not match nrows, ncols, nvars for float32, try int16'</span>);</span><br><span class="line">        fid1 = fopen(fname1,<span class="string">'r'</span>);</span><br><span class="line">        <span class="keyword">if</span> fid1==<span class="number">-1</span>, error(strcat(fname1,<span class="string">' not found'</span>)); <span class="keyword">end</span></span><br><span class="line">        [x,count1] = fread(fid1,<span class="string">'int16'</span>);</span><br><span class="line">        fclose(fid1);</span><br><span class="line">        <span class="keyword">if</span> count1~=(nrows*ncols*nvar1)</span><br><span class="line">            error(<span class="string">'data in fname1 do not match nrows, ncols, nvars for int16 either'</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">fid2 = fopen(fname2,<span class="string">'r'</span>);</span><br><span class="line"><span class="keyword">if</span> fid2==<span class="number">-1</span>, error(strcat(fname2,<span class="string">' not found'</span>)); <span class="keyword">end</span></span><br><span class="line">[y,count2] = fread(fid2,<span class="string">'uint8'</span>);</span><br><span class="line">fclose(fid2);</span><br><span class="line"><span class="keyword">if</span> count2~=(nrows*ncols*nvar2)</span><br><span class="line">    warning(<span class="string">'data in fname2 do not match nrows, ncols, nvars for uint8, try float32'</span>);</span><br><span class="line">    fid2 = fopen(fname2,<span class="string">'r'</span>);</span><br><span class="line">    <span class="keyword">if</span> fid2==<span class="number">-1</span>, error(strcat(fname2,<span class="string">' not found'</span>)); <span class="keyword">end</span></span><br><span class="line">    [y,count2] = fread(fid2,<span class="string">'float32'</span>);</span><br><span class="line">    fclose(fid2);</span><br><span class="line">    <span class="keyword">if</span> count2~=(nrows*ncols*nvar2)</span><br><span class="line">        warning(<span class="string">'data in fname2 do not match nrows, ncols, nvars for float32, try int16'</span>);</span><br><span class="line">        fid2 = fopen(fname2,<span class="string">'r'</span>);</span><br><span class="line">        <span class="keyword">if</span> fid2==<span class="number">-1</span>, error(strcat(fname2,<span class="string">' not found'</span>)); <span class="keyword">end</span></span><br><span class="line">        [y,count2] = fread(fid2,<span class="string">'int16'</span>);</span><br><span class="line">        fclose(fid2);</span><br><span class="line">        <span class="keyword">if</span> count2~=(nrows*ncols*nvar2)</span><br><span class="line">            error(<span class="string">'data in fname2 do not match nrows, ncols, nvars for int16 either'</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (count1/nvar1)~=(count2/nvar2)</span><br><span class="line">    error(<span class="string">'data in fname1 and fname2 do not match'</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">N = nrows*ncols;</span><br><span class="line">X = <span class="built_in">reshape</span>(x,N,nvar1);</span><br><span class="line">Y = <span class="built_in">reshape</span>(y,N,nvar2);</span><br><span class="line"></span><br><span class="line">covxy = cov([X Y]);</span><br><span class="line">s11 = covxy(<span class="number">1</span>:nvar1,<span class="number">1</span>:nvar1);</span><br><span class="line">s22 = covxy(nvar1+<span class="number">1</span>:<span class="keyword">end</span>,nvar1+<span class="number">1</span>:<span class="keyword">end</span>);</span><br><span class="line">s12 = covxy(<span class="number">1</span>:nvar1,nvar1+<span class="number">1</span>:<span class="keyword">end</span>);</span><br><span class="line">s21 = s12';</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> nvar2==nvar1 <span class="comment">% solve smallest eigenproblem</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%[v1,d1] = eigen2(s12*(s22^(-1))*s21,s11);</span></span><br><span class="line">invs22 = inv(s22);</span><br><span class="line">[v1,d1] = eigen2(s12*invs22*s21,s11);</span><br><span class="line">rho = <span class="built_in">fliplr</span>(<span class="built_in">diag</span>(<span class="built_in">sqrt</span>(d1))'); <span class="comment">% highest canonical correlation first</span></span><br><span class="line">v1 = <span class="built_in">fliplr</span>(v1);</span><br><span class="line"></span><br><span class="line"><span class="comment">% scale v1 to give CVs with unit variance</span></span><br><span class="line">aux1 = v1'*s11*v1; <span class="comment">% dispersion of CVs</span></span><br><span class="line">aux2 = <span class="number">1.</span>/<span class="built_in">sqrt</span>(<span class="built_in">diag</span>(aux1));</span><br><span class="line">aux3 = <span class="built_in">repmat</span>(aux2',nvar1,<span class="number">1</span>);</span><br><span class="line">v1 = v1.*aux3; <span class="comment">% now dispersion is unit matrix</span></span><br><span class="line"><span class="comment">%v1'*s11*v1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% sum of correlations between X and CV(X) positive</span></span><br><span class="line">invstderr = <span class="built_in">diag</span>(<span class="number">1.</span>/std(X));</span><br><span class="line"><span class="comment">%invstderrcv = diag(1./sqrt(diag(v1'*s11*v1)));</span></span><br><span class="line"><span class="comment">%sgn = diag(sign(sum(invstderr*s11*v1*invstderrcv)));</span></span><br><span class="line">sgn = <span class="built_in">diag</span>(<span class="built_in">sign</span>(sum(invstderr*s11*v1)));</span><br><span class="line">v1 = v1*sgn;</span><br><span class="line"><span class="comment">%figure; plot(sum(invstderr*s11*v1),'o')</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%%[v2,d2] = eigen2(s21*(s11^(-1))*s12,s22);</span></span><br><span class="line"><span class="comment">%[v2,d2] = eigen2(s21*inv(s11)*s12,s22);</span></span><br><span class="line"><span class="comment">%v2 = fliplr(v2);</span></span><br><span class="line"><span class="comment">%v2 = v2*diag(sign(diag(v2'*s12*v2)));</span></span><br><span class="line">v2 = invs22*s21*v1; <span class="comment">%./repmat(rho,nvar1,1); % scaling doesn't matter</span></span><br><span class="line"><span class="comment">%if nvar2&lt;nvar1</span></span><br><span class="line"><span class="comment">%    v2 = v2(:,1:nvar2);</span></span><br><span class="line"><span class="comment">%    rho(:,end-(nvar1-nvar2)+1:end) = 0;</span></span><br><span class="line"><span class="comment">%end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% scale v2 to give CVs with unit variance</span></span><br><span class="line">aux1 = v2'*s22*v2; <span class="comment">% dispersion of CVs</span></span><br><span class="line">aux2 = <span class="number">1.</span>/<span class="built_in">sqrt</span>(<span class="built_in">diag</span>(aux1));</span><br><span class="line">aux3 = <span class="built_in">repmat</span>(aux2',nvar2,<span class="number">1</span>);</span><br><span class="line">v2 = v2.*aux3; <span class="comment">% now dispersion is unit matrix</span></span><br><span class="line"><span class="comment">%v2'*s22*v2</span></span><br><span class="line"><span class="comment">%invstderr = diag(1./std(Y)); figure; plot(sum(invstderr*s22*v2),'o')</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> <span class="comment">% nvar1&gt;nvar2: solve big, joint eigenproblem</span></span><br><span class="line">    </span><br><span class="line">Sleft  = [<span class="built_in">zeros</span>(nvar1,nvar1) s12; s21 <span class="built_in">zeros</span>(nvar2,nvar2)];</span><br><span class="line">Sright = [s11 <span class="built_in">zeros</span>(nvar1,nvar2); <span class="built_in">zeros</span>(nvar2,nvar1) s22];</span><br><span class="line">[v,d] = eigen2(Sleft,Sright);</span><br><span class="line">v = <span class="built_in">fliplr</span>(v);</span><br><span class="line">v1 = v(<span class="number">1</span>:nvar1,<span class="number">1</span>:nvar1);</span><br><span class="line">v2 = v(nvar1+<span class="number">1</span>:<span class="keyword">end</span>,<span class="number">1</span>:nvar2);   </span><br><span class="line">rho = <span class="built_in">fliplr</span>(<span class="built_in">diag</span>(d)'); <span class="comment">% highest canonical correlation first</span></span><br><span class="line">rho(:,nvar2+<span class="number">1</span>:<span class="keyword">end</span>) = <span class="number">0</span>;</span><br><span class="line">rho = rho(:,<span class="number">1</span>:nvar1);</span><br><span class="line">    </span><br><span class="line"><span class="comment">% scale v1 to give CVs with unit variance</span></span><br><span class="line">aux1 = v1'*s11*v1; <span class="comment">% dispersion of CVs</span></span><br><span class="line">aux2 = <span class="number">1.</span>/<span class="built_in">sqrt</span>(<span class="built_in">diag</span>(aux1));</span><br><span class="line">aux3 = <span class="built_in">repmat</span>(aux2',nvar1,<span class="number">1</span>);</span><br><span class="line">v1 = v1.*aux3; <span class="comment">% now dispersion is unit matrix</span></span><br><span class="line"><span class="comment">%v1'*s11*v1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% sum of correlations between X and CV(X) positive</span></span><br><span class="line">invstderr = <span class="built_in">diag</span>(<span class="number">1.</span>/std(X));</span><br><span class="line"><span class="comment">%invstderrcv = diag(1./sqrt(diag(v1'*s11*v1)));</span></span><br><span class="line"><span class="comment">%sgn = diag(sign(sum(invstderr*s11*v1*invstderrcv)));</span></span><br><span class="line">sgn = <span class="built_in">diag</span>(<span class="built_in">sign</span>(sum(invstderr*s11*v1)));</span><br><span class="line">v1 = v1*sgn;</span><br><span class="line"><span class="comment">%figure; plot(sum(invstderr*s11*v1),'o')</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% scale v2 to give CVs with unit variance</span></span><br><span class="line">aux1 = v2'*s22*v2; <span class="comment">% dispersion of CVs</span></span><br><span class="line">aux2 = <span class="number">1.</span>/<span class="built_in">sqrt</span>(<span class="built_in">diag</span>(aux1));</span><br><span class="line">aux3 = <span class="built_in">repmat</span>(aux2',nvar2,<span class="number">1</span>);</span><br><span class="line">v2 = v2.*aux3; <span class="comment">% now dispersion is unit matrix</span></span><br><span class="line"><span class="comment">%v2'*s22*v2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% correlations between CV(X) and CV(Y) positive</span></span><br><span class="line">sgn = <span class="built_in">diag</span>(<span class="built_in">sign</span>(<span class="built_in">diag</span>(v1'*s12*v2)'));</span><br><span class="line">v2 = v2*sgn;</span><br><span class="line"><span class="comment">%invstderr = diag(1./std(Y)); figure; plot(sum(invstderr*s22*v2),'o')</span></span><br><span class="line"><span class="comment">%v1'*s12*v2</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">CV1 = (X-<span class="built_in">repmat</span>(<span class="built_in">mean</span>(X),N,<span class="number">1</span>))*v1;</span><br><span class="line">CV2 = (Y-<span class="built_in">repmat</span>(<span class="built_in">mean</span>(Y),N,<span class="number">1</span>))*v2;</span><br><span class="line"><span class="comment">%CV1 = CV1./repmat(std(CV1),N,1); % unit variance</span></span><br><span class="line"><span class="comment">%CV2 = CV2./repmat(std(CV2),N,1); % unit variance</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%cov([CV1 CV2])</span></span><br><span class="line"><span class="comment">%MAD = fliplr(CV1-CV2);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% output arrays CV1 and CV2 consist of transposed images</span></span><br><span class="line">CV1 = <span class="built_in">reshape</span>(CV1,ncols,nrows,nvar1);</span><br><span class="line">CV2 = <span class="built_in">reshape</span>(CV2,ncols,nrows,nvar2);</span><br><span class="line"><span class="keyword">if</span> nargin&gt;<span class="number">6</span></span><br><span class="line">    fid = fopen(fnameo1,<span class="string">'w'</span>);</span><br><span class="line">    fwrite(fid,CV1,<span class="string">'float32'</span>);</span><br><span class="line">    fclose(fid);</span><br><span class="line">    fid = fopen(fnameo2,<span class="string">'w'</span>);</span><br><span class="line">    fwrite(fid,CV2,<span class="string">'float32'</span>);</span><br><span class="line">    fclose(fid);</span><br><span class="line">    fid = fopen(strcat(fnameo1,<span class="string">'.hdr'</span>),<span class="string">'w'</span>); <span class="comment">% write primitive header file</span></span><br><span class="line">    fprintf(fid,<span class="string">'samples = %d\n'</span>,ncols);</span><br><span class="line">    fprintf(fid,<span class="string">'lines   = %d\n'</span>,nrows);</span><br><span class="line">    fprintf(fid,<span class="string">'bands   = %d\n'</span>,nvar1);</span><br><span class="line">    fprintf(fid,<span class="string">'data type = 4\n'</span>);</span><br><span class="line">    fclose(fid);</span><br><span class="line">    fid = fopen(strcat(fnameo2,<span class="string">'.hdr'</span>),<span class="string">'w'</span>); <span class="comment">% write primitive header file</span></span><br><span class="line">    fprintf(fid,<span class="string">'samples = %d\n'</span>,ncols);</span><br><span class="line">    fprintf(fid,<span class="string">'lines   = %d\n'</span>,nrows);</span><br><span class="line">    fprintf(fid,<span class="string">'bands   = %d\n'</span>,nvar2);</span><br><span class="line">    fprintf(fid,<span class="string">'data type = 4\n'</span>);</span><br><span class="line">    fclose(fid);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="eigen2.m">eigen2.m</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[v,d]</span> = <span class="title">eigen2</span><span class="params">(a,b)</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">% function [v,d] = eigen2(a,b)</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% sort eigenvalues and -vectors by eigenvalue size</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Allan Aasbjerg Nielsen</span></span><br><span class="line"><span class="comment">% aa@imm.dtu.dk</span></span><br><span class="line"></span><br><span class="line">[v1,d1] = eig(a,b);</span><br><span class="line">d2 = <span class="built_in">diag</span>(d1);</span><br><span class="line">[dum,idx] = <span class="built_in">sort</span>(d2);</span><br><span class="line">v = v1(:,idx);</span><br><span class="line">d = <span class="built_in">diag</span>(d2(idx));</span><br></pre></td></tr></table></figure><h1 id="典型相关性分析代码mcca">典型相关性分析代码MCCA</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[A,B,C]</span> = <span class="title">mcca</span><span class="params">(X,Y,Z,m)</span></span></span><br><span class="line">x = <span class="number">0.01</span>;</span><br><span class="line">Z=double(Z);</span><br><span class="line">X=double(X);</span><br><span class="line">Y=double(Y);</span><br><span class="line"><span class="keyword">switch</span> m</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span></span><br><span class="line">        [A,rx,rx1] = svd(inv(X*X'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(X,<span class="number">1</span>)))*X*Y'*inv(Y*Y'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(Y,<span class="number">1</span>)))*Y*Z'*inv(Z*Z'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(Z,<span class="number">1</span>)))*Z*X');</span><br><span class="line">        [B,ry,ry1] = svd(inv(Y*Y'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(Y,<span class="number">1</span>)))*Y*Z'*inv(Z*Z'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(Z,<span class="number">1</span>)))*Z*X'*inv(X*X'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(X,<span class="number">1</span>)))*X*Y');</span><br><span class="line">        [C,rz,rz1] = svd(inv(Z*Z'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(Z,<span class="number">1</span>)))*Z*X'*inv(X*X'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(X,<span class="number">1</span>)))*X*Y'*inv(Y*Y'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(Y,<span class="number">1</span>)))*Y*Z');</span><br><span class="line">    <span class="keyword">case</span> <span class="number">12</span></span><br><span class="line">        [A,rx,rx1] = svd(inv(X*X'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(X,<span class="number">1</span>)))*X*Y'*inv(Y*Y'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(Y,<span class="number">1</span>)))*Y*X');</span><br><span class="line">        [B,ry,ry1] = svd(inv(Y*Y'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(Y,<span class="number">1</span>)))*Y*X'*inv(X*X'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(X,<span class="number">1</span>)))*X*Y');</span><br><span class="line">        C = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">13</span></span><br><span class="line">        [A,rx,rx1] = svd(inv(X*X'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(X,<span class="number">1</span>)))*X*Z'*inv(Z*Z'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(Z,<span class="number">1</span>)))*Z*X');</span><br><span class="line">        [C,rz,rz1] = svd(inv(Z*Z'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(Z,<span class="number">1</span>)))*Z*X'*inv(X*X'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(X,<span class="number">1</span>)))*X*Z');</span><br><span class="line">        B = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">23</span></span><br><span class="line">        A = <span class="number">0</span>;</span><br><span class="line">        [B,ry,ry1] = svd(inv(Y*Y'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(Y,<span class="number">1</span>)))*Y*Z'*inv(Z*Z'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(Z,<span class="number">1</span>)))*Z*Y');</span><br><span class="line">        [C,rz,rz1] = svd(inv(Z*Z'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(Z,<span class="number">1</span>)))*Z*Y'*inv(Y*Y'+x*<span class="built_in">eye</span>(<span class="built_in">size</span>(Y,<span class="number">1</span>)))*Y*Z');</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%CCAZ = phi_z'*Z;</span></span><br><span class="line"><span class="comment">%sp_fea = [CCA_X;CCA_Y;CCA_Z];</span></span><br><span class="line"><span class="comment">%sp_fea = [CCA_X;CCA_Y];</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://canoepassed.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/">数学建模相关性分析</category>
      
      
      <category domain="http://canoepassed.top/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/">数学建模</category>
      
      
      <comments>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/%E5%85%B8%E5%9E%8B%E7%9B%B8%E5%85%B3%E5%88%86%E6%9E%90/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>apriori相关性分析</title>
      <link>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/apriori%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/</link>
      <guid>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/apriori%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/</guid>
      <pubDate>Sat, 18 May 2024 04:44:44 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;apriori.m&quot;&gt;apriori.m&lt;/h2&gt;
&lt;figure class=&quot;highlight matlab&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;clear&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;load datacope;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data=datacope;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clear datacope;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;load datacopename&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name=datacopename;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clear datacopename&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[N,M]=&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;support=&lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;;                     &lt;span class=&quot;comment&quot;&gt;%支持度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;confidence=&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;;                  &lt;span class=&quot;comment&quot;&gt;%置信度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%%%%%%%%%%%%处理缺失数据%%%%%%%%%%%%%%%&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:N&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; data(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;)==&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           data(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;)=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%%%%%%%%%%计算频繁-1项集frequency1%%%%%%%%%%&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;freq=&lt;span class=&quot;built_in&quot;&gt;zeros&lt;/span&gt;(M,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:N&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; data(&lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;)==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            freq(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)=freq(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clear &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;disp&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;The frequent 1 itemset is :&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flag=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; freq(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;gt;=support*N&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flag=flag+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        data_f(:,flag)=data(:,&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;disp&lt;/span&gt;(name(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        frequency1(flag,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)=&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        item_1(flag,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)=&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        item_1(flag,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)=freq(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clear  &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt; flag freq&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%%%%%%%%%%%%%%计算二项及以上频繁集%%%%%%%%%%%%%&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;item_num=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:N&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    subset=generatesubset(frequency1,data_f(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,:));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [sub_n,sub_m]=&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;(subset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    max_item(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)=sub_m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:sub_n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:sub_m&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; subset(&lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;,k)~=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    item_num=item_num+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    itemset(item_num,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)=subset(&lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;,k);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    itemset(item_num,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:sub_n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:sub_m&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                condition=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; ii=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:item_num&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; subset(&lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;,k)==itemset(ii,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        itemset(ii,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)=itemset(ii,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        condition=condition+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; condition==item_num&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        item_num=item_num+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        itemset(item_num,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)=subset(&lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt;,k);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        itemset(item_num,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max_item=&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(max_item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;item_num=item_num&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;itemset=itemset(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:item_num,:);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;itemset=&lt;span class=&quot;built_in&quot;&gt;sortrows&lt;/span&gt;(itemset,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;item_change=itemset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clear itemset&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flag=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:item_num&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; item_change(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&amp;gt;=support*N&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flag=flag+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        itemset(flag,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)=item_change(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        itemset(flag,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)=item_change(&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;item_num=flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clear sub_n sub_m subset &lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;j&lt;/span&gt; k ii  condition item_change flag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="apriori.m">apriori.m</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">clear</span><br><span class="line">clc</span><br><span class="line">load datacope;</span><br><span class="line">data=datacope;</span><br><span class="line">clear datacope;</span><br><span class="line">load datacopename</span><br><span class="line">name=datacopename;</span><br><span class="line">clear datacopename</span><br><span class="line">[N,M]=<span class="built_in">size</span>(data);</span><br><span class="line">support=<span class="number">0.3</span>;                     <span class="comment">%支持度</span></span><br><span class="line">confidence=<span class="number">0.5</span>;                  <span class="comment">%置信度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%%%%%%处理缺失数据%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:N</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:M</span><br><span class="line">        <span class="keyword">if</span> data(<span class="built_in">i</span>,<span class="built_in">j</span>)==<span class="number">9</span> </span><br><span class="line">           data(<span class="built_in">i</span>,<span class="built_in">j</span>)=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%%%%计算频繁-1项集frequency1%%%%%%%%%%</span></span><br><span class="line">freq=<span class="built_in">zeros</span>(M,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:M</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:N</span><br><span class="line">        <span class="keyword">if</span> data(<span class="built_in">j</span>,<span class="built_in">i</span>)==<span class="number">1</span></span><br><span class="line">            freq(<span class="built_in">i</span>,<span class="number">1</span>)=freq(<span class="built_in">i</span>,<span class="number">1</span>)+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">clear <span class="built_in">i</span> <span class="built_in">j</span></span><br><span class="line"><span class="built_in">disp</span>(<span class="string">'The frequent 1 itemset is :'</span>);</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:M</span><br><span class="line">    <span class="keyword">if</span> freq(<span class="built_in">i</span>,<span class="number">1</span>)&gt;=support*N</span><br><span class="line">        flag=flag+<span class="number">1</span>;</span><br><span class="line">        data_f(:,flag)=data(:,<span class="built_in">i</span>);</span><br><span class="line">        <span class="built_in">disp</span>(name(<span class="built_in">i</span>,<span class="number">1</span>))</span><br><span class="line">        frequency1(flag,<span class="number">1</span>)=<span class="built_in">i</span>;</span><br><span class="line">        item_1(flag,<span class="number">1</span>)=<span class="built_in">i</span>;</span><br><span class="line">        item_1(flag,<span class="number">2</span>)=freq(<span class="built_in">i</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">clear  <span class="built_in">i</span> flag freq</span><br><span class="line"><span class="comment">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%%%%%%%%计算二项及以上频繁集%%%%%%%%%%%%%</span></span><br><span class="line">item_num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:N</span><br><span class="line">    subset=generatesubset(frequency1,data_f(<span class="built_in">i</span>,:));</span><br><span class="line">    [sub_n,sub_m]=<span class="built_in">size</span>(subset);</span><br><span class="line">    max_item(<span class="built_in">i</span>,<span class="number">1</span>)=sub_m;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">i</span>==<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:sub_n</span><br><span class="line">            <span class="keyword">for</span> k=<span class="number">1</span>:sub_m</span><br><span class="line">                <span class="keyword">if</span> subset(<span class="built_in">j</span>,k)~=<span class="number">0</span></span><br><span class="line">                    item_num=item_num+<span class="number">1</span>;</span><br><span class="line">                    itemset(item_num,<span class="number">1</span>)=subset(<span class="built_in">j</span>,k);</span><br><span class="line">                    itemset(item_num,<span class="number">2</span>)=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">i</span>&gt;<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:sub_n</span><br><span class="line">            <span class="keyword">for</span> k=<span class="number">1</span>:sub_m</span><br><span class="line">                condition=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> ii=<span class="number">1</span>:item_num</span><br><span class="line">                    <span class="keyword">if</span> subset(<span class="built_in">j</span>,k)==itemset(ii,<span class="number">1</span>)</span><br><span class="line">                        itemset(ii,<span class="number">2</span>)=itemset(ii,<span class="number">2</span>)+<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        condition=condition+<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">if</span> condition==item_num</span><br><span class="line">                        item_num=item_num+<span class="number">1</span>;</span><br><span class="line">                        itemset(item_num,<span class="number">1</span>)=subset(<span class="built_in">j</span>,k);</span><br><span class="line">                        itemset(item_num,<span class="number">2</span>)=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">max_item=<span class="built_in">max</span>(max_item);</span><br><span class="line">item_num=item_num<span class="number">-1</span>;</span><br><span class="line">itemset=itemset(<span class="number">1</span>:item_num,:);</span><br><span class="line">itemset=<span class="built_in">sortrows</span>(itemset,<span class="number">1</span>);</span><br><span class="line">item_change=itemset;</span><br><span class="line">clear itemset</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:item_num</span><br><span class="line">    <span class="keyword">if</span> item_change(<span class="built_in">i</span>,<span class="number">2</span>)&gt;=support*N</span><br><span class="line">        flag=flag+<span class="number">1</span>;</span><br><span class="line">        itemset(flag,<span class="number">1</span>)=item_change(<span class="built_in">i</span>,<span class="number">1</span>);</span><br><span class="line">        itemset(flag,<span class="number">2</span>)=item_change(<span class="built_in">i</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">item_num=flag;</span><br><span class="line">clear sub_n sub_m subset <span class="built_in">i</span> <span class="built_in">j</span> k ii  condition item_change flag</span><br><span class="line"><span class="comment">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="generatesubset.m">generatesubset.m</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">itemset</span>=<span class="title">generatesubset</span><span class="params">(frequency1,data)</span></span></span><br><span class="line">M=<span class="built_in">length</span>(data);</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:M</span><br><span class="line">    <span class="keyword">if</span> data(<span class="number">1</span>,<span class="built_in">j</span>)~=<span class="number">0</span></span><br><span class="line">        flag=flag+<span class="number">1</span>;</span><br><span class="line">        index(<span class="number">1</span>,flag)=frequency1(<span class="built_in">j</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> flag&lt;=<span class="number">1</span></span><br><span class="line">    itemset=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">for</span> k=<span class="number">2</span>:flag</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:k</span><br><span class="line">            flag_a=<span class="number">0</span>;</span><br><span class="line">            flag_b=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:flag</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">i</span>==<span class="number">1</span></span><br><span class="line">                    flag_a=flag_a+<span class="number">1</span>;</span><br><span class="line">                    item(flag_a,<span class="number">1</span>)=index(<span class="number">1</span>,flag_a)*<span class="number">10</span>^(k-<span class="built_in">i</span>);</span><br><span class="line">                    itm(flag_a,<span class="number">1</span>)=index(<span class="number">1</span>,flag_a);</span><br><span class="line">                    leng(<span class="built_in">i</span>)=<span class="built_in">length</span>(itm(:,<span class="built_in">i</span>));</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">i</span>&gt;<span class="number">1</span></span><br><span class="line">                    flag_a=flag_a+<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">for</span> m=<span class="number">1</span>:leng(<span class="built_in">i</span><span class="number">-1</span>)</span><br><span class="line">                        <span class="keyword">if</span> index(<span class="number">1</span>,flag_a)&gt;it(m,<span class="number">1</span>)</span><br><span class="line">                            flag_b=flag_b+<span class="number">1</span>;</span><br><span class="line">                            item(flag_b,<span class="built_in">i</span>)=item(m,<span class="built_in">i</span><span class="number">-1</span>)+index(<span class="number">1</span>,flag_a)*<span class="number">10</span>^(k-<span class="built_in">i</span>);</span><br><span class="line">                            itm(flag_b,<span class="number">1</span>)=index(<span class="number">1</span>,flag_a);</span><br><span class="line">                            leng(<span class="built_in">i</span>,<span class="number">1</span>)=<span class="built_in">length</span>(itm(:,<span class="number">1</span>));</span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            it=itm;</span><br><span class="line">            clear itm</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        itemset(<span class="number">1</span>:leng(<span class="built_in">i</span>,<span class="number">1</span>),k<span class="number">-1</span>)=item(<span class="number">1</span>:leng(<span class="built_in">i</span>,<span class="number">1</span>),k);</span><br><span class="line">        clear item</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">itemset=itemset;</span><br><span class="line"></span><br><span class="line"><span class="comment">% for k=2:flag</span></span><br><span class="line"><span class="comment">%     flag_b=0;</span></span><br><span class="line"><span class="comment">%     for i=1:k</span></span><br><span class="line"><span class="comment">%         flag_a=0;</span></span><br><span class="line"><span class="comment">%         for j=1:flag</span></span><br><span class="line"><span class="comment">%             if i==1</span></span><br><span class="line"><span class="comment">%                 flag_a=flag_a+1;</span></span><br><span class="line"><span class="comment">%                 ite(flag_a,1)=index(1,j);</span></span><br><span class="line"><span class="comment">%                 itm(flag_a,i)=ite(flag_a,1);</span></span><br><span class="line"><span class="comment">%                 len(1,1)=0;</span></span><br><span class="line"><span class="comment">%                 flag_b=flag_b+1;</span></span><br><span class="line"><span class="comment">%                 item(flag_b,1)=ite(flag_a,1)*10^(k-i);</span></span><br><span class="line"><span class="comment">%                 ittt=itm;</span></span><br><span class="line"><span class="comment">%             end</span></span><br><span class="line"><span class="comment">%             if i&gt;1</span></span><br><span class="line"><span class="comment">%                 flag_a=flag_a+1;</span></span><br><span class="line"><span class="comment">%                 ite(flag_a,1)=index(1,j);</span></span><br><span class="line"><span class="comment">%                 itm(flag_a,i)=it(j,1);</span></span><br><span class="line"><span class="comment">%                 len_a=0;</span></span><br><span class="line"><span class="comment">%                 for ii=1:length(item(:,i-1))</span></span><br><span class="line"><span class="comment">%                     if item(ii,i-1)~=0</span></span><br><span class="line"><span class="comment">%                         len_a=len_a+1;</span></span><br><span class="line"><span class="comment">%                     end</span></span><br><span class="line"><span class="comment">%                 end</span></span><br><span class="line"><span class="comment">%                 len(i,1)=len(i-1,1)+len_a;</span></span><br><span class="line"><span class="comment">%                 flag_d=0;</span></span><br><span class="line"><span class="comment">%                 for ii=1:length(item(:,i-1))</span></span><br><span class="line"><span class="comment">%                     if item(ii,i-1)~=0</span></span><br><span class="line"><span class="comment">%                         flag_d=flag_d+1;</span></span><br><span class="line"><span class="comment">%                     end</span></span><br><span class="line"><span class="comment">%                 end</span></span><br><span class="line"><span class="comment">%                 for m=1:flag_d</span></span><br><span class="line"><span class="comment">%                     if ite(flag_a,1)&gt;it(m,1)</span></span><br><span class="line"><span class="comment">%                         flag_b=flag_b+1;</span></span><br><span class="line"><span class="comment">%                         item(flag_b,i)=item(len(i-1)+m,i-1)+ite(flag_a,1)*10^(k-i);</span></span><br><span class="line"><span class="comment">%                         ittt(flag_b-flag_d,1)=ite(flag_a,1);</span></span><br><span class="line"><span class="comment">%                     end</span></span><br><span class="line"><span class="comment">%                 end </span></span><br><span class="line"><span class="comment">%             %    clear m</span></span><br><span class="line"><span class="comment">%             end</span></span><br><span class="line"><span class="comment">%         end</span></span><br><span class="line"><span class="comment">%         flag_f=0;</span></span><br><span class="line"><span class="comment">%         for ii=1:length(ittt(:,1))</span></span><br><span class="line"><span class="comment">%             if ittt(ii,1)~=0</span></span><br><span class="line"><span class="comment">%                 flag_f=flag_f+1;</span></span><br><span class="line"><span class="comment">%                 itt(flag_f,1)=ittt(ii,1);</span></span><br><span class="line"><span class="comment">%             end</span></span><br><span class="line"><span class="comment">%         end</span></span><br><span class="line"><span class="comment">%         it=itt;</span></span><br><span class="line"><span class="comment">%     end</span></span><br><span class="line"><span class="comment">%     flag_e=0;</span></span><br><span class="line"><span class="comment">%     for ii=1:length(item(:,k))</span></span><br><span class="line"><span class="comment">%         if item(ii,k)~=0</span></span><br><span class="line"><span class="comment">%             flag_e=flag_e+1;</span></span><br><span class="line"><span class="comment">%         end</span></span><br><span class="line"><span class="comment">%     end</span></span><br><span class="line"><span class="comment">%     itemset(1:flag_e,k-1)=item(len(k)+1:flag_b,k);</span></span><br><span class="line"><span class="comment">%     clear item ite itm i j len flag_a flag_b flag_d flag_e ii itt ittt</span></span><br><span class="line"><span class="comment">% end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="readdata.m">readdata.m</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">clear</span><br><span class="line">datacope=xlsread(<span class="string">'05 COPD总体106变量20080712.xls'</span>,<span class="string">'变量分有无数据库'</span>,<span class="string">'g2:l1554'</span>);</span><br><span class="line">save datacope;</span><br><span class="line">clear datacope;</span><br><span class="line"></span><br><span class="line">[numeric,datacopename]=xlsread(<span class="string">'05 COPD总体106变量20080712.xls'</span>,<span class="string">'变量名称代码'</span>,<span class="string">'b8:b13'</span>);</span><br><span class="line">clear numeric</span><br><span class="line">save datacopename;</span><br><span class="line">clear datacopename;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://canoepassed.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/">数学建模相关性分析</category>
      
      
      <category domain="http://canoepassed.top/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/">数学建模</category>
      
      
      <comments>http://canoepassed.top/2024/05/18/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/apriori%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
